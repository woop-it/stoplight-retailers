{
  "openapi": "3.0.2",
  "tags": [
    {
      "name": "Commande"
    },
    {
      "name": "Etiquette"
    },
    {
      "name": "Document"
    },
    {
      "name": "Collecte"
    },
    {
      "name": "Health"
    },
    {
      "name": "Retour produit"
    },
    {
      "name": "Point relais"
    },
    {
      "name": "Souscriptions"
    },
    {
      "name": "Éligibilité"
    }
  ],
  "info": {
    "title": "Enseigne vers Woop",
    "description": "Pour commencer, toutes les informations technique concernant les API Woop à destination des enseignes sont centralisées dans cette documentation. Pour toute question ou précision, merci de contacter l'équipe technique interne. \n\nPour utiliser les API \"Enseigne vers Woop\", vous devez vous munir des vos accès identifiants secret fournis lors de la création de votre compte enseigne au sein de la palteforme. \n\nLa version actuellement proposée dans la documentation est la <b>Version 1.4.0</b>",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://ret-api.recette.gcp.last-mile.fr",
      "description": "URL de recette"
    },
    {
      "url": "https://ret-api.preprod.gcp.last-mile.fr",
      "description": "URL de preprod"
    },
    {
      "url": "https://retailer.last-mile.fr",
      "description": "URL de prod"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Contrôle si l'application est opérationnelle",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "Le service est opérationnel"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "/collects": {
      "post": {
        "tags": [
          "Collecte"
        ],
        "description": "Cette méthode permet d’effectuer une demande de retrait Click&Collect dans un emplacement de prélèvement précis. Dès la demande validée et le créneau de réservation sélectionné, l’ordre de retrait sera créé instantanément.",
        "operationId": "postCollects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de création de la demande de retrait.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCollects"
              },
              "examples": {
                "Exemple mode standard (avec réservation du créneau au préalable)": {
                  "value": {
                    "mode": "standard",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6",
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL Jaune",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "Exemple mode express (sans réservation au préalable)": {
                  "value": {
                    "mode": "express",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "slot": {
                      "start": "2021-03-18T14:00:00.000Z",
                      "end": "2021-03-18T14:30:00.000Z"
                    },
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL Jaune",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "Exemple mode delay": {
                  "value": {
                    "mode": "delay",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL Jaune",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Création de la demande de retrait réussie"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément"
          },
          "403": {
            "description": "Création de demande de retrait impossible\n\n[Voir la liste des raisons](https://woop.stoplight.io/docs/retailer/docs/Mod%C3%A8les/reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Une demande de retrait avec cette réference existe dèjà dans la plateforme.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Request failed with status code 409"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Créer une collecte"
      }
    },
    "/slots": {
      "get": {
        "summary": "Récupérer les créneaux disponibles",
        "description": "Cette méthode permet de récupérer les créneaux disponibles pour une demande de retrait Click&Collect dans un emplacement de prélèvement précis.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryExchangePlaceIdRequired"
          },
          {
            "$ref": "#/components/parameters/queryFromDateSlots"
          },
          {
            "$ref": "#/components/parameters/queryToDateSlots"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "number",
            "description": "Nombre de créneaux disponibles"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": " minRemainingCapacity",
            "description": "Capacité minimale autorisée "
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient les créneaux disponibles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "slots"
                  ],
                  "properties": {
                    "slots": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/availableSlot"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "slots": [
                        {
                          "start": "2021-04-20T08:00:00+0000",
                          "end": "2021-04-20T08:30:00+0000",
                          "remainingCapacity": 4
                        },
                        {
                          "start": "2021-04-20T08:30:00+0000",
                          "end": "2021-04-20T09:00:00+0000",
                          "remainingCapacity": 5
                        },
                        {
                          "start": "2021-04-20T09:00:00+0000",
                          "end": "2021-04-20T09:30:00+0000",
                          "remainingCapacity": 1
                        },
                        {
                          "start": "2021-04-20T09:30:00+0000",
                          "end": "2021-04-20T10:00:00+0000",
                          "remainingCapacity": 2
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans les query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Demande impossible pour le 'storeId' ou 'exchangePlaceId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getSlots",
        "tags": [
          "Collecte"
        ]
      }
    },
    "/bookings": {
      "post": {
        "summary": "Réserver un créneau de retrait",
        "description": "Cette méthode permet de réserver un créneau disponible pour une demande de retrait Click&Collect dans un emplacement de prélèvement précis.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCollectsBookings"
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "exchangePlaceId": "COLLECT01",
                    "slot": {
                      "start": "2021-04-20T08:00:00+0000",
                      "end": "2021-04-20T08:30:00+0000"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Requête traitée avec succès, créneau réservé",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookingId": {
                      "type": "string",
                      "description": "Identifiant de la réservation."
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Demande impossible pour cet 'exchangePlaceId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Le créneau est déjà réservé"
          }
        },
        "operationId": "postBookings",
        "tags": [
          "Collecte"
        ]
      }
    },
    "/bookings/{bookingId}": {
      "delete": {
        "summary": "Annuler la réservation d'un créneau de retrait",
        "description": "Cette méthode permet d'annuler la réservation d'un créneau pour une demande de retrait Click&Collect dans un emplacement de prélèvement précis.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "bookingId",
            "in": "path",
            "required": true,
            "description": "Identifiant de la réservation"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Requête traitée avec succès, créneau annulé"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Le 'bookingId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteBookings",
        "tags": [
          "Collecte"
        ]
      }
    },
    "/collects/{collectId}": {
      "patch": {
        "description": "Cette méthode permet de modifier une demande de collecte initialement créée par l’enseigne.",
        "operationId": "patchCollects",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "collectId",
            "in": "path",
            "required": true,
            "description": "Identifiant de la collecte"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de modification d'une demande de retrait.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchCollects"
              },
              "examples": {
                "Exemple modification du créneau avec réservation": {
                  "value": {
                    "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6"
                  }
                },
                "Exemple modification du créneau sans réservation": {
                  "value": {
                    "slot": {
                      "start": "2021-03-18T14:00:00.000Z",
                      "end": "2021-03-18T14:30:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Modification de la demande de retrait réussie"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément"
          },
          "404": {
            "description": "Le 'collectId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Modifier une collecte",
        "tags": [
          "Collecte"
        ]
      },
      "delete": {
        "description": "Cette méthode permet d’annuler une demande de collecte initialement créée par l’enseigne.\n\nLa méthode permet de supprimer la réservation du créneau ainsi que la demande d'enlèvement auprès du magasin. \n",
        "operationId": "deleteCollects",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "collectId",
            "in": "path",
            "required": true,
            "description": "Identifiant de la collecte"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Requête traitée avec succès, demande de retrait annulé"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Le 'collectId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Annuler une collecte",
        "tags": [
          "Collecte"
        ]
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Commande"
        ],
        "description": "Cette méthode permet de créer une commande côté Woop.\nDès la commande validée, un ensemble de devis sera envoyé aux différents transporteurs. L'ordre de transport sera alors créé lorsque l’un des devis aura été validé.",
        "operationId": "postOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de création de la commande.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postOrders"
              },
              "examples": {
                "Exemple par défaut": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Exemple avec assemblage": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currrency": "EUR"
                    }
                  }
                },
                "Exemple de livraison point relais": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "36JGZ7"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "19GON"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Exemple de livraison en point de prélèvement": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 2"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currrency": "EUR"
                    }
                  }
                },
                "Exemple avec choix du transporteur": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "tags": [
                      {
                        "key": "selected_carrier",
                        "value": "carrier_code"
                      }
                    ],
                    "services": [
                      "SERVICE_FRONT_HOME"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "la commande a bien été enregistrée"
          },
          "202": {
            "description": "la commande doit être complétée"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"picking\" fails because [child \"interval\" fails because [\"interval\" at position 0 fails because [child \"start\" fails because [\"start\" is required]]]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "picking.interval.0.start"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Création de l'ordre impossible\n\n[Voir la liste des raisons](https://woop.stoplight.io/docs/retailer/docs/Mod%C3%A8les/reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Création de commande avec cet 'orderId' impossible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Conflict"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Créer une commande"
      },
      "get": {
        "tags": [
          "Commande"
        ],
        "description": "Cette méthode retourne les détails d'une ou de plusieurs commandes en fonction des filtres sélectionnés.",
        "operationId": "getOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryDeliveryStatus"
          },
          {
            "$ref": "#/components/parameters/queryPickingDate"
          },
          {
            "$ref": "#/components/parameters/queryStoreIdRequired"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient les commandes récupérées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder"
                },
                "examples": {
                  "Exemple par défaut": {
                    "value": {
                      "orders": [
                        {
                          "delivery": {
                            "externalDeliveryId": "123457",
                            "currentStatus": "DELIVERY_DELIVERED_OK",
                            "updatedAt": "2019-12-03T15:25:00+0000",
                            "interval": {
                              "start": "2019-12-03T15:00:00+0000",
                              "end": "2019-12-03T16:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "price": {
                            "price": 15.12,
                            "currency": "EUR"
                          },
                          "order": {
                            "id": "q54zd65qzd465qz4d",
                            "currentStatus": "ORDER_DELIVERED",
                            "updatedAt": "2019-12-03T15:25:00+0000",
                            "referenceNumber": "q54zd65qzd465qz4d"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-02T13:00:00+0000",
                              "end": "2019-12-02T15:00:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "1324",
                              "reference": "B8413DD"
                            }
                          ]
                        },
                        {
                          "delivery": {
                            "externalDeliveryId": "123456",
                            "currentStatus": "DELIVERY_INIT",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "interval": {
                              "start": "2019-12-07T12:00:00+0000",
                              "end": "2019-12-07T14:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "order": {
                            "id": "65z4eq1d6q54zd1",
                            "currentStatus": "ORDER_CREATED",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "referenceNumber": "65q41zdq65z14"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-06T13:30:00+0000",
                              "end": "2019-12-06T15:30:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "999",
                              "reference": "1323A"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Elements manquants et/ou incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"deliveryStatus\" fails because [\"deliveryStatus\" must be one of [DELIVERY_INIT]]",
                      "validation": {
                        "source": "query",
                        "keys": [
                          "deliveryStatus"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Demande impossible pour ce 'storeId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer des commandes"
      }
    },
    "/orders/{orderId}": {
      "delete": {
        "tags": [
          "Commande"
        ],
        "description": "Annulation d'une commande",
        "operationId": "deleteOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations d'annulation de la commande.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reasons"
                ],
                "properties": {
                  "reasons": {
                    "description": "Motifs d’annulation",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/cancelledReasons"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Commentaire optionnel à ajouté si besoin lors de l’annulation"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "L'annulation a bien été prise en compte, mais peut engendrer des frais supplémentaires"
          },
          "204": {
            "description": "Requête traitée avec succès"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "la commande ne peut être annulée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Le 'orderId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "La commande est déjà annulée"
          }
        },
        "summary": "Annuler une commande"
      },
      "get": {
        "tags": [
          "Commande"
        ],
        "description": "Cette méthode retourne le détail d'une commande.",
        "operationId": "getOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient la commande récupérée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "orders": [
                        {
                          "delivery": {
                            "externalDeliveryId": "123456",
                            "currentStatus": "DELIVERY_INIT",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "interval": {
                              "start": "2019-12-07T12:00:00+0000",
                              "end": "2019-12-07T14:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "price": {
                            "price": 15.12,
                            "currency": "EUR"
                          },
                          "order": {
                            "id": "65z4eq1d6q54zd1",
                            "currentStatus": "ORDER_CREATED",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "referenceNumber": "65q41zdq65z14"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-06T13:30:00+0000",
                              "end": "2019-12-06T15:30:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "999",
                              "reference": "A123"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Récupérer une commande spécifique"
      },
      "patch": {
        "tags": [
          "Commande"
        ],
        "description": "Cette méthode permet de modifier une commande. La mise à jour peut déclencher une annulation de la commande + création d’une nouvelle commande si les informations modifiées sont jugées importantes ou non et impacte directement la livraison.",
        "operationId": "patchOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de mise à jour.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderId",
                  "storeId",
                  "picking",
                  "delivery",
                  "services",
                  "packages"
                ],
                "properties": {
                  "picking": {
                    "description": "Informations de l'emplacement de prélèvement",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  },
                  "delivery": {
                    "description": "Informations de l'emplacement de livraison",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  },
                  "packages": {
                    "type": "array",
                    "description": "Ensemble des colis",
                    "items": {
                      "$ref": "#/components/schemas/packages"
                    }
                  },
                  "services": {
                    "$ref": "#/components/schemas/services"
                  }
                }
              },
              "examples": {
                "Exemple": {
                  "value": {
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont"
                      },
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requête traitée avec succès"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Mise à jour de l'ordre impossible\n\n[Voir la liste des raisons](https://woop.stoplight.io/docs/retailer/docs/Mod%C3%A8les/reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Modifier une commande"
      }
    },
    "/orders/{orderId}/label": {
      "get": {
        "tags": [
          "Etiquette"
        ],
        "description": "Cette méthode permet de récupérer une étiquette de transport en fonction de l'identifiant de la commande. \nL’étiquette peut être récupérée sous plusieurs formats (à condition que le transporteur soit compatible avec ce format).",
        "operationId": "getLabelByOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient l'étiquette récupérée.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Informations de l'étiquette",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "description": "L’étiquette est retournée en base64 au format indiqué lors de l’appel"
                    },
                    "trackingPageUrl": {
                      "type": "string",
                      "description": "Lien de la page de suivi de livraison"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingPageUrl"
                  ]
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingPageUrl:": "https://url_suivi_livraison"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Demande impossible pour ce 'orderId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Le 'orderId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer une étiquette de transport pour une commande"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Identifiant de la commande"
        }
      ]
    },
    "/orders/{orderId}/return": {
      "post": {
        "tags": [
          "Retour produit"
        ],
        "description": "Cette méthode permet d'effectuer une demande de retour de produit d'une commande.",
        "operationId": "postProductReturn",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations de la demande de retour produit.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/postProductReturn"
                  }
                ]
              },
              "examples": {
                "Exemple par défaut": {
                  "value": {
                    "orderReturnId": "65z4eq1d6q54zd1",
                    "initialReferenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "initialCarrier": true,
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:00:00+0000",
                          "end": "2019-11-28T15:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Le retour a bien été enregistrée"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Création d'un retour impossible ou l'état de la commande ne permet pas un retour produit\n\n[Voir la liste des raisons](https://woop.stoplight.io/docs/retailer/docs/Mod%C3%A8les/reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Création de retour de produit avec ce 'referenceNumber' impossible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Effectuer un retour produit"
      }
    },
    "/orders/{orderId}/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "Cette méthode permet de récupérer les informations des documents attachés à une commande.",
        "operationId": "getOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient les documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "description": "Liste des documents",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Identifiant du document"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date du document"
                          },
                          "name": {
                            "type": "string",
                            "description": "Nom du document"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type de document",
                            "enum": [
                              "EVIDENCE",
                              "INVOICE",
                              "CONTRACT"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "documents": [
                        {
                          "id": "5efda342ajkj700012064b57",
                          "date": "2020-07-02T09:05:06.361Z",
                          "type": "EVIDENCE",
                          "name": "picture_1593680706.pdf"
                        },
                        {
                          "id": "5efda342ajkj700012064b55",
                          "date": "2020-07-02T09:06:06.361Z",
                          "type": "INVOICE",
                          "name": "invoice_1593680706.pdf"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Pas de documents sur cette commande"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Le 'orderId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer les documents d'une commande"
      }
    },
    "/orders/{orderId}/documents/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "Cette méthode permet de télécharger les documents de la commande en zip.",
        "operationId": "downloadOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient les documents au format zip.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": ""
                },
                "examples": {}
              }
            }
          },
          "204": {
            "description": "Pas de documents sur cette commande."
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Le 'orderId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Télécharger les documents d'une commande"
      }
    },
    "/orders/{orderId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "Cette méthode permet de télécharger un document d'une commande",
        "operationId": "downloadOrderDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/pathDocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient le document au format original du document",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Le 'orderId' ou 'documentId' n'existe pas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Télécharger un document pour une commande"
      }
    },
    "/pickupPoints": {
      "get": {
        "tags": [
          "Point relais"
        ],
        "description": "Cette méthode permet de récupérer la liste des point relais des transporteurs situés autour d’une géolocalisation donnée.\n\n[Voir l'explication](https://woop.stoplight.io/docs/retailer/docs/Mod%C3%A8les/Gestion-des-PR.md)",
        "operationId": "getPickupPoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryLatitude"
          },
          {
            "$ref": "#/components/parameters/queryLongitude"
          },
          {
            "$ref": "#/components/parameters/queryNumber"
          },
          {
            "$ref": "#/components/parameters/queryKilometricDistance"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointType"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCategory"
          },
          {
            "$ref": "#/components/parameters/queryStoreId"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCarrierCode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contient les point relais récupérés.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickupPoints": {
                      "type": "array",
                      "description": "Informations sur les point relais",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/address"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ]
                              }
                            ],
                            "description": "Adresse du point relais"
                          },
                          "coordinates": {
                            "$ref": "#/components/schemas/coordinates"
                          },
                          "id": {
                            "type": "string",
                            "description": "Id du point relais"
                          },
                          "carrier": {
                            "$ref": "#/components/schemas/pickupPointCarrier"
                          },
                          "externalCategory": {
                            "type": "string",
                            "example": "Cat1",
                            "description": "Retourne la catégorie du point relais comme nommée chez le transporteur."
                          },
                          "openingHours": {
                            "type": "object",
                            "description": "Horaires d'ouverture du point relais",
                            "properties": {
                              "monday": {
                                "type": "array",
                                "description": "Horaires du lundi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "tuesday": {
                                "type": "array",
                                "description": "Horaires du mardi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "wednesday": {
                                "type": "array",
                                "description": "Horaires du mercredi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "thursday": {
                                "type": "array",
                                "description": "Horaires du jeudi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "friday": {
                                "type": "array",
                                "description": "Horaires du vendredi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "saturday": {
                                "type": "array",
                                "description": "Horaires du samedi",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "sunday": {
                                "type": "array",
                                "description": "Horaires du dimanche",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              }
                            }
                          },
                          "maxWeight": {
                            "$ref": "#/components/schemas/mass"
                          }
                        },
                        "required": [
                          "address",
                          "coordinates",
                          "id",
                          "carrier",
                          "openingHours",
                          "maxWeight"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "pickupPoints": [
                        {
                          "address": {
                            "addressLine1": "168 RUE DES POSTES",
                            "postalCode": "59000",
                            "city": "Lille",
                            "country": "FR",
                            "title": "Point relais"
                          },
                          "coordinates": {
                            "latitude": 50.638386,
                            "longitude": 3.077183
                          },
                          "id": "q251zd564qz",
                          "carrier": {
                            "code": "transporteur1",
                            "name": "Transporteur A"
                          },
                          "externalMinimalCategory": "24R",
                          "openingHours": {
                            "monday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "tuesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "wednesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "thursday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "friday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "saturday": [
                              {
                                "start": "08:00",
                                "end": "16:00"
                              }
                            ],
                            "sunday": [
                              {
                                "start": "08:00",
                                "end": "12:00"
                              }
                            ]
                          },
                          "maxWeight": {
                            "value": 250,
                            "unit": "kg"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Demande impossible pour le 'storeId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Rechercher un ensemble de point-relais"
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Souscriptions"
        ],
        "description": "Cette méthode permet d'initialiser les souscriptions à nos APIs.\n\nPlus d'informations dans la documentation dédiée \"Souscriptions\"",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contient les informations des souscriptions.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Informations de souscriptions",
                "required": [
                  "callbacks"
                ],
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "description": "Callbacks des événements",
                    "required": [
                      "carrier",
                      "status",
                      "score"
                    ],
                    "properties": {
                      "carrier": {
                        "type": "object",
                        "description": "Callback permettant de recevoir le choix du transporteur.",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "required": [
                          "url"
                        ],
                        "description": "Callback permettant de recevoir les changements de statut",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "score": {
                        "type": "object",
                        "description": "Callback permettant de recevoir les notes client",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback.",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "deliveryClosure": {
                        "type": "object",
                        "description": "Callback permettant de recevoir les informations de facturation",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "event": {
                        "type": "object",
                        "description": "Callback permettant de recevoir les notifications envoyées au client",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "collectStatus": {
                        "type": "object",
                        "description": "Callback permettant de recevoir les changements de statut d'une collecte",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Url de la route d'API"
                          },
                          "version": {
                            "type": "string",
                            "description": "Version d'API pour ce callback",
                            "example": "1.1.0"
                          }
                        }
                      }
                    }
                  },
                  "headers": {
                    "type": "array",
                    "description": "Headers HTTP supplémentaires à envoyer lors des callbacks",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Clé/nom du header"
                        },
                        "value": {
                          "type": "string",
                          "description": "Valeur du header"
                        }
                      }
                    }
                  },
                  "auth": {
                    "type": "object",
                    "description": "Configuration de l'authentification à votre API",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "description": "A definir si la méthode d'authentification à l'API voulue est basic",
                        "required": [
                          "username",
                          "password"
                        ],
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      },
                      "oauth2": {
                        "type": "object",
                        "description": "A definir si la méthode d'authentification à l'API voulue est oauth2",
                        "required": [
                          "client_id",
                          "client_secret",
                          "tokenEndPoint"
                        ],
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "client_secret": {
                            "type": "string"
                          },
                          "audience": {
                            "type": "string"
                          },
                          "grant_type": {
                            "type": "string"
                          },
                          "tokenEndPoint": {
                            "type": "string",
                            "description": "Url permettant de recupérer le token d'accès en fonction du clientId et du clientSecret"
                          }
                        }
                      },
                      "token": {
                        "type": "object",
                        "description": "A définir si la méthode d'authentification donne un bearer token à partir d'un username/password",
                        "required": [
                          "username",
                          "password",
                          "endpoint"
                        ],
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "Url permettant de recupérer le token d'accès"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KJK13I7Y12"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "oAuth2ClientCredentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Initialisation souscriptions"
      }
    },
    "/eligibilities": {
      "post": {
        "summary": "Éligibilité des transporteurs et services",
        "operationId": "postEligibilities",
        "responses": {
          "200": {
            "description": "Liste des transporteurs et services éligibles.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Liste des transporteurs et services éligibles",
                  "properties": {
                    "eligibilities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "carrier",
                          "service",
                          "price",
                          "delay"
                        ],
                        "properties": {
                          "carrier": {
                            "type": "object",
                            "description": "Transporteur éligible",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Nom du transporteur"
                              },
                              "code": {
                                "type": "string",
                                "description": "Code interne du transporteur"
                              }
                            }
                          },
                          "service": {
                            "$ref": "#/components/schemas/deliveryService"
                          },
                          "types": {
                            "type": "array",
                            "description": "Liste des types des point relais éligibles (pour le service SERVICE_PICKUP_POINT)",
                            "items": {
                              "$ref": "#/components/schemas/pickupPointType"
                            }
                          },
                          "categories": {
                            "type": "array",
                            "description": "Liste des catégories des point relais éligibles (pour le service SERVICE_PICKUP_POINT)",
                            "items": {
                              "$ref": "#/components/parameters/queryPickupPointCategory"
                            }
                          },
                          "price": {
                            "type": "object",
                            "description": "Prix du service",
                            "required": [
                              "price",
                              "currency"
                            ],
                            "properties": {
                              "price": {
                                "type": "number"
                              },
                              "currency": {
                                "$ref": "#/components/schemas/currency"
                              }
                            }
                          },
                          "delay": {
                            "type": "object",
                            "description": "Délai d'execution du service",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "unit": {
                                "type": "enum",
                                "enum": [
                                  "day",
                                  "hour"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Exemple": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "bpost",
                            "name": "Bpost"
                          },
                          "service": "SERVICE_PICKUP_POINT",
                          "types": [
                            "PICKUP_POINT_AGENCY",
                            "PICKUP_POINT_POST_OFFICE",
                            "PICKUP_POINT_RELAY_WITH_LOCKER",
                            "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                            "PICKUP_POINT_ALL"
                          ],
                          "categories": [
                            "PICKUP_POINT_STANDARD",
                            "PICKUP_POINT_XL",
                            "PICKUP_POINT_XXL",
                            "PICKUP_POINT_DRIVE"
                          ],
                          "price": {
                            "value": 2.99,
                            "currency": "EUR"
                          },
                          "delay": {
                            "value": 3,
                            "unit": "day"
                          }
                        },
                        {
                          "carrier": {
                            "code": "chronopost",
                            "name": "Chronopost"
                          },
                          "service": "SERVICE_FRONT_HOME",
                          "price": {
                            "value": 5.99,
                            "currency": "EUR"
                          },
                          "delay": {
                            "value": 1,
                            "unit": "day"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Elements manquants et/ou incorrect dans le body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "description": "Cette méthode retourne les transporteur et services de livraison possible pour une commande. En fonction du point de départ de la commande, du point d'arrivé (optionnel) et du contenu du panier client, la méthode retourne l'ensemble des services et transporteurs disponibles. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postEligibilities"
              },
              "examples": {
                "Exemple par défaut": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                },
                "Exemple avec point d'arrivé": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "179 Boulevard de Turin",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                }
              }
            }
          },
          "description": "Contient les informations de demande d'éligibilité."
        },
        "tags": [
          "Éligibilité"
        ]
      },
      "parameters": []
    },
    "/orders/download": {
      "get": {
        "summary": "Télécharger le bordereau de remise par transporteur",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "OK. Contient le document au format original du document",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "base64": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "description": "Contenu du fichier"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "Pas de documents sur cette commande"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Vous ne pouvez pas accéder a cette ressource"
          }
        },
        "operationId": "get-orders-download",
        "description": "Cette méthode permet de télécharger un bordereau de remise listant l'ensemble descommandes, au format PDF, en fonction des paramètres indiqués; Code transporteur, date de prélévement et statut de livraison. ",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "deliveryStatus",
            "required": true,
            "description": "Statut de la livraison\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "storeId",
            "required": true,
            "description": "Identifiant du magasin"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierCode",
            "required": true,
            "description": "Code du transporteur"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pickingDate",
            "description": "Date de prélévement"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exchangePlaceId",
            "required": true,
            "description": "Id du point de prélévement"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "Pour avoir un retour en json qui contient une base64, mettre en valeur \"application/json\""
          }
        ]
      }
    },
    "/orders/{orderId}/packages/{packageId}/label": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Identifiant de la commande"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "packageId",
          "in": "path",
          "required": true,
          "description": " N° de colis"
        }
      ],
      "get": {
        "summary": "Etiquette de transport pour un colis donné",
        "tags": [
          "Etiquette"
        ],
        "responses": {
          "200": {
            "description": "OK. Contient l'étiquette récupérée.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Informations de l'étiquette",
                  "type": "object",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "minLength": 1,
                      "description": "L’étiquette est retournée en base64 au format indiqué lors de l’appel"
                    },
                    "trackingPageUrl:": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Lien de la page de suivi de livraison"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingPageUrl:"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingPageUrl:": "https://url_suivi_livraison"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Demande impossible pour ce numéro de colis.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Le numéro de colis indiqué n'existe pas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getLabelByPackage",
        "description": "Cette méthode permet de récupérer une étiquette de transport pour un colis donné d’une commande client. L’étiquette peut être récupérée sous plusieurs formats (à condition que le transporteur soit compatible avec ce format).\n\nL'étiquette récupérée est unique et est rattachée à un seul colis de la commande. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          }
        ]
      }
    },
    "/collects/{collectId}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "collectId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Mise à jour des statuts de la collecte",
        "operationId": "put-collects-collectId-status",
        "responses": {
          "204": {
            "description": "Requête traitée avec succès"
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément."
          },
          "403": {
            "description": "Le 'collectId' n'a pas été trouvé"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "1.4.0"
            },
            "in": "header",
            "name": "x-api-version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/collectStatus"
                  },
                  "date": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time"
                  },
                  "comment": {
                    "type": "string",
                    "minLength": 1
                  },
                  "slot": {
                    "$ref": "#/components/schemas/slot"
                  },
                  "additionalData": {
                    "$ref": "./woop_to_retailer.v1.1.0.json#/components/schemas/additionalData"
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Commande prête": {
                  "value": {
                    "collectId": "CN123456789FR59",
                    "date": "2019-08-24T14:15:22Z",
                    "comment": "La commande est prête à être réceptionnée.",
                    "status": "COLLECT_READY",
                    "slot": {
                      "start": "2019-05-02T15:00:00+0000",
                      "end": "2019-05-02T15:30:00+0000"
                    }
                  }
                },
                "Créneau modifié par le client": {
                  "value": {
                    "collectId": "CN123456789FR59",
                    "date": "2019-08-24T14:15:22Z",
                    "comment": "Commande modifiée",
                    "status": "COLLECT_REPLANNED",
                    "slot": {
                      "start": "2019-05-02T15:00:00+0000",
                      "end": "2019-05-02T15:30:00+0000"
                    }
                  }
                }
              }
            }
          },
          "description": "Contient les informations du nouveau statut"
        },
        "tags": [
          "Collecte"
        ],
        "description": "Cette méthode permet à l’enseigne d’envoyer une mise à jour des statuts de la collecte. \n\nL’enseigne doit renseigner le prochain statut de suivi de la collecte pour faire évoluer la demande de retrait. Ce statut de suivi de livraison doit être en cohérence avec le workflow défini. <a href=\"/docs/retailer/docs/Modèles/Statuts-de-retrait-C&C.md\">Workflow et liste des status</a>"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {},
        "description": "[Voir la documentation](https://woop.stoplight.io/docs/retailer/docs/Bases/Authentification.md)"
      }
    },
    "schemas": {
      "responseOrder": {
        "title": "Réponse récupération commande (responseOrder)",
        "type": "object",
        "description": "Précise la réponse lors de la récupération d'une commande.",
        "properties": {
          "orders": {
            "type": "array",
            "description": "Liste des commandes",
            "items": {
              "type": "object",
              "properties": {
                "delivery": {
                  "description": "Informations sur la livraison",
                  "type": "object",
                  "properties": {
                    "externalDeliveryId": {
                      "type": "string",
                      "description": "Identifiant de la livraison"
                    },
                    "currentStatus": {
                      "$ref": "#/components/schemas/deliveryStatus"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date de dernière mise à jour"
                    },
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    },
                    "trackingPageUrl:": {
                      "type": "string",
                      "description": "Url de la page de suivi de livraison"
                    }
                  }
                },
                "carrier": {
                  "type": "object",
                  "description": "Informations du transporteur sélectionné",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Nom du transporteur"
                    },
                    "contact": {
                      "type": "string",
                      "description": "Information de contact du transporteur"
                    },
                    "claimUrl": {
                      "type": "string",
                      "description": "Url de réclamation du transporteur"
                    }
                  }
                },
                "order": {
                  "type": "object",
                  "description": "Informations de la commande",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Identifiant de la commande"
                    },
                    "currentStatus": {
                      "$ref": "#/components/schemas/orderStatus"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date de dernière mise à jour"
                    },
                    "referenceNumber": {
                      "type": "string",
                      "description": "Référence de la commande"
                    }
                  }
                },
                "picking": {
                  "type": "object",
                  "description": "Informations sur le prélèvement",
                  "properties": {
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    }
                  }
                },
                "packages": {
                  "type": "array",
                  "description": "Informations des colis",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Identifiant du colis"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Référence du colis"
                      }
                    }
                  }
                },
                "price": {
                  "$ref": "#/components/schemas/price"
                }
              }
            }
          }
        }
      },
      "postCollects": {
        "description": "Précise les informations utiles à la modification d'une demande de retrait.",
        "type": "object",
        "title": "Demande de retrait (postCollects)",
        "properties": {
          "mode": {
            "type": "string",
            "description": "Mode de click & collect choisi par le client ",
            "enum": [
              "standard",
              "delay"
            ]
          },
          "collectId": {
            "type": "string",
            "minLength": 1,
            "description": "Identifiant de la demande de retrait"
          },
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Identifiant du point de prélèvement"
          },
          "bookingId": {
            "type": "string",
            "minLength": 1,
            "description": "Identifiant de la réservation du créneau"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          },
          "customer": {
            "$ref": "#/components/schemas/contact"
          },
          "packages": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          }
        },
        "required": [
          "collectId",
          "exchangePlaceId",
          "customer",
          "packages"
        ]
      },
      "patchCollects": {
        "description": "Précise les informations utiles à la modification d'une demande de retrait.",
        "type": "object",
        "title": "Modification du créneau d'une demande de retrait (postCollects)",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "bookingId": {
                "type": "string",
                "minLength": 1,
                "description": "Identifiant de la réservation du créneau"
              }
            },
            "required": [
              "bookingId"
            ]
          },
          {
            "type": "object",
            "properties": {
              "slot": {
                "$ref": "#/components/schemas/slot"
              }
            },
            "required": [
              "slot"
            ]
          }
        ]
      },
      "postCollectsBookings": {
        "description": "Précise les informations nécessaires à la réservation d'un créneau de retrait.",
        "type": "object",
        "title": "Réservation de créneau de retrait (postCollectsBookings)",
        "properties": {
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Identifiant du point de prélèvement"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          }
        },
        "required": [
          "exchangePlaceId",
          "slot"
        ]
      },
      "postEligibilities": {
        "type": "object",
        "description": "Demande d'éligibilité ",
        "title": "Demande d'éligibilité des services (postEligibilities)",
        "x-examples": {
          "Exemple par défaut": {
            "picking": {
              "location": {
                "type": "address",
                "addressLine1": "237 rue du ballon",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 15,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.2,
                  "unit": "m"
                },
                "weight": {
                  "value": 560,
                  "unit": "g"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "cug": "q56zd4q65d4q",
                    "label": "Lampe",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "storeId": "MAG01"
          },
          "Exemple avec point d'arrivé": {
            "picking": {
              "location": {
                "type": "address",
                "addressLine1": "237 rue du ballon",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              }
            },
            "delivery": {
              "location": {
                "type": "address",
                "addressLine1": "179 Boulevard de Turin",
                "postalCode": "59000",
                "city": "Lille",
                "country": "FR"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 15,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.2,
                  "unit": "m"
                },
                "weight": {
                  "value": 560,
                  "unit": "g"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "cug": "q56zd4q65d4q",
                    "label": "Lampe",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "storeId": "MAG01"
          }
        },
        "properties": {
          "picking": {
            "description": "Informations de l'emplacement de prélèvement",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              }
            }
          },
          "delivery": {
            "type": "object",
            "description": "Informations de l'emplacement de livraison",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              }
            }
          },
          "packages": {
            "description": "Ensemble des colis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "storeId": {
            "type": "string",
            "description": "Identifiant du magasin émettant la demande"
          }
        },
        "required": [
          "picking",
          "packages",
          "storeId"
        ]
      },
      "postOrders": {
        "type": "object",
        "description": "Précise les informations utiles pour la création de la commande.",
        "title": "Création de la commande (postOrders)",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Identifiant unique de la commande (maximum 36 charactères)",
            "maxLength": 36
          },
          "referenceNumber": {
            "type": "string",
            "description": "Référence de la commande, numéro associé à un magasin. Pouvant être égal à l’orderId."
          },
          "storeId": {
            "type": "string",
            "description": "Identifiant du magasin émettant la demande"
          },
          "picking": {
            "description": "Informations de l'emplacement de prélèvement",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Commentaire libre"
              },
              "interval": {
                "type": "array",
                "description": "Créneaux de prélèvement",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "description": "Informations de l'emplacement de livraison",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Commentaire libre"
              },
              "interval": {
                "type": "array",
                "description": "Créneaux de livraison",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contactDelivery"
              }
            }
          },
          "numberOfPackages": {
            "description": "Ce champ est à utiliser si vous souhaitez n'envoyer qu'un colis mais diviser son poids par X NumberOfPackage. La plateforme LMMP va regarder l'info NumberOfPackage puis calculer le nombre de package non générique. Puis va soustraire ce nombre au NumberOfPackage pour diviser le package contenant la marchandse générique par le résultat. ATTENTION : ce champ est spécifique à un besoin Décathlon, merci de ne pas en tenir compte pour le MVP si vous n'êtes pas ce retailer ",
            "type": "integer",
            "deprecated": true
          },
          "packages": {
            "description": "Ensemble des colis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productsPrice"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          }
        },
        "required": [
          "orderId",
          "storeId",
          "picking",
          "delivery",
          "packages",
          "services"
        ],
        "x-examples": {
          "example-1": {
            "orderId": "string",
            "referenceNumber": "string",
            "storeId": "string",
            "picking": {
              "location": {
                "type": "address",
                "addressLine1": "string",
                "addressLine2": "string",
                "elevator": true,
                "floor": 0,
                "doorCode": "string",
                "postalCode": "string",
                "city": "string",
                "district": "string",
                "country": "FR",
                "comment": "string"
              },
              "infos": "string",
              "interval": [
                {
                  "start": "string",
                  "end": "string"
                }
              ],
              "contact": {
                "firstName": "string",
                "lastName": "string",
                "phone": "string",
                "email": "string",
                "language": "fr",
                "timezone": "Europe/Paris"
              }
            },
            "delivery": {
              "location": {
                "type": "address",
                "addressLine1": "string",
                "addressLine2": "string",
                "elevator": true,
                "floor": 0,
                "doorCode": "string",
                "postalCode": "string",
                "city": "string",
                "district": "string",
                "country": "FR",
                "comment": "string"
              },
              "infos": "string",
              "interval": [
                {
                  "start": "string",
                  "end": "string"
                }
              ],
              "contact": {
                "firstName": "string",
                "lastName": "string",
                "phone": "string",
                "email": "string",
                "language": "fr",
                "timezone": "Europe/Paris"
              }
            },
            "numberOfPackages": 0,
            "packages": [
              {
                "references": [
                  "string"
                ],
                "length": {
                  "value": 0,
                  "unit": "mm"
                },
                "width": {
                  "value": 0,
                  "unit": "mm"
                },
                "height": {
                  "value": 0,
                  "unit": "mm"
                },
                "weight": {
                  "value": 0,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "string",
                    "cug": "string",
                    "label": "string",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "services": [
              "SERVICE_PICKUP_POINT"
            ],
            "productsPrice": {
              "value": 0,
              "currency": "EUR"
            },
            "tags": [
              {
                "key": "origin",
                "value": "web"
              }
            ]
          }
        }
      },
      "postProductReturn": {
        "type": "object",
        "description": "Précise les informations utiles pour créer effectuer un retour produit. ",
        "title": "Demande de retour (postProductReturn)",
        "properties": {
          "orderReturnId": {
            "type": "string",
            "description": "Nouvel identifiant de la commande"
          },
          "initialReferenceNumber": {
            "type": "string",
            "description": "Référence de la commande original"
          },
          "storeId": {
            "type": "string",
            "description": "Identifiant du magasin émettant la demande"
          },
          "initialCarrier": {
            "type": "boolean",
            "description": "Booléan précisant si le retour doit être effectué avec le même transporteur que la commande initiale"
          },
          "picking": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "description": "Informations de prélèvement",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Commentaire libre"
              },
              "interval": {
                "type": "array",
                "description": "Créneaux de prélèvement",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "description": "Informations de livraison",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Commentaire libre"
              },
              "interval": {
                "type": "array",
                "description": "Créneaux de livraison",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "packages": {
            "type": "array",
            "description": "Ensemble des colis",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          }
        },
        "required": [
          "orderReturnId",
          "initialReferenceNumber",
          "storeId",
          "initialCarrier",
          "picking",
          "delivery",
          "packages"
        ]
      },
      "tags": {
        "type": "array",
        "description": "Permet de définir des \"marqueurs\" sur cette commande.",
        "items": {
          "type": "object",
          "required": [
            "key",
            "value"
          ],
          "properties": {
            "key": {
              "type": "string",
              "example": "origin"
            },
            "value": {
              "type": "string",
              "example": "web"
            }
          }
        },
        "title": "Tags"
      },
      "address": {
        "description": "Ensemble des informations utiles pour une adresse livraison/prélèvement.",
        "title": "Adresse (address)",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "addressLine1": "179 boulevard de Turien",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Adresse compléte du lieu principal"
          },
          "addressLine2": {
            "type": "string",
            "description": "Adresse complémentaire du lieu"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indique si l’adresse possède un ascenseur, Valeur par défaut: false"
          },
          "floor": {
            "type": "integer",
            "description": "Précise l'étage de l'adresse en question, Valeur par défaut: 0"
          },
          "doorCode": {
            "type": "string",
            "description": "Digicode"
          },
          "postalCode": {
            "type": "string",
            "description": "Code postal"
          },
          "city": {
            "type": "string",
            "description": "Ville"
          },
          "district": {
            "type": "string",
            "description": "Intitulé de l’arrondissement"
          },
          "country": {
            "$ref": "#/components/schemas/country"
          },
          "comment": {
            "type": "string",
            "description": "Commentaire libre d’utilisation"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ]
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_INIT",
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY"
        ],
        "description": "Précise les statuts de livraison pouvant être utilisé.",
        "x-examples": {
          "Exemple": "DELIVERY_STARTED"
        },
        "title": "Statut de livraison (deliveryStatus)"
      },
      "location": {
        "title": "Emplacement (location)",
        "description": "Un emplacement représente un lieu de prélevement ou de livraison.",
        "x-examples": {
          "Adresse": {
            "type": "address",
            "addressLine1": "179 boulevard de Turin",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          },
          "Point relais": {
            "type": "pickupPoint",
            "id": "76761",
            "carrierCode": "bpost"
          },
          "Point de prélèvement": {
            "type": "exchangePlace",
            "id": "1"
          }
        },
        "oneOf": [
          {
            "allOf": [
              {
                "type": "object",
                "description": "Emplacement de type adresse",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "address"
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/address"
              }
            ]
          },
          {
            "type": "object",
            "description": "Emplacement de type point relais",
            "required": [
              "type",
              "id",
              "carrierCode"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "pickupPoint"
                ]
              },
              "id": {
                "type": "string",
                "description": "Id du point relais"
              },
              "carrierCode": {
                "type": "string",
                "description": "Code du transporteur",
                "example": "bpost"
              }
            }
          },
          {
            "type": "object",
            "description": "Emplacement de type point de prélèvement",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "exchangePlace"
                ]
              },
              "id": {
                "type": "string",
                "description": "Id du point de prélèvement"
              }
            }
          }
        ]
      },
      "interval": {
        "description": "Précise l'interval de date pour un prélèvement/livraison.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Début du créneau"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "Fin du créneau"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Exemple": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "title": "Créneau de dates (interval)"
      },
      "interval_hour": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "time"
          },
          "end": {
            "type": "string",
            "format": "time"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Exemple": {
            "start": "14:00",
            "end": "18:00"
          }
        },
        "description": "Précise l'interval de date d'ouverture.",
        "title": "Créneau horaires (interval_hour)"
      },
      "contact": {
        "title": "Contact (contact)",
        "description": "Informations de contact prélèvement.",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "firstName": "Jogn",
            "lastName": "Doe",
            "phone": "+33610101010",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris"
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Prénom du client"
          },
          "lastName": {
            "type": "string",
            "description": "Nom du client"
          },
          "phone": {
            "type": "string",
            "description": "Téléphone du client"
          },
          "email": {
            "type": "string",
            "description": "Email du client"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email",
          "language",
          "timezone"
        ]
      },
      "services": {
        "type": "array",
        "description": "Précise les services de livraison à utiliser. ",
        "items": {
          "$ref": "#/components/schemas/deliveryService"
        },
        "x-examples": {
          "Exemple": [
            "SERVICE_PICKUP_POINT"
          ]
        },
        "title": "Services de livraison (services)"
      },
      "packages": {
        "description": "Précise les informations utiles à l'édition d'un colis. L'unité de manutention est à définir avec la structure colis/produit. ",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "reference": [
              "12345B"
            ],
            "length": {
              "value": 200,
              "unit": "mm"
            },
            "width": {
              "value": 200,
              "unit": "mm"
            },
            "height": {
              "value": 100,
              "unit": "mm"
            },
            "weight": {
              "value": 1,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "11233",
                "cug": "KJJNN",
                "label": "Ordinateur",
                "quantity": 1
              }
            ],
            "quantity": 1
          }
        },
        "title": "Colis (packages)",
        "properties": {
          "references": {
            "$ref": "#/components/schemas/packagesReferences"
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "List des produits dans le colis",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/productType"
                },
                "ean": {
                  "type": "string",
                  "description": "Ean du produit"
                },
                "cug": {
                  "type": "string",
                  "description": "Cug du produit"
                },
                "label": {
                  "type": "string",
                  "description": "Description du produit"
                },
                "quantity": {
                  "type": "integer",
                  "default": 1,
                  "description": "Quantité du produit"
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "Quantité de colis"
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "products"
        ]
      },
      "coordinates": {
        "type": "object",
        "description": "Précise les coordonnées géographiques à utiliser pour la création. ",
        "x-examples": {
          "Exemple": {
            "latitude": 50.63833,
            "longitude": 3.077359
          }
        },
        "title": "Coordonnées géographiques (coordinates)",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "length": {
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnits"
          }
        },
        "description": "Précise la dimension d'un colis.",
        "x-examples": {
          "Exemple": {
            "value": 200,
            "unit": "mm"
          }
        },
        "title": "Dimension (length)"
      },
      "mass": {
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnits"
          }
        },
        "description": "Précise le poids d'un colis/produit.",
        "x-examples": {
          "Exemple": {
            "value": 1,
            "unit": "kg"
          }
        },
        "title": "Poids (mass)"
      },
      "packagesReferences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Précise le numéro de colis de l'enseigne.",
        "title": "Références des colis (packagesReferences)",
        "x-examples": {
          "example-1": [
            "string"
          ]
        }
      },
      "productsPrice": {
        "description": "Correspond au prix de vente des produits. A renseigner pour le service “SERVICE_INSTALL”.",
        "x-examples": {
          "Exemple": {
            "value": 300,
            "currency": "EUR"
          }
        },
        "title": "Prix des produits (productsPrice)",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "valeur"
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      },
      "pickupPointCarrier": {
        "description": "Précise le transporteur sélectionné pour un point relais.",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "name": "Bpost",
            "code": "bpost"
          }
        },
        "title": "Transporteur du point relais (pickupPointCarrier)",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nom du transporteur"
          },
          "code": {
            "type": "string",
            "description": "Code interne du transporteur"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "cancelledReasons": {
        "type": "string",
        "description": "Précise l'ensemble des motifs pour une annulation de la part du transporteur.",
        "enum": [
          "CANCELLED_CANNOT_SERVICE",
          "CANCELLED_UNKNOWN",
          "CANCELLED_PREPARATION_DELAYED",
          "CANCELLED_BY_CLIENT",
          "CANCELLED_NEW_ADDRESS",
          "CANCELLED_INCOMPLETE"
        ],
        "x-examples": {
          "Exemple": "CANCELLED_CANNOT_SERVICE"
        },
        "title": "Motif d'annulation (cancelledReasons)"
      },
      "deliveryService": {
        "description": "Précise le service de livraison pouvant être utilisé.",
        "enum": [
          "SERVICE_PICKUP_POINT",
          "SERVICE_REGULAR_FRONT_HOME",
          "SERVICE_SELECTED_ROOM",
          "SERVICE_FRONT_HOME",
          "SERVICE_UNPACKING",
          "SERVICE_INSTALL",
          "SERVICE_RECOVERY",
          "SERVICE_SIMPLE_INSTALL",
          "SERVICE_COMPLEX_INSTALL",
          "SERVICE_ASSEMBLY"
        ],
        "x-examples": {
          "Exemple": "SERVICE_PICKUP_POINT"
        },
        "title": "Service de livraison (deliveryService)",
        "type": "string"
      },
      "productType": {
        "type": "string",
        "description": "Précise la typologie d'un produit.",
        "enum": [
          "TYPOLOGY_GENERIC",
          "TYPOLOGY_GROCERY",
          "TYPOLOGY_FRESH",
          "TYPOLOGY_FROZEN",
          "TYPOLOGY_DANGEROUS",
          "TYPOLOGY_HOUSEHOLD",
          "TYPOLOGY_VOLUMINOUS",
          "TYPOLOGY_FRAGILE",
          "TYPOLOGY_VOLUMINOUS_FRAGILE",
          "TYPOLOGY_LARGE_HOUSEHOLD",
          "TYPOLOGY_PALLET_GENERIC"
        ],
        "x-examples": {
          "Exemple": "TYPOLOGY_GENERIC"
        },
        "title": "Typologie du produit (productType)"
      },
      "currency": {
        "type": "string",
        "description": "Devise, précise la monnaie utilisée.",
        "enum": [
          "EUR"
        ],
        "x-examples": {
          "Exemple": "EUR"
        },
        "title": "Devise (currency)"
      },
      "lengthUnits": {
        "type": "string",
        "description": "Précise l'unité de mesure pour les dimensions.",
        "enum": [
          "mm",
          "cm",
          "m",
          "km",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "x-examples": {
          "Exemple": "mm"
        },
        "title": "Unité de mesure (lenghtUnits)"
      },
      "massUnits": {
        "type": "string",
        "description": "Précise l'unité de poids.",
        "enum": [
          "kg",
          "mcg",
          "mg",
          "g",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "x-examples": {
          "Exemple": "kg"
        },
        "title": "Unité de poids (massUnits)"
      },
      "country": {
        "type": "string",
        "description": "Code pays (ISO 3166 alpha-2).",
        "enum": [
          "FR",
          "BE"
        ],
        "x-examples": {
          "Exemple": "FR"
        },
        "title": "Pays (country)"
      },
      "language": {
        "type": "string",
        "title": "Langue (language)",
        "description": "Précise le code-langue à utiliser pour le contact de prélèvement/livraison.",
        "x-examples": {
          "Exemple": "fr"
        },
        "example": "fr",
        "enum": [
          "en",
          "fr",
          "es",
          "nl"
        ]
      },
      "timezone": {
        "type": "string",
        "title": "Fuseau horaire (timezone)",
        "description": "Référence à la page ci-dessous https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
        "example": "Europe/Paris",
        "x-examples": {
          "Exemple": "Europe/Paris"
        }
      },
      "availableSlot": {
        "description": "Créneau de retrait disponible.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Début du créneau"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "Fin du créneau"
          },
          "remainingCapacity": {
            "type": "number",
            "description": "Capacité restante dans ce créneau"
          }
        },
        "required": [
          "start",
          "end",
          "remainingCapacity"
        ],
        "x-examples": {
          "Exemple": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000",
            "remainingCapacity": 5
          }
        },
        "title": "Créneau de retrait disponible (availableSlot)"
      },
      "slot": {
        "description": "Créneau de retrait (sans réservation ni vérification de capacité).",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Début du créneau"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "Fin du créneau"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Exemple": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "title": "Créneau de retrait (slot)"
      },
      "orderStatus": {
        "title": "Statut de la commande (orderStatus)",
        "type": "string",
        "enum": [
          "ORDER_CREATED",
          "ORDER_UPDATED",
          "ORDER_TO_BE_COMPLETED",
          "ORDER_WITH_NO_CARRIER_ELIGIBLE",
          "ORDER_TO_BE_QUOTED",
          "ORDER_QUOTED",
          "ORDER_WITH_NO_QUOTE",
          "ORDER_QUOTE_TO_BE_CONFIRMED",
          "ORDER_TO_BE_SENT_TO_CARRIER",
          "ORDER_WITH_NO_CARRIER_AVAILABLE",
          "ORDER_REFUSED_DELIVERY",
          "ORDER_TO_DELIVER",
          "ORDER_BEING_DELIVERED",
          "ORDER_DELIVERY_UNCOMPLETED",
          "ORDER_DELIVERED",
          "ORDER_CANCELLED"
        ],
        "description": "Précise le statut d'une commande."
      },
      "pickupPointType": {
        "title": "Type de point relais",
        "type": "string",
        "enum": [
          "PICKUP_POINT_AGENCY",
          "PICKUP_POINT_POST_OFFICE",
          "PICKUP_POINT_RELAY_WITH_LOCKER",
          "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
          "PICKUP_POINT_ALL"
        ],
        "default": "PICKUP_POINT_RELAY_WITH_LOCKER"
      },
      "pickupPointCategory": {
        "title": "Catégorie de point relais",
        "type": "string",
        "enum": [
          "PICKUP_POINT_STANDARD",
          "PICKUP_POINT_XL",
          "PICKUP_POINT_XXL",
          "PICKUP_POINT_DRIVE"
        ]
      },
      "errorCode": {
        "title": "Code erreur (errorCode)",
        "type": "object",
        "x-examples": {
          "409 - Conflict ": {
            "statusCode": 409,
            "error": "Conflict",
            "message": "Conflict"
          }
        },
        "description": "Correspond au modèle retrouné en cas d'erreur API.",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "Status Code HTTP"
          },
          "error": {
            "type": "string",
            "description": "Intitulé de l'erreur retournée"
          },
          "message": {
            "type": "string",
            "description": "Description du message d'erreur"
          },
          "reasons": {
            "type": "array",
            "description": "Liste des raisons techniques possibles",
            "items": {
              "type": "string",
              "enum": [
                "STORE_NOT_FOUND",
                "EXCHANGE_PLACE_NOT_FOUND",
                "PICKUP_POINT_NOT_FOUND"
              ]
            }
          }
        }
      },
      "contactDelivery": {
        "title": "Contact de livraison (contactDelivery)",
        "description": "Informations de contact de livraison. (téléphone non obligatoire)",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "firstName": "Jogn",
            "lastName": "Doe",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris"
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Prénom du client"
          },
          "lastName": {
            "type": "string",
            "description": "Nom du client"
          },
          "phone": {
            "type": "string",
            "description": "Téléphone du client"
          },
          "email": {
            "type": "string",
            "description": "Email du client"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "language",
          "timezone"
        ]
      },
      "price": {
        "title": "Prix (price)",
        "type": "object",
        "description": "Le prix",
        "properties": {
          "price": {
            "type": "number",
            "format": "float",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      },
      "collectStatus": {
        "type": "string",
        "title": "Statut de collecte - Retrait drive (collectStatus)",
        "description": "Précise les statuts de collecte pouvant être utilisé.",
        "enum": [
          "COLLECT_INIT",
          "COLLECT_STARTED",
          "COLLECT_READY",
          "COLLECT_AWAITING",
          "COLLECT_IN_PROGRESS",
          "COLLECT_PICK_UP_OK",
          "COLLECT_PICK_UP_FAILED",
          "COLLECT_PICK_UP_PARTIALLY",
          "COLLECT_BLOCKED",
          "COLLECT_DELAYED",
          "COLLECT_REPLANNED"
        ]
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "description": "Version d'api ciblée",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1.4.0"
        }
      },
      "queryDeliveryStatus": {
        "in": "query",
        "required": true,
        "name": "deliveryStatus",
        "description": "Filtre la liste des commandes en fonction du statut de livraison",
        "schema": {
          "type": "string",
          "example": "DELIVERY_INIT"
        }
      },
      "queryPickingDate": {
        "in": "query",
        "required": false,
        "name": "pickingDate",
        "description": "Filtre par date de prélèvement. Permet de récupérer les commandes antérieures à cette date.",
        "schema": {
          "type": "string",
          "format": "datetime",
          "example": "2019-12-06T12:00:00Z"
        }
      },
      "queryPickupPointCarrierCode": {
        "in": "query",
        "name": "carrierCode",
        "description": "Filtre par code du transporteur",
        "schema": {
          "type": "string",
          "example": "bpost"
        }
      },
      "queryStoreId": {
        "in": "query",
        "name": "storeId",
        "description": "Filtre par id magasin",
        "schema": {
          "type": "string"
        }
      },
      "queryStoreIdRequired": {
        "in": "query",
        "required": true,
        "description": "Filtre par id magasin",
        "name": "storeId",
        "schema": {
          "type": "string"
        }
      },
      "queryMode": {
        "in": "query",
        "name": "mode",
        "description": "Format de l'étiquette",
        "schema": {
          "type": "string",
          "default": "pdf",
          "enum": [
            "pdf",
            "zpl"
          ]
        }
      },
      "queryLatitude": {
        "in": "query",
        "required": true,
        "description": "Latitude du point de recherche",
        "name": "latitude",
        "schema": {
          "type": "number"
        }
      },
      "queryLongitude": {
        "in": "query",
        "description": "Longitude du point de recherche",
        "required": true,
        "name": "longitude",
        "schema": {
          "type": "number"
        }
      },
      "queryNumber": {
        "in": "query",
        "required": false,
        "description": "Nombre de points relais retournés",
        "name": "number",
        "schema": {
          "type": "integer",
          "maximum": 25,
          "default": 10
        }
      },
      "queryKilometricDistance": {
        "in": "query",
        "required": false,
        "description": "Distance en kilomètres du rayon de recherche",
        "name": "kilometricDistance",
        "schema": {
          "type": "integer",
          "maximum": 40,
          "default": 5
        }
      },
      "queryPickupPointType": {
        "in": "query",
        "required": false,
        "name": "type",
        "description": "Type de point relais",
        "schema": {
          "$ref": "#/components/schemas/pickupPointType"
        }
      },
      "queryPickupPointCategory": {
        "in": "query",
        "required": false,
        "name": "category",
        "description": "Catégorie de point relais",
        "schema": {
          "$ref": "#/components/schemas/pickupPointCategory"
        }
      },
      "pathOrderId": {
        "in": "path",
        "required": true,
        "description": "Identifiant de la commande",
        "name": "orderId",
        "schema": {
          "type": "string"
        }
      },
      "pathDocumentId": {
        "in": "path",
        "required": true,
        "description": "Identifiant du document",
        "name": "documentId",
        "schema": {
          "type": "string"
        }
      },
      "pathPriceId": {
        "in": "path",
        "required": true,
        "description": "Identifiant de la demande de prix",
        "name": "priceId",
        "schema": {
          "type": "string"
        }
      },
      "queryExchangePlaceIdRequired": {
        "in": "query",
        "required": true,
        "description": "Filtre par id du point de prélèvement",
        "name": "exchangePlaceId",
        "schema": {
          "type": "string"
        }
      },
      "queryFromDateSlots": {
        "in": "query",
        "required": false,
        "description": "Date de début des créneaux retournés (aujourd'hui si non renseigné)",
        "name": "fromDate",
        "example": "2021-07-21",
        "schema": {
          "type": "string"
        }
      },
      "queryToDateSlots": {
        "in": "query",
        "required": true,
        "description": "Date de fin des créneaux retournés",
        "name": "toDate",
        "example": "2021-07-25",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}