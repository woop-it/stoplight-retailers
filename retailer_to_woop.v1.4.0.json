{
  "openapi": "3.0.2",
  "tags": [
    {
      "name": "Order"
    },
    {
      "name": "Label"
    },
    {
      "name": "Document"
    },
    {
      "name": "Picking"
    },
    {
      "name": "Health"
    },
    {
      "name": "Product return"
    },
    {
      "name": "Pickup point"
    },
    {
      "name": "Subscriptions"
    },
    {
      "name": "Eligibility"
    }
  ],
  "info": {
    "title": "Retailer to Woop",
    "description": "First, all informations about Woop API headed to retailers are centralized in this documentation. If you need precisions or have any questions, please contact internal technical team.\n\nTo use the API, you need to take your access you got during the creation of your account on Woop platform.\n\nThe current offered version is <b>Version 1.4.0</b>",
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://ret-api.recette.gcp.last-mile.fr",
      "description": "Staging URL"
    },
    {
      "url": "https://ret-api.preprod.gcp.last-mile.fr",
      "description": "Pre-prod URL"
    },
    {
      "url": "https://retailer.last-mile.fr",
      "description": "Prod URL"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Check if application is operational.",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "Service is operational"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "/collects": {
      "post": {
        "tags": [
          "Picking"
        ],
        "description": "A method to create a collect request for a specific exchange place. As soon as the request is validated, the collect order is saved in the plateform.",
        "operationId": "postCollects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the informations to create a collect order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCollects"
              },
              "examples": {
                "Example": {
                  "value": {
                    "reference": "CN123456789FR59",
                    "storeId": "MAG01",
                    "location": {
                      "type": "exchangePlace",
                      "id": "DRIVE-59-001"
                    },
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "XL Yellow shirt",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Collect order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "4f802782-bf37-4499-a50d-c7d0169c670d"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "4f802782-bf37-4499-a50d-c7d0169c670d"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect elements in the request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource"
          },
          "403": {
            "description": "Collect order can not be created\n\n[Reasons](https://woop.stoplight.io/docs/retailer/branches/english/docs/3.%20Models/Reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "A collect order with this reference already exists in the plateform",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Request failed with status code 409"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Request for a collect order"
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "This method saves an order in Woop plateform.\nIf the order is validated, delivery quotes are requested to carriers and the delivery is created when one of them is accepted.",
        "operationId": "postOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains informations to create an order",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postOrders"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example with service 'ASSEMBLY'": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currrency": "EUR"
                    }
                  }
                },
                "Example with pickup point": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "36JGZ7"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "19GON"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example with exchange place": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 2"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          "123456789A",
                          "123456789B",
                          "123456789C",
                          "123456789D",
                          "123456789E"
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currrency": "EUR"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order has been created in the platform"
          },
          "202": {
            "description": "Order to be completed"
          },
          "400": {
            "description": "Missing or incorrect elements in the request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"picking\" fails because [child \"interval\" fails because [\"interval\" at position 0 fails because [child \"start\" fails because [\"start\" is required]]]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "picking.interval.0.start"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Order creation forbidden\n\n[Reasons](https://woop.stoplight.io/docs/retailer/branches/english/docs/3.%20Models/Reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "An order with specified 'orderId' already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Conflict"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Order request"
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "This method returns detailled orders according to the filters selected",
        "operationId": "getOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryDeliveryStatus"
          },
          {
            "$ref": "#/components/parameters/queryPickingDate"
          },
          {
            "$ref": "#/components/parameters/queryStoreIdRequired"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains one or many orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "orders": [
                        {
                          "delivery": {
                            "externalDeliveryId": "123457",
                            "currentStatus": "DELIVERY_DELIVERED_OK",
                            "updatedAt": "2019-12-03T15:25:00+0000",
                            "interval": {
                              "start": "2019-12-03T15:00:00+0000",
                              "end": "2019-12-03T16:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "price": {
                            "price": 15.12,
                            "currency": "EUR"
                          },
                          "order": {
                            "id": "q54zd65qzd465qz4d",
                            "currentStatus": "ORDER_DELIVERED",
                            "updatedAt": "2019-12-03T15:25:00+0000",
                            "referenceNumber": "q54zd65qzd465qz4d"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-02T13:00:00+0000",
                              "end": "2019-12-02T15:00:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "1324",
                              "reference": "B8413DD"
                            }
                          ]
                        },
                        {
                          "delivery": {
                            "externalDeliveryId": "123456",
                            "currentStatus": "DELIVERY_INIT",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "interval": {
                              "start": "2019-12-07T12:00:00+0000",
                              "end": "2019-12-07T14:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "order": {
                            "id": "65z4eq1d6q54zd1",
                            "currentStatus": "ORDER_CREATED",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "referenceNumber": "65q41zdq65z14"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-06T13:30:00+0000",
                              "end": "2019-12-06T15:30:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "999",
                              "reference": "1323A"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect elements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"deliveryStatus\" fails because [\"deliveryStatus\" must be one of [DELIVERY_INIT]]",
                      "validation": {
                        "source": "query",
                        "keys": [
                          "deliveryStatus"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Request can not be processed for the 'storeId' selected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Orders search"
      }
    },
    "/orders/{orderId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Cancel an order",
        "operationId": "deleteOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains details about the order cancellation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reasons"
                ],
                "properties": {
                  "reasons": {
                    "description": "Cancellation reasons",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/cancelledReasons"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "Optional comment to fill if cancellation needs it"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Cancellation has been processed. Additional fees may be incurred"
          },
          "204": {
            "description": "Request successfully processed"
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "The order can not be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "Specified 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Order already cancelled"
          }
        },
        "summary": "Order cancellation"
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "This method returns a detailled order",
        "operationId": "getOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the requested order",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "orders": [
                        {
                          "delivery": {
                            "externalDeliveryId": "123456",
                            "currentStatus": "DELIVERY_INIT",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "interval": {
                              "start": "2019-12-07T12:00:00+0000",
                              "end": "2019-12-07T14:00:00+0000"
                            },
                            "trackingPageUrl:": "https://url_suivi_livraison"
                          },
                          "carrier": {
                            "name": "Transporteur A",
                            "contact": "Michel",
                            "claimUrl": "https://url_reclamation"
                          },
                          "price": {
                            "price": 15.12,
                            "currency": "EUR"
                          },
                          "order": {
                            "id": "65z4eq1d6q54zd1",
                            "currentStatus": "ORDER_CREATED",
                            "updatedAt": "2019-12-03T12:00:00+0000",
                            "referenceNumber": "65q41zdq65z14"
                          },
                          "picking": {
                            "interval": {
                              "start": "2019-12-06T13:30:00+0000",
                              "end": "2019-12-06T15:30:00+0000"
                            }
                          },
                          "packages": [
                            {
                              "id": "999",
                              "reference": "A123"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Single order search"
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "This method allows to update some informations of a specific order. Update can trigger a cancel + creation process if the modifications have an impact on the eligibility or delivery",
        "operationId": "patchOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains informations to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderId",
                  "storeId",
                  "picking",
                  "delivery",
                  "services",
                  "packages"
                ],
                "properties": {
                  "picking": {
                    "description": "Picking location informations",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  },
                  "delivery": {
                    "description": "Delivery location informations",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/interval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  },
                  "packages": {
                    "type": "array",
                    "description": "Set of packages",
                    "items": {
                      "$ref": "#/components/schemas/packages"
                    }
                  },
                  "services": {
                    "$ref": "#/components/schemas/services"
                  }
                }
              },
              "examples": {
                "Example": {
                  "value": {
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont"
                      },
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed with success"
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Update order can not be processed\n\n[Reasons](https://woop.stoplight.io/docs/retailer/branches/english/docs/3.%20Models/Reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Order update"
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/pathOrderId"
        }
      ]
    },
    "/orders/{orderId}/label": {
      "get": {
        "tags": [
          "Label"
        ],
        "description": "This method returns a delivery label according to the order ID. The label is available in different formats (if the carrier accepts the format)",
        "operationId": "getLabelByOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the label",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Label informations",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "description": "The label format is either base64 or the one indicated in the request"
                    },
                    "trackingPageUrl": {
                      "type": "string",
                      "description": "Link to the tracking page url"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingPageUrl"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingPageUrl:": "https://url_suivi_livraison"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Request can not be processed for the 'storeId' selected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Specified 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieving a transport label for an order."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Order Id"
        }
      ]
        "summary": "Label request"
      }
    },
    "/orders/{orderId}/return": {
      "post": {
        "tags": [
          "Product return"
        ],
        "description": "This methode places an order for product(s) return",
        "operationId": "postProductReturn",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains informations for product return request",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/postProductReturn"
                  }
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "orderReturnId": "65z4eq1d6q54zd1",
                    "initialReferenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "initialCarrier": true,
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "infos": "La rue est en travaux",
                      "interval": [
                        {
                          "start": "2019-11-28T13:00:00+0000",
                          "end": "2019-11-28T15:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return request has been saved"
          },
          "400": {
            "description": "Missing or incorrect elements in the request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Return creation forbidden or initial order state does not allow a product return\n\n[Reasons](https://woop.stoplight.io/docs/retailer/branches/english/docs/3.%20Models/Reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Request of a product return with the 'referenceNumber' already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Product return request"
      }
    },
    "/orders/{orderId}/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method returns informations about the documents attached to an order",
        "operationId": "getOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "description": "Documents Lists",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Document ID"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Document date"
                          },
                          "name": {
                            "type": "string",
                            "description": "Document name"
                          },
                          "type": {
                            "type": "string",
                            "description": "Document type",
                            "enum": [
                              "EVIDENCE",
                              "INVOICE",
                              "CONTRACT"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "documents": [
                        {
                          "id": "5efda342ajkj700012064b57",
                          "date": "2020-07-02T09:05:06.361Z",
                          "type": "EVIDENCE",
                          "name": "picture_1593680706.pdf"
                        },
                        {
                          "id": "5efda342ajkj700012064b55",
                          "date": "2020-07-02T09:06:06.361Z",
                          "type": "INVOICE",
                          "name": "invoice_1593680706.pdf"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No documents attached to the order"
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Specified 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Documents attached to an order"
      }
    },
    "/orders/{orderId}/documents/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method returns all documents attached to an order in a zip format",
        "operationId": "downloadOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the documents in a zip format",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": ""
                },
                "examples": {}
              }
            }
          },
          "204": {
            "description": "No documents attached to the order"
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Specified 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Download documents attached to an order"
      }
    },
    "/orders/{orderId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method returns specified document for an order",
        "operationId": "downloadOrderDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/pathDocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the document in its original format",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Specified 'orderId' or 'documentId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Download one document attached to an order"
      }
    },
    "/pickupPoints": {
      "get": {
        "tags": [
          "Pickup point"
        ],
        "description": "This method returns a list of pickup points around a geolocation and optional parameters. \n\n[Go to explication](https://woop.stoplight.io/docs/retailer/branches/english/docs/3.%20Models/PickupPoint-Management.md)",
        "operationId": "getPickupPoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryLatitude"
          },
          {
            "$ref": "#/components/parameters/queryLongitude"
          },
          {
            "$ref": "#/components/parameters/queryNumber"
          },
          {
            "$ref": "#/components/parameters/queryKilometricDistance"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointType"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCategory"
          },
          {
            "$ref": "#/components/parameters/queryStoreId"
          },
          {
            "$ref": "#/components/parameters/queryPickupPointCarrierCode"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains pickup points detailled list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickupPoints": {
                      "type": "array",
                      "description": "Pickup points informations",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/address"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "title": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "title"
                                ]
                              }
                            ],
                            "description": "Pickup point address"
                          },
                          "coordinates": {
                            "$ref": "#/components/schemas/coordinates"
                          },
                          "id": {
                            "type": "string",
                            "description": "Pickup point ID"
                          },
                          "carrier": {
                            "$ref": "#/components/schemas/pickupPointCarrier"
                          },
                          "externalCategory": {
                            "type": "string",
                            "example": "Cat1",
                            "description": "Returns the category of the relay point as named at the carrier."
                          },
                          "openingHours": {
                            "type": "object",
                            "description": "Pickup point opening hours",
                            "properties": {
                              "monday": {
                                "type": "array",
                                "description": "Monday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "tuesday": {
                                "type": "array",
                                "description": "Tuesday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "wednesday": {
                                "type": "array",
                                "description": "Wednesday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "thursday": {
                                "type": "array",
                                "description": "Thursday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "friday": {
                                "type": "array",
                                "description": "Friday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "saturday": {
                                "type": "array",
                                "description": "Saturday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              },
                              "sunday": {
                                "type": "array",
                                "description": "Sunday hours",
                                "items": {
                                  "$ref": "#/components/schemas/interval_hour"
                                }
                              }
                            }
                          },
                          "maxWeight": {
                            "$ref": "#/components/schemas/mass"
                          }
                        },
                        "required": [
                          "address",
                          "coordinates",
                          "id",
                          "carrier",
                          "openingHours",
                          "maxWeight"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "pickupPoints": [
                        {
                          "address": {
                            "addressLine1": "168 RUE DES POSTES",
                            "postalCode": "59000",
                            "city": "Lille",
                            "country": "FR",
                            "title": "Point relais"
                          },
                          "coordinates": {
                            "latitude": 50.638386,
                            "longitude": 3.077183
                          },
                          "id": "q251zd564qz",
                          "carrier": {
                            "code": "transporteur1",
                            "name": "Transporteur A"
                          },
                          "externalMinimalCategory": "24R",
                          "openingHours": {
                            "monday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "tuesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "wednesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "thursday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "friday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "saturday": [
                              {
                                "start": "08:00",
                                "end": "16:00"
                              }
                            ],
                            "sunday": [
                              {
                                "start": "08:00",
                                "end": "12:00"
                              }
                            ]
                          },
                          "maxWeight": {
                            "value": 250,
                            "unit": "kg"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect elements in the request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Request can not be processed for the 'storeId' selected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Pickup points search"
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "description": "This method initializes the subscriptions to our APIs.\n\nMore informations in the dedicated documentation \"Subscriptions\"",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains subscriptions informations",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Subscriptions informations",
                "required": [
                  "callbacks"
                ],
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "description": "Events callbacks",
                    "required": [
                      "carrier",
                      "status",
                      "score"
                    ],
                    "properties": {
                      "carrier": {
                        "type": "object",
                        "description": "Callback allowing to receive carrier choice",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "API route URL"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "status": {
                        "type": "object",
                        "description": "Callback allowing to receive order status changes",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "API route URL"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "score": {
                        "type": "object",
                        "description": "Callback allowing to rceive the customer notation",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "API route URL"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "deliveryClosure": {
                        "type": "object",
                        "description": "Callback allowing to receive the billing informations",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "API route URL"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        }
                      },
                      "event": {
                        "type": "object",
                        "description": "Callback allowing to receive the notifications send to customer",
                        "required": [
                          "url"
                        ],
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "API route URL"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        }
                      }
                    }
                  },
                  "headers": {
                    "type": "array",
                    "description": "Additional HTTP Headers to send during callback",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Header key/name"
                        },
                        "value": {
                          "type": "string",
                          "description": "Header value"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    }
                  },
                  "auth": {
                    "type": "object",
                    "description": "Configuration of your API autentication",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "description": "To be defined if you choose basic API authentication method",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      "oauth2": {
                        "type": "object",
                        "description": "To be defined if you choose oauth2 API authentication method",
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "client_secret": {
                            "type": "string"
                          },
                          "audience": {
                            "type": "string"
                          },
                          "grant_type": {
                            "type": "string"
                          },
                          "tokenEndPoint": {
                            "type": "string",
                            "description": "Url to retrieve the access token according to clientId and clientSecret"
                          }
                        },
                        "required": [
                          "client_id",
                          "client_secret",
                          "tokenEndPoint"
                        ]
                      },
                      "token": {
                        "type": "object",
                        "description": "To be defined if the authentication method gives a bearer token from a username/password combination",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "Url used to retrieve the access token"
                          }
                        },
                        "required": [
                          "username",
                          "password",
                          "endpoint"
                        ]
                      }
                    }
                  }
                }
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KJK13I7Y12"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "oAuth2ClientCredentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing or incorrect elements in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Subscriptions initialization"
      }
    },
    "/eligibilities": {
      "post": {
        "summary": "Carriers and services eligibility",
        "operationId": "postServices",
        "responses": {
          "200": {
            "description": "List of eligible carriers and services",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Carriers and services list",
                  "properties": {
                    "eligibilities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "carrier",
                          "service",
                          "price",
                          "delay"
                        ],
                        "properties": {
                          "carrier": {
                            "type": "object",
                            "description": "Eligible carrier",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Carrier's name"
                              },
                              "code": {
                                "type": "string",
                                "description": "Internal code for carrier"
                              }
                            }
                          },
                          "service": {
                            "$ref": "#/components/schemas/deliveryService"
                          },
                          "types": {
                            "type": "array",
                            "description": "Types of eligible pickup points (for SERVICE_PICKUP_POINT service)",
                            "items": {
                              "$ref": "#/components/schemas/pickupPointType"
                            }
                          },
                          "categories": {
                            "type": "array",
                            "description": "Categories of eligible pickup points (for SERVICE_PICKUP_POINT service)",
                            "items": {
                              "$ref": "#/components/parameters/queryPickupPointCategory"
                            }
                          },
                          "price": {
                            "type": "object",
                            "description": "Service price",
                            "required": [
                              "price",
                              "currency"
                            ],
                            "properties": {
                              "price": {
                                "type": "number"
                              },
                              "currency": {
                                "$ref": "#/components/schemas/currency"
                              }
                            }
                          },
                          "delay": {
                            "type": "object",
                            "description": "Service execution time",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "unit": {
                                "type": "enum",
                                "enum": [
                                  "day",
                                  "hour"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "bpost",
                            "name": "Bpost"
                          },
                          "service": "SERVICE_PICKUP_POINT",
                          "types": [
                            "PICKUP_POINT_AGENCY",
                            "PICKUP_POINT_POST_OFFICE",
                            "PICKUP_POINT_RELAY_WITH_LOCKER",
                            "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                            "PICKUP_POINT_ALL"
                          ],
                          "categories": [
                            "PICKUP_POINT_STANDARD",
                            "PICKUP_POINT_XL",
                            "PICKUP_POINT_XXL",
                            "PICKUP_POINT_DRIVE"
                          ],
                          "price": {
                            "value": 2.99,
                            "currency": "EUR"
                          },
                          "delay": {
                            "value": 3,
                            "unit": "day"
                          }
                        },
                        {
                          "carrier": {
                            "code": "chronopost",
                            "name": "Chronopost"
                          },
                          "service": "SERVICE_FRONT_HOME",
                          "price": {
                            "value": 5.99,
                            "currency": "EUR"
                          },
                          "delay": {
                            "value": 1,
                            "unit": "day"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or incorrect elements in the request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"orderId\" fails because [\"storeId\" is required]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "orderId"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "description": "A method to retrieve the delivery carriers and services available for an order. Carriers and services returned depend on the picking location, delivery location (optional), the products/packages.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postEligibilities"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                },
                "Example with arrival point": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "179 Boulevard de Turin",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                }
              }
            }
          },
          "description": "Contains the eligibility informations"
        },
        "tags": [
          "Eligibility"
        ]
      },
      "parameters": []
    },
    "/orders/download": {
      "get": {
        "summary": "Download orders slip to a specific retailer",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the document in its original format",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "base64": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "description": "Slip content"
                    }
                  ]
                },
                "examples": {}
              }
            }
          },
          "204": {
            "description": "No document attached to the order"
          },
          "401": {
            "description": "You are not allowed to access this resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Request can not be processed for the 'storeId' or 'exchangePlaceId' selected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "This exchange place is not allowed to be used"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-orders-download",
        "description": "This method returns a single pdf document with a list of orders according to specified parameters (carrier, picking date and delivery status)",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "deliveryStatus",
            "required": true,
            "description": "Filter by delivery status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "storeId",
            "required": true,
            "description": "Store ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierCode",
            "required": true,
            "description": "Filter by carrier"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pickingDate",
            "description": "Filter by picking date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exchangePlaceId",
            "required": true,
            "description": "Exchange place ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "To obtain a Base64 response in json body, specify the value \"application/json\""
          }
        ]
      }
    },
    "/orders/{orderId}/packages/{packageId}/label": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Identifiant de la commande"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "packageId",
          "in": "path",
          "required": true,
          "description": " N° de colis"
        }
      ],
      "get": {
        "summary": "Etiquette de transport pour un colis donné",
        "tags": [
          "Etiquette"
        ],
        "responses": {
          "200": {
            "description": "OK. Contient l'étiquette récupérée.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Informations de l'étiquette",
                  "type": "object",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "minLength": 1,
                      "description": "L’étiquette est retournée en base64 au format indiqué lors de l’appel"
                    },
                    "trackingPageUrl:": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Lien de la page de suivi de livraison"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingPageUrl:"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingPageUrl:": "https://url_suivi_livraison"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Vous n'êtes pas autorisé à accéder à cet élément.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Demande impossible pour ce numéro de colis.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Le numéro de colis indiqué n'existe pas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getLabelByPackage",
        "description": "Cette méthode permet de récupérer une étiquette de transport pour un colis donné d’une commande client. L’étiquette peut être récupérée sous plusieurs formats (à condition que le transporteur soit compatible avec ce format).\n\nL'étiquette récupérée est unique et est rattachée à un seul colis de la commande. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {},
        "description": "[Go to definition](https://woop.stoplight.io/docs/retailer/branches/english/docs/2.%20Basics/Authentication.md)"
      }
    },
    "schemas": {
      "responseOrder": {
        "title": "Get order response (responseOrder)",
        "type": "object",
        "description": "Specifies the response for getting orders.",
        "properties": {
          "orders": {
            "type": "array",
            "description": "Orders list",
            "items": {
              "type": "object",
              "properties": {
                "delivery": {
                  "description": "Delivery informations",
                  "type": "object",
                  "properties": {
                    "externalDeliveryId": {
                      "type": "string",
                      "description": "Delivery ID"
                    },
                    "currentStatus": {
                      "$ref": "#/components/schemas/deliveryStatus"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Last update date"
                    },
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    },
                    "trackingPageUrl:": {
                      "type": "string",
                      "description": "Delivery tracking page URL"
                    }
                  }
                },
                "carrier": {
                  "type": "object",
                  "description": "Informations on selected carrier",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Carrier name"
                    },
                    "contact": {
                      "type": "string",
                      "description": "Carrier contact information"
                    },
                    "claimUrl": {
                      "type": "string",
                      "description": "Carrier claim URL"
                    }
                  }
                },
                "order": {
                  "type": "object",
                  "description": "Order informations",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Order ID"
                    },
                    "currentStatus": {
                      "$ref": "#/components/schemas/orderStatus"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Last update date"
                    },
                    "referenceNumber": {
                      "type": "string",
                      "description": "Order reference"
                    }
                  }
                },
                "picking": {
                  "type": "object",
                  "description": "Picking informations",
                  "properties": {
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    }
                  }
                },
                "packages": {
                  "type": "array",
                  "description": "Packages informations",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Package ID"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Package reference"
                      }
                    }
                  }
                },
                "price": {
                  "$ref": "#/components/schemas/price"
                }
              }
            }
          }
        }
      },
      "postCollects": {
        "type": "object",
        "required": [
          "reference",
          "storeId",
          "customer",
          "location",
          "packages"
        ],
        "properties": {
          "reference": {
            "type": "string",
            "description": "Collect request ID"
          },
          "storeId": {
            "type": "string",
            "description": "Emitting request store ID"
          },
          "customer": {
            "$ref": "#/components/schemas/contact"
          },
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "packages": {
            "description": "Whole packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          }
        },
        "description": "Specifies useful informations to create a collect request (click and collect).",
        "title": "Collect request (postCollects)"
      },
      "postEligibilities": {
        "type": "object",
        "description": "Eligibility request",
        "title": "Request for Eligibility of Services (postEligibilities)",
        "x-examples": {
          "Default example": {
            "picking": {
              "location": {
                "type": "address",
                "addressLine1": "237 rue du ballon",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 15,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.2,
                  "unit": "m"
                },
                "weight": {
                  "value": 560,
                  "unit": "g"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "cug": "q56zd4q65d4q",
                    "label": "Lampe",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "storeId": "MAG01"
          },
          "Example with arrival point": {
            "picking": {
              "location": {
                "type": "address",
                "addressLine1": "237 rue du ballon",
                "postalCode": "59110",
                "city": "La Madeleine",
                "country": "FR"
              }
            },
            "delivery": {
              "location": {
                "type": "address",
                "addressLine1": "179 Boulevard de Turin",
                "postalCode": "59000",
                "city": "Lille",
                "country": "FR"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 15,
                  "unit": "cm"
                },
                "width": {
                  "value": 15,
                  "unit": "cm"
                },
                "height": {
                  "value": 1.2,
                  "unit": "m"
                },
                "weight": {
                  "value": 560,
                  "unit": "g"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "cug": "q56zd4q65d4q",
                    "label": "Lampe",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "storeId": "MAG01"
          }
        },
        "properties": {
          "picking": {
            "description": "Informations on picking location",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              }
            }
          },
          "delivery": {
            "type": "object",
            "description": "Informations on delivery location",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              }
            }
          },
          "packages": {
            "description": "Whole packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "storeId": {
            "type": "string",
            "description": "Store ID emitting request"
          }
        },
        "required": [
          "picking",
          "packages",
          "storeId"
        ]
      },
      "postOrders": {
        "type": "object",
        "description": "Specifies useful informations to create an order.",
        "title": "Order creation (postOrders)",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Order unique ID (max 36 characters)",
            "maxLength": 36
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, number associated to a store. Can equals to orderId."
          },
          "storeId": {
            "type": "string",
            "description": "Store ID emitting the request"
          },
          "picking": {
            "description": "Informations on picking location",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Free comment"
              },
              "interval": {
                "type": "array",
                "description": "Picking interval",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "description": "Informations on delivery location",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Free comment"
              },
              "interval": {
                "type": "array",
                "description": "Delivery interval",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contactDelivery"
              }
            }
          },
          "numberOfPackages": {
            "description": "You can use this field if you want to send only one package but dividing its weight by X NumberOfPackage. Woop platform will look for NumberOfPackage then calculate the number of non generic packages. Then it will substract this number to NumberOfPackage to divide the package containing the merchandise by the result. WARNING: This field is a particular need of Décathlon. Please do not consider this field for the Woop MVP if you are not this retailer.",
            "type": "integer",
            "deprecated": true
          },
          "packages": {
            "description": "Whole packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productsPrice"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          }
        },
        "required": [
          "orderId",
          "storeId",
          "picking",
          "delivery",
          "packages",
          "services"
        ]
      },
      "postProductReturn": {
        "type": "object",
        "description": "Specifies the useful informations to create a product return request.",
        "title": "Product return request (postProductReturn)",
        "properties": {
          "orderReturnId": {
            "type": "string",
            "description": "New order ID"
          },
          "initialReferenceNumber": {
            "type": "string",
            "description": "Reference of the original order"
          },
          "storeId": {
            "type": "string",
            "description": "Store ID emitting request"
          },
          "initialCarrier": {
            "type": "boolean",
            "description": "Boolean specifying if the return must be made by the same carrier as the original order."
          },
          "picking": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "description": "Picking informations",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Free comment"
              },
              "interval": {
                "type": "array",
                "description": "Picking interval",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "description": "Delivery informations",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Free comment"
              },
              "interval": {
                "type": "array",
                "description": "Delivery interval",
                "items": {
                  "$ref": "#/components/schemas/interval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "packages": {
            "type": "array",
            "description": "Whole packages",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          }
        },
        "required": [
          "orderReturnId",
          "initialReferenceNumber",
          "storeId",
          "initialCarrier",
          "picking",
          "delivery",
          "packages"
        ]
      },
      "tags": {
        "type": "array",
        "description": "Allowing to define \"markers\" on this order.",
        "items": {
          "type": "object",
          "required": [
            "key",
            "value"
          ],
          "properties": {
            "key": {
              "type": "string",
              "example": "origin"
            },
            "value": {
              "type": "string",
              "example": "web"
            }
          }
        },
        "title": "Tags"
      },
      "address": {
        "description": "All useful informations about a delivery/picking address.",
        "title": "Address (address)",
        "type": "object",
        "x-examples": {
          "Example": {
            "addressLine1": "179 boulevard de Turin",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Main place full address"
          },
          "addressLine2": {
            "type": "string",
            "description": "Place additional address"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates if place has a lift\nDefault value : FALSE"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor\nDefault value : 0"
          },
          "postalCode": {
            "type": "string",
            "description": "Corresponds with associated main place postal code"
          },
          "doorCode": {
            "type": "string",
            "description": "Door code"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "district": {
            "type": "string",
            "description": "District"
          },
          "country": {
            "$ref": "#/components/schemas/country"
          },
          "comment": {
            "type": "string",
            "description": "Comment, free to use"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ]
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY",
          "DELIVERY_CANCELLED",
          "DELIVERY_INIT"
        ],
        "title": "Delivery status (deliveryStatus)",
        "description": "Specifies the different possible delivery statuses in the platform.",
        "x-examples": {
          "Example": "DELIVERY_STARTED"
        }
      },
      "location": {
        "title": "Location (location)",
        "description": "A location represents a delivery/picking location.",
        "x-examples": {
          "Address": {
            "type": "address",
            "addressLine1": "179 boulevard de Turin",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          },
          "Pickup point": {
            "type": "pickupPoint",
            "id": "76761",
            "carrierCode": "bpost"
          },
          "Exchange place": {
            "type": "exchangePlace",
            "id": "1"
          }
        },
        "oneOf": [
          {
            "allOf": [
              {
                "type": "object",
                "description": "Location of type address",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "address"
                    ]
                  }
                }
              },
              {
                "$ref": "#/components/schemas/address"
              }
            ]
          },
          {
            "type": "object",
            "description": "Location of type pickup point",
            "required": [
              "type",
              "id",
              "carrierCode"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "pickupPoint"
                ]
              },
              "id": {
                "type": "string",
                "description": "Pickup point ID"
              },
              "carrierCode": {
                "type": "string",
                "description": "Carrier code",
                "example": "bpost"
              }
            }
          },
          {
            "type": "object",
            "description": "Location of type exchange place",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "exchangePlace"
                ]
              },
              "id": {
                "type": "string",
                "description": "Exchange place ID"
              }
            }
          }
        ]
      },
      "interval": {
        "title": "Date interval (interval)",
        "description": "Specifies date interval for a picking/delivery.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Interval start"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "Interval end"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        }
      },
      "interval_hour": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "time"
          },
          "end": {
            "type": "string",
            "format": "time"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Example": {
            "start": "14:00",
            "end": "18:00"
          }
        },
        "description": "Specifies the opening hours.",
        "title": "Hour interval (interval_hour)"
      },
      "contact": {
        "title": "Contact (contact)",
        "description": "Informations on picking contact.",
        "type": "object",
        "x-examples": {
          "Example": {
            "firstName": "John",
            "lastName": "Doe",
            "phone": "+33610101010",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris"
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Contact first name"
          },
          "lastName": {
            "type": "string",
            "description": "Contact last name"
          },
          "phone": {
            "type": "string",
            "description": "Contact phone number"
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email",
          "language",
          "timezone"
        ]
      },
      "services": {
        "type": "array",
        "description": "Specifies the delivery services to use.",
        "items": {
          "$ref": "#/components/schemas/deliveryService"
        },
        "x-examples": {
          "Example": [
            "SERVICE_PICKUP_POINT"
          ]
        },
        "title": "Delivery services (services)"
      },
      "packages": {
        "description": "Specifies the useful informations to edit a package. Handling unit has to be defined within the package/product structure.",
        "type": "object",
        "x-examples": {
          "Example": {
            "reference": [
              "12345B"
            ],
            "length": {
              "value": 200,
              "unit": "mm"
            },
            "width": {
              "value": 200,
              "unit": "mm"
            },
            "height": {
              "value": 100,
              "unit": "mm"
            },
            "weight": {
              "value": 1,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "11233",
                "cug": "KJJNN",
                "label": "Computer",
                "quantity": 1
              }
            ],
            "quantity": 1
          }
        },
        "title": "Packages (packages)",
        "properties": {
          "references": {
            "$ref": "#/components/schemas/packagesReferences"
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "List of products in package",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "$ref": "#/components/schemas/productType"
                },
                "ean": {
                  "type": "string",
                  "description": "Product EAN"
                },
                "cug": {
                  "type": "string",
                  "description": "Product CUG"
                },
                "label": {
                  "type": "string",
                  "description": "Product description"
                },
                "quantity": {
                  "type": "integer",
                  "default": 1,
                  "description": "Product quantity"
                }
              },
              "required": [
                "type"
              ]
            }
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "Package quantity"
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "products"
        ]
      },
      "coordinates": {
        "type": "object",
        "description": "Specifies the geographic coordinates to use for the creation.",
        "x-examples": {
          "Example": {
            "latitude": 50.63833,
            "longitude": 3.077359
          }
        },
        "title": "Geographic coordinates (coordinates)",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "length": {
        "description": "Specifies the package dimension.",
        "type": "object",
        "title": "Dimension (length)",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": ""
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ],
        "x-examples": {
          "Example": {
            "value": 0,
            "unit": "cm"
          }
        }
      },
      "mass": {
        "description": "Specifies the package/product weight.",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Weight value"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnit"
          }
        },
        "required": [
          "value",
          "unit"
        ],
        "title": "Weight (mass)",
        "x-examples": {
          "Example": {
            "value": 1,
            "unit": "kg"
          }
        }
      },
      "packagesReferences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specifies the tracking number chosen by the carrier for the packages.",
        "title": "Packages reference (packagesReferences)",
        "x-examples": {
          "Example": [
            "string"
          ]
        }
      },
      "productsPrice": {
        "title": "Products price (productsPrice)",
        "type": "object",
        "description": "Corresponds to the selling price of the products. To be defined for the “SERVICE_INSTALL” service.",
        "properties": {
          "value": {
            "type": "number",
            "format": "float",
            "description": "Price value",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        },
        "x-examples": {
          "Example": {
            "value": 300,
            "currency": "EUR"
          }
        }
      },
      "pickupPointCarrier": {
        "description": "Specifies the selected carrier for a pickup point.",
        "type": "object",
        "x-examples": {
          "Exemple": {
            "name": "Bpost",
            "code": "bpost"
          }
        },
        "title": "Pickup point carrier (pickupPointCarrier)",
        "properties": {
          "name": {
            "type": "string",
            "description": "Carrier name"
          },
          "code": {
            "type": "string",
            "description": "Carrier internal code"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "cancelledReasons": {
        "type": "string",
        "description": "Specifies the possible reasons for a cancellation from the carrier.",
        "enum": [
          "CANCELLED_CANNOT_SERVICE",
          "CANCELLED_UNKNOWN",
          "CANCELLED_PREPARATION_DELAYED",
          "CANCELLED_BY_CLIENT",
          "CANCELLED_NEW_ADDRESS",
          "CANCELLED_INCOMPLETE"
        ],
        "x-examples": {
          "Example": "CANCELLED_CANNOT_SERVICE"
        },
        "title": "Cancellation reasons (cancelledReasons)"
      },
      "deliveryService": {
        "description": "Specifies the delivery service that can be used.",
        "enum": [
          "SERVICE_PICKUP_POINT",
          "SERVICE_REGULAR_FRONT_HOME",
          "SERVICE_SELECTED_ROOM",
          "SERVICE_FRONT_HOME",
          "SERVICE_UNPACKING",
          "SERVICE_INSTALL",
          "SERVICE_RECOVERY",
          "SERVICE_SIMPLE_INSTALL",
          "SERVICE_COMPLEX_INSTALL",
          "SERVICE_ASSEMBLY"
        ],
        "x-examples": {
          "Example": "SERVICE_PICKUP_POINT"
        },
        "title": "Delivery service (deliveryService)",
        "type": "string"
      },
      "productType": {
        "type": "string",
        "enum": [
          "TYPOLOGY_GENERIC",
          "TYPOLOGY_GROCERY",
          "TYPOLOGY_FRESH",
          "TYPOLOGY_FROZEN",
          "TYPOLOGY_DANGEROUS",
          "TYPOLOGY_HOUSEHOLD",
          "TYPOLOGY_VOLUMINOUS",
          "TYPOLOGY_FRAGILE",
          "TYPOLOGY_VOLUMINOUS_FRAGILE",
          "TYPOLOGY_LARGE_HOUSEHOLD",
          "TYPOLOGY_PALLET_GENERIC",
          "TYPOLOGY_NON_STANDARD"
        ],
        "title": "Product typology (productType)",
        "description": "Specifies the product typology.",
        "x-examples": {
          "Example": "TYPOLOGY_GENERIC"
        }
      },
      "currency": {
        "type": "string",
        "enum": [
          "EUR"
        ],
        "description": "Specifies the currency used.",
        "title": "Currency (currency)",
        "x-examples": {
          "Example": "EUR"
        }
      },
      "lengthUnit": {
        "type": "string",
        "enum": [
          "mm",
          "cm",
          "m",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "description": "Specifies the length unit of measure.",
        "default": "cm",
        "title": "Unit of measure (lengthUnit)",
        "x-examples": {
          "Example": "cm"
        }
      },
      "massUnit": {
        "type": "string",
        "enum": [
          "mcg",
          "mg",
          "g",
          "kg",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "description": "Specifies the weight unit.",
        "default": "kg",
        "title": "Weight unit (massUnit)",
        "x-examples": {
          "Example": "kg"
        }
      },
      "country": {
        "type": "string",
        "description": "Country code (ISO 3166 alpha-2).",
        "enum": [
          "FR",
          "BE"
        ],
        "x-examples": {
          "Example": "FR"
        },
        "title": "Country (country)"
      },
      "language": {
        "type": "string",
        "title": "Language (language)",
        "description": "Specifies the language code to use for the picking/delivery contact.",
        "x-examples": {
          "Example": "fr"
        },
        "example": "fr",
        "enum": [
          "en",
          "fr",
          "es",
          "nl"
        ]
      },
      "timezone": {
        "type": "string",
        "title": "Time zone (timezone)",
        "description": "Reference to the following page https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
        "example": "Europe/Paris",
        "x-examples": {
          "Example": "Europe/Paris"
        }
      },
      "orderStatus": {
        "title": "Order status (orderStatus)",
        "type": "string",
        "enum": [
          "ORDER_CREATED",
          "ORDER_UPDATED",
          "ORDER_TO_BE_COMPLETED",
          "ORDER_WITH_NO_CARRIER_ELIGIBLE",
          "ORDER_TO_BE_QUOTED",
          "ORDER_QUOTED",
          "ORDER_WITH_NO_QUOTE",
          "ORDER_QUOTE_TO_BE_CONFIRMED",
          "ORDER_TO_BE_SENT_TO_CARRIER",
          "ORDER_WITH_NO_CARRIER_AVAILABLE",
          "ORDER_REFUSED_DELIVERY",
          "ORDER_TO_DELIVER",
          "ORDER_BEING_DELIVERED",
          "ORDER_DELIVERY_UNCOMPLETED",
          "ORDER_DELIVERED",
          "ORDER_CANCELLED"
        ],
        "description": "Specifies the order status."
      },
      "pickupPointType": {
        "title": "Pickup point type",
        "type": "string",
        "enum": [
          "PICKUP_POINT_AGENCY",
          "PICKUP_POINT_POST_OFFICE",
          "PICKUP_POINT_RELAY_WITH_LOCKER",
          "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
          "PICKUP_POINT_ALL"
        ],
        "default": "PICKUP_POINT_RELAY_WITH_LOCKER"
      },
      "pickupPointCategory": {
        "title": "Pickup point category",
        "type": "string",
        "enum": [
          "PICKUP_POINT_STANDARD",
          "PICKUP_POINT_XL",
          "PICKUP_POINT_XXL",
          "PICKUP_POINT_DRIVE"
        ]
      },
      "errorCode": {
        "title": "Error code (errorCode)",
        "type": "object",
        "x-examples": {
          "409 - Conflict ": {
            "statusCode": 409,
            "error": "Conflict",
            "message": "Conflict"
          }
        },
        "description": "Matches the model returned in case of API error.",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP status code"
          },
          "error": {
            "type": "string",
            "description": "error label"
          },
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "reasons": {
            "type": "array",
            "description": "List of possible technical reasons",
            "items": {
              "type": "string",
              "enum": [
                "STORE_NOT_FOUND",
                "EXCHANGE_PLACE_NOT_FOUND",
                "PICKUP_POINT_NOT_FOUND"
              ]
            }
          }
        }
      },
      "contactDelivery": {
        "title": "Delivery contact (contactDelivery)",
        "description": "Informations on delivery contact. (phone number not required)",
        "type": "object",
        "x-examples": {
          "Example": {
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris"
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer first name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number"
          },
          "email": {
            "type": "string",
            "description": "Customer email"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "language",
          "timezone"
        ]
      },
      "price": {
        "title": "The price",
        "type": "object",
        "description": "The price",
        "properties": {
          "price": {
            "type": "number",
            "format": "float",
            "exclusiveMinimum": true,
            "minimum": 0
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        }
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "description": "Targeted API version",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1.4.0"
        }
      },
      "queryDeliveryStatus": {
        "in": "query",
        "required": true,
        "name": "deliveryStatus",
        "description": "Filter orders list by delivery status",
        "schema": {
          "type": "string",
          "example": "DELIVERY_INIT"
        }
      },
      "queryPickingDate": {
        "in": "query",
        "required": false,
        "name": "pickingDate",
        "description": "Filter by picking date. Allows to get orders older than this date.",
        "schema": {
          "type": "string",
          "format": "datetime",
          "example": "2019-12-06T12:00:00Z"
        }
      },
      "queryPickupPointCarrierCode": {
        "in": "query",
        "name": "carrierCode",
        "description": "Filter by carrier code",
        "schema": {
          "type": "string",
          "example": "bpost"
        }
      },
      "queryStoreId": {
        "in": "query",
        "name": "storeId",
        "description": "Filter by store ID",
        "schema": {
          "type": "string"
        }
      },
      "queryStoreIdRequired": {
        "in": "query",
        "required": true,
        "description": "Filter by store ID",
        "name": "storeId",
        "schema": {
          "type": "string"
        }
      },
      "queryMode": {
        "in": "query",
        "name": "mode",
        "description": "Label format",
        "schema": {
          "type": "string",
          "default": "pdf",
          "enum": [
            "pdf",
            "zpl"
          ]
        }
      },
      "queryLatitude": {
        "in": "query",
        "required": true,
        "description": "Searching point latitude",
        "name": "latitude",
        "schema": {
          "type": "number"
        }
      },
      "queryLongitude": {
        "in": "query",
        "description": "Searching point latitude",
        "required": true,
        "name": "longitude",
        "schema": {
          "type": "number"
        }
      },
      "queryNumber": {
        "in": "query",
        "required": false,
        "description": "Number of pickup points to get",
        "name": "number",
        "schema": {
          "type": "integer",
          "maximum": 25,
          "default": 10
        }
      },
      "queryKilometricDistance": {
        "in": "query",
        "required": false,
        "description": "Distance of searching radius in kilometers ",
        "name": "kilometricDistance",
        "schema": {
          "type": "integer",
          "maximum": 40,
          "default": 5
        }
      },
      "queryPickupPointType": {
        "in": "query",
        "required": false,
        "name": "type",
        "description": "Pickup point type",
        "schema": {
          "$ref": "#/components/schemas/pickupPointType"
        }
      },
      "queryPickupPointCategory": {
        "in": "query",
        "required": false,
        "name": "category",
        "description": "Pickup point category",
        "schema": {
          "$ref": "#/components/schemas/pickupPointCategory"
        }
      },
      "pathOrderId": {
        "in": "path",
        "required": true,
        "description": "Order ID",
        "name": "orderId",
        "schema": {
          "type": "string"
        }
      },
      "pathDocumentId": {
        "in": "path",
        "required": true,
        "description": "Document ID",
        "name": "documentId",
        "schema": {
          "type": "string"
        }
      },
      "pathPriceId": {
        "in": "path",
        "required": true,
        "description": "Price request ID",
        "name": "priceId",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}