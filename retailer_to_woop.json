{
  "openapi": "3.0.2",
  "tags": [
    {
      "name": "Order"
    },
    {
      "name": "Label"
    },
    {
      "name": "Document"
    },
    {
      "name": "Collect"
    },
    {
      "name": "Health"
    },
    {
      "name": "Product return"
    },
    {
      "name": "Pickup points"
    },
    {
      "name": "Subscription"
    },
    {
      "name": "Eligibility"
    }
  ],
  "info": {
    "title": "Retailer to Woop",
    "description": "This document contains the technical information about Woop APIs for carriers. For any questions or clarification, please contact the internal technical team.\n\nTo use \"Retailer to Woop\" APIs, you must use the confidential access codes provided when you created your retailer account on the platform. [See documentation](https://woop.stoplight.io/docs/retailer/docs/Basis/2.Authentication.md)\n\nThe version currently available in the documentation is <b>Version 1.7.0</b>",
    "version": "1.7.0"
  },
  "servers": [
    {
      "url": "https://retailer.last-mile.fr",
      "description": "Production URL"
    },
    {
      "url": "https://ret-api.preprod.gcp.last-mile.fr",
      "description": "Pre-production URL"
    },
    {
      "description": "Staging URL",
      "url": "https://ret-api.recette.gcp.last-mile.fr"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "description": "Check whether the application is functioning",
        "operationId": "getHealth",
        "responses": {
          "204": {
            "description": "The service is functioning"
          }
        },
        "security": [],
        "summary": "Health"
      }
    },
    "orders/package/state": {
      "parameters": [],
      "put": {
        "summary": "Change Package state",
        "operationId": "put-orders-orderId-packages-states",
        "responses": {
          "200": {
            "description": "Package state changed successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Reference Not Found"
          }
        },
        "x-stoplight": {
          "id": "v4lka2el0adv6"
        },
        "description": "Changes the package status in order to yield the package responsability to the carrier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "packages": {
                    "type": "array",
                    "x-stoplight": {
                      "id": "c7xnzce1ky7c9"
                    },
                    "items": {
                      "x-stoplight": {
                        "id": "nq0b43zo9uw1u"
                      },
                      "type": "object",
                      "properties": {
                        "containerId": {
                          "type": "object",
                          "x-stoplight": {
                            "id": "bz93jk8z042vr"
                          },
                          "description": "This item is required once you want to add a package state. \n\nYou can fill in the trailerId and/or the palletId.",
                          "properties": {
                            "trailerId": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "edked2d4kwp5g"
                              }
                            },
                            "palletId": {
                              "type": "string",
                              "x-stoplight": {
                                "id": "20y0bsarqld6z"
                              }
                            }
                          }
                        },
                        "reference": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "b7ncp47d6686r"
                          }
                        },
                        "state": {
                          "x-stoplight": {
                            "id": "afl46dpnjahj8"
                          },
                          "enum": [
                            "SHIPPED"
                          ]
                        },
                        "date": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "apgee5gvn2t4b"
                          },
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId"
          }
        ],
        "tags": [
          "Package advert"
        ]
      }
    },
    "/collects": {
      "post": {
        "tags": [
          "Collect"
        ],
        "description": "This method allows a Click&Collect collection request to be made at a specific collection location. The collection order will be created once the request is validated and the booking slot selected.",
        "operationId": "postCollects",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the creation information of the collection request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCollects"
              },
              "examples": {
                "Example standard mode (with booking slot)": {
                  "value": {
                    "mode": "standard",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6",
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL Jaune",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "Example express mode (without reservation)": {
                  "value": {
                    "mode": "standard",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "slot": {
                      "start": "2021-03-18T14:00:00.000Z",
                      "end": "2021-03-18T14:30:00.000Z"
                    },
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "Delay modey": {
                  "value": {
                    "mode": "delay",
                    "collectId": "CN123456789FR59",
                    "exchangePlaceId": "DRIVE-59-001",
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "978020137962",
                            "cug": "123456",
                            "label": "T-Shirt XL",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "example-1": {
                  "value": {
                    "mode": "standard",
                    "collectId": "string",
                    "exchangePlaceId": "string",
                    "bookingId": "string",
                    "slot": {
                      "start": "string",
                      "end": "string"
                    },
                    "customer": {
                      "firstName": "string",
                      "lastName": "string",
                      "phone": "string",
                      "email": "string",
                      "language": "fr",
                      "timezone": "Europe/Paris",
                      "main": true,
                      "title": "string"
                    },
                    "packages": [
                      {
                        "references": [
                          {
                            "reference": "12345B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "length": {
                          "value": 0,
                          "unit": "mm"
                        },
                        "width": {
                          "value": 0,
                          "unit": "mm"
                        },
                        "height": {
                          "value": 0,
                          "unit": "mm"
                        },
                        "weight": {
                          "value": 0,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "string",
                            "cug": "string",
                            "label": "string",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1,
                        "attributes": {
                          "footprint": {
                            "value": 13,
                            "unit": "m2"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful creation of the collection request"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item"
          },
          "403": {
            "description": "Creation of a collection request is not possible\n\n[See the list of reasons](https://woop.stoplight.io/docs/retailer/docs/Models/Error%20reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "A collection request with this reference already exists on the platform.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Request failed with status code 409"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create collect"
      },
      "get": {
        "summary": "",
        "operationId": "Get Collects",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "status": {
                        "$ref": "#/components/schemas/collectStatus"
                      },
                      "slot": {
                        "$ref": "#/components/schemas/slot"
                      },
                      "urls": {
                        "$ref": "./models/collect/urls.yaml"
                      },
                      "mode": {
                        "$ref": "./models/collect/mode.yaml"
                      },
                      "firstAvailableSlot": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "tkwsb3dcm034v"
                        },
                        "format": "date-time",
                        "description": "date of the first available slot"
                      }
                    },
                    "required": [
                      "id",
                      "status",
                      "mode"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "1.6.0"
            },
            "in": "header",
            "name": "x-api-version",
            "required": true,
            "description": "Target API version"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exchangePlaceId"
          },
          {
            "schema": {
              "type": "array",
              "enum": [
                "COLLECT_INIT",
                "COLLECT_STARTED",
                "COLLECT_READY",
                "COLLECT_AWAITING",
                "COLLECT_IN_PROGRESS",
                "COLLECT_PICK_UP_OK",
                "COLLECT_PICK_UP_FAILED",
                "COLLECT_PICK_UP_PARTIALLY",
                "COLLECT_BLOCKED",
                "COLLECT_DELAYED",
                "COLLECT_REPLANNED"
              ]
            },
            "in": "query",
            "name": "status"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "start",
            "description": "Date ISO8601"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "end",
            "description": "Date ISO8601"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAtStart",
            "description": "Date ISO8601"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "createdAtEnd",
            "description": "Date ISO8601"
          },
          {
            "schema": {
              "type": "number",
              "default": 100
            },
            "in": "query",
            "name": "limit"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "offset"
          }
        ],
        "tags": [
          "Collect"
        ]
      }
    },
    "/slots": {
      "get": {
        "summary": "Get available slots",
        "description": "This method allows you to retrieve the available time slots for a Click&Collect collection request at a specific location.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryExchangePlaceIdRequired"
          },
          {
            "$ref": "#/components/parameters/queryFromDateSlots"
          },
          {
            "$ref": "#/components/parameters/queryToDateSlots"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "number",
            "description": "Number of available time slots"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": " minRemainingCapacity",
            "description": "Minimum authorised capacity"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "description": "Also return on going slots",
            "name": "withOnGoingSlots"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the available slots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "slots"
                  ],
                  "properties": {
                    "slots": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/availableSlot"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "slots": [
                        {
                          "start": "2021-04-20T08:00:00+0000",
                          "end": "2021-04-20T08:30:00+0000",
                          "remainingCapacity": 4
                        },
                        {
                          "start": "2021-04-20T08:30:00+0000",
                          "end": "2021-04-20T09:00:00+0000",
                          "remainingCapacity": 5
                        },
                        {
                          "start": "2021-04-20T09:00:00+0000",
                          "end": "2021-04-20T09:30:00+0000",
                          "remainingCapacity": 1
                        },
                        {
                          "start": "2021-04-20T09:30:00+0000",
                          "end": "2021-04-20T10:00:00+0000",
                          "remainingCapacity": 2
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect elements in the query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Request not possible for 'storeId' or 'exchangePlaceId",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getSlots",
        "tags": [
          "Collect"
        ]
      }
    },
    "/bookings": {
      "post": {
        "summary": "Book a slot",
        "description": "This method allows you to reserve an available time slot for a Click&Collect collection request at a specific collection location.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postCollectsBookings"
              },
              "examples": {
                "Example": {
                  "value": {
                    "exchangePlaceId": "COLLECT01",
                    "slot": {
                      "start": "2021-04-20T08:00:00+0000",
                      "end": "2021-04-20T08:30:00+0000"
                    }
                  }
                },
                "Example with multi slot": {
                  "value": {
                    "exchangePlaceId": "COLLECT01",
                    "slot": {
                      "start": "2021-04-20T08:00:00+0000",
                      "end": "2021-04-20T12:30:00+0000"
                    },
                    "isMultiSlot": true
                  }
                }
              }
            }
          },
          "description": "Contains the creation information of the request."
        },
        "responses": {
          "201": {
            "description": "Request processed successfully, time slot reserved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookingId": {
                      "type": "string",
                      "description": "Reservation identifier."
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Request not possible for this 'exchangePlaceId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The time slot is already booked"
          }
        },
        "operationId": "postBookings",
        "tags": [
          "Collect"
        ]
      }
    },
    "/enhancedLabel": {
      "post": {
        "summary": "Enhanced Label",
        "description": "This method allows you to add specific info below a carrier's label according to a given template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "zpl"
              ]
            },
            "in": "query",
            "name": "mode",
            "required": true,
            "description": "Label format"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "parcelId",
            "description": "Parcel number"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true,
            "description": "Order identifier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "x-stoplight": {
                    "id": "7uueosxfeu696"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "1w2g7uwe2t4kn"
                      },
                      "properties": {
                        "keyName": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "go2s3a37bxkib"
                          },
                          "description": "name of the key"
                        }
                      }
                    },
                    "value": {
                      "type": "object",
                      "x-stoplight": {
                        "id": "qukcchy13ja7u"
                      },
                      "properties": {
                        "valueName": {
                          "type": "string",
                          "x-stoplight": {
                            "id": "rtdgwst3pah6z"
                          },
                          "description": "object value"
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "Key": "string",
                      "value": "string"
                    }
                  ]
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": "Contains the creation information of the request."
        },
        "responses": {
          "201": {
            "description": "Request processed successfully - Label created successfully ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "3tbsa7upo3wg1"
                      },
                      "description": "The label is returned in base64 in the format indicated\n\n"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {}
          },
          "404": {
            "description": "parcelId not found",
            "content": {}
          }
        },
        "operationId": "postBookings",
        "x-stoplight": {
          "id": "2jielfmzp8o4d"
        },
        "tags": [
          "Label"
        ]
      },
      "parameters": []
    },
    "/deliveries/bookings": {
      "post": {
        "summary": "Book a delivery slot",
        "description": "This method allows you to reserve an available time slot for a delivery request from the schedule of one or more given carriers.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postDeliveriesBookings"
              },
              "examples": {
                "Example": {
                  "value": {
                    "exchangePlaceId": "COLLECT01",
                    "slot": {
                      "start": "2021-04-20T08:00:00+0000",
                      "end": "2021-04-20T08:30:00+0000"
                    },
                    "carrierCodes": [
                      "carrier1"
                    ]
                  }
                }
              }
            }
          },
          "description": "Contains the creation information of the request."
        },
        "responses": {
          "201": {
            "description": "Request processed successfully, time slot reserved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookingId": {
                      "type": "string",
                      "description": "Reservation identifier."
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Request not possible for this 'exchangePlaceId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The time slot is already booked"
          }
        },
        "operationId": "postDeliveriesBookings",
        "tags": [
          "Delivery Booking"
        ]
      },
      "parameters": []
    },
    "/bookings/{bookingId}": {
      "delete": {
        "summary": "Cancel a booking slot",
        "description": "This method allows you to cancel the reservation of a time slot for a Click&Collect collection request at a specific collection location.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "bookingId",
            "in": "path",
            "required": true,
            "description": "Reservation identifier"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Request successfully processed, time slot cancelled"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "The time slot reservation cannot be cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "The 'bookingId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "deleteBookings",
        "tags": [
          "Collect"
        ]
      }
    },
    "/deliveries/bookings/{bookingId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "bookingId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Cancel a delivery booking slot",
        "operationId": "deleteDeliveryBookingId",
        "responses": {
          "204": {
            "description": "Request successfully processed time slot cancelled"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "The time slot reservation cannot be cancelled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "The 'bookingId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "tags": [
          "Delivery Booking"
        ],
        "description": "This method allows you to cancel the reservation of a time slot for a delivery request at a specific carrier and location.",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ]
      }
    },
    "/collects/{collectId}": {
      "patch": {
        "description": "This method allows you to modify a collection request initially created by the retailer.",
        "operationId": "patchCollects",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "collectId",
            "in": "path",
            "required": true,
            "description": "Collection identifier"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the modification information of a collection request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchCollects"
              },
              "examples": {
                "Example changing booking slot": {
                  "value": {
                    "bookingId": "bfded21b-cbed-4256-b756-2febcea94df6"
                  }
                },
                "Example changing slot (without booking)": {
                  "value": {
                    "slot": {
                      "start": "2021-03-18T14:00:00.000Z",
                      "end": "2021-03-18T14:30:00.000Z"
                    }
                  }
                },
                "Example changing user informations": {
                  "value": {
                    "customer": {
                      "firstName": "Michel",
                      "lastName": "Dupont",
                      "phone": "+33600000000",
                      "email": "michel.dupont@mail.fr",
                      "language": "fr",
                      "timezone": "Europe/Paris"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful modification of the collection request"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item"
          },
          "403": {
            "description": "The collection request cannot be modified"
          },
          "404": {
            "description": "The 'collectId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Update collect",
        "tags": [
          "Collect"
        ]
      },
      "delete": {
        "description": "This method allows you to cancel a collection request initially created by the retailer.\n\nThe method removes the time slot reservation as well as the collection request from the store. \n",
        "operationId": "deleteCollects",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "collectId",
            "in": "path",
            "required": true,
            "description": "Collection identifier"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "Collection request successfully processed, collection request cancelled"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "The collection request cannot be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "The 'collectId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Cancel collect",
        "tags": [
          "Collect"
        ]
      },
      "get": {
        "summary": "Get a collect",
        "operationId": "get-collects-collectId",
        "responses": {
          "200": {
            "description": "Returns collect information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/collectStatus"
                    },
                    "slot": {
                      "$ref": "#/components/schemas/slot"
                    },
                    "mode": {
                      "$ref": "./models/collect/mode.yaml"
                    },
                    "urls": {
                      "$ref": "./models/collect/urls.yaml"
                    },
                    "firstAvailableSlot": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "214m9lkv5iwhc"
                      },
                      "format": "date-time",
                      "description": "date of the first available slot"
                    }
                  },
                  "required": [
                    "status",
                    "mode"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Returns collection information.",
        "tags": [
          "Collect"
        ]
      }
    },
    "/orders/{orderId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete order",
        "operationId": "deleteOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the order cancellation information.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reasons"
                ],
                "properties": {
                  "reasons": {
                    "description": "Reasons for cancellation",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/cancelledReasons"
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "If necessary, an optional comment can be added when cancelling"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The cancellation has been processed, but may result in additional costs"
          },
          "204": {
            "description": "Request processed successfully"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "The order cannot be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "The 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The order is already cancelled or an action is already in progress on this order"
          }
        },
        "summary": "Delete order"
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "This method returns the order details.",
        "operationId": "getOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains order detail",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder-(getById)"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "order": {
                        "id": "string",
                        "status": "ORDER_CREATED",
                        "updatedAt": "string",
                        "referenceNumber": "string",
                        "picking": {
                          "interval": [
                            {
                              "start": "2019-12-04T12:30:00+0000",
                              "end": "2019-12-04T14:30:00+0000"
                            }
                          ],
                          "stop": {
                            "references": {
                              "id": "123890654FRTTY"
                            },
                            "sequenceNumber": 7,
                            "route": {
                              "references": {
                                "id": "AAAAAAAA"
                              },
                              "sequenceNumber": 3,
                              "vehicle": {
                                "references": {
                                  "id": "65464768568753",
                                  "licencePlate": "ZE-678-HD"
                                },
                                "vehicleType": "VEHICLE_TYPE_BIKE"
                              },
                              "team": {
                                "members": [
                                  {
                                    "id": "AAA"
                                  }
                                ]
                              },
                              "planning": {
                                "references": {
                                  "id": "P000001"
                                }
                              }
                            },
                            "plannedInterval": {
                              "start": "2019-12-04T12:30:00+0000",
                              "end": "2019-12-04T14:30:00+0000"
                            }
                          }
                        },
                        "delivery": {
                          "externalDeliveryId": "string",
                          "updatedAt": "string",
                          "interval": [
                            {
                              "start": "2019-12-04T12:30:00+0000",
                              "end": "2019-12-04T14:30:00+0000"
                            }
                          ],
                          "trackingUrls:": {
                            "carrier": "https://tracking.best-carrier.com/XJHSDL541",
                            "woop": {
                              "simple": "https://trace.woopit.fr/t/48aed-b5552d-4da5-813c-00c06e1ff327",
                              "multiple": "https://trace.woopit.fr/m/48aed-b5552d-4da5-813c-00c06e1ff327"
                            }
                          },
                          "status": "DELIVERY_INIT",
                          "subStatus": "FAILED",
                          "stop": {
                            "references": {
                              "id": "123890654FRTTYAAAAA"
                            },
                            "sequenceNumber": 17,
                            "route": {
                              "references": {
                                "id": "AAAAAAAA"
                              },
                              "sequenceNumber": 3,
                              "vehicle": {
                                "references": {
                                  "id": "65464768568753",
                                  "licencePlate": "ZE-678-HD"
                                },
                                "vehicleType": "VEHICLE_TYPE_BIKE"
                              },
                              "team": {
                                "members": [
                                  {
                                    "id": "AAA"
                                  }
                                ]
                              },
                              "planning": {
                                "references": {
                                  "id": "P000001"
                                }
                              }
                            },
                            "plannedInterval": {
                              "start": "2019-12-04T16:30:00+0000",
                              "end": "2019-12-04T18:30:00+0000"
                            }
                          }
                        },
                        "carrier": {
                          "name": "string",
                          "claimUrl": "string",
                          "contact": {
                            "firstName": "string",
                            "lastName": "string",
                            "phone": "string",
                            "email": "string",
                            "language": "fr",
                            "timezone": "Europe/Paris",
                            "main": true,
                            "title": "string"
                          },
                          "code": "string"
                        },
                        "parcels": [
                          {
                            "id": "56f74d65s4f564ds6",
                            "trackingId": "77899656544BY",
                            "status": "DELIVERY_KO",
                            "subStatus": "FAILED_WITH_RETURN",
                            "barcode": {
                              "value": "7841122236655",
                              "type": "barcode",
                              "format": "128"
                            },
                            "package": {
                              "reference": "EARB1225",
                              "products": [
                                {
                                  "type": "TYPOLOGY_GENERIC",
                                  "ean": "1259456954845",
                                  "cug": "LAMPE785AD",
                                  "label": "Bedside lamp",
                                  "quantity": 1
                                }
                              ]
                            }
                          }
                        ],
                        "price": {
                          "taxExcludedAmount": 17.2,
                          "taxIncludedAmount": 20.64,
                          "taxAmount": 3.44,
                          "currency": "EUR"
                        },
                        "emissions": {
                          "estimatedCO2e": {
                            "unit": "KgCO2e",
                            "value": 13.91334,
                            "reliabilityScore": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Get an order"
      },
      "patch": {
        "tags": [
          "Order"
        ],
        "description": "This method allows you to modify an order. The update may trigger a cancellation of the order + creation of a new order if the modified information is considered important and directly impacts the delivery.",
        "operationId": "patchOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the update information.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "picking": {
                    "description": "Information on the collection location",
                    "type": "object",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/pickingInterval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contact"
                      }
                    }
                  },
                  "delivery": {
                    "description": "Information on the delivery location",
                    "type": "object",
                    "required": [
                      "location",
                      "interval",
                      "contact"
                    ],
                    "properties": {
                      "location": {
                        "$ref": "#/components/schemas/location"
                      },
                      "infos": {
                        "type": "string"
                      },
                      "interval": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/deliveryInterval"
                        }
                      },
                      "contact": {
                        "$ref": "#/components/schemas/contactDelivery"
                      }
                    }
                  },
                  "packages": {
                    "type": "array",
                    "description": "All packages",
                    "items": {
                      "$ref": "#/components/schemas/packages"
                    }
                  },
                  "services": {
                    "$ref": "#/components/schemas/services"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/tags"
                  },
                  "carrierSelection": {
                    "$ref": "#/components/schemas/carrierSelection"
                  },
                  "additionalData": {
                    "$ref": "./models/additionalData.yaml"
                  }
                },
                "required": [
                  "picking",
                  "delivery",
                  "packages",
                  "services"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "picking": {
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont"
                      },
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request processed successfully"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Updating the order is not possible\n\n[See the list of reasons](https://woop.stoplight.io/docs/retailer/docs/Models/Error%20reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "409": {
            "description": "An action is already in progress on this delivery"
          }
        },
        "summary": "Patch order"
      }
    },
    "/zoning/geoShape/{id}": {
      "delete": {
        "description": "Delete a geoShape",
        "operationId": "deleteGeoShape",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "schema": {
              "type": "string",
              "example": "123"
            },
            "in": "query",
            "name": "id",
            "required": true,
            "description": "ID of the geoShape to delete"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "",
          "content": {}
        },
        "responses": {
          "200": {
            "description": "GeoShape deleted successfully\n\n",
            "content": {}
          },
          "400": {
            "description": "Bad request\n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete a geoShape",
        "x-stoplight": {
          "id": "93yricmetot8p"
        },
        "tags": [
          "Zoning"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/zoning/geoShape": {
      "get": {
        "description": "This method returns the geoShape details",
        "operationId": "getGeoShape",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierId",
            "required": true,
            "description": "Carrier ID"
          },
          {
            "schema": {
              "type": "string",
              "example": "store21"
            },
            "in": "query",
            "name": "storeId",
            "description": "Identifier of the store issuing the request"
          },
          {
            "schema": {
              "type": "string",
              "example": "1234"
            },
            "in": "query",
            "name": "exchangePlaceId",
            "description": "Collection point ID"
          },
          {
            "in": "query",
            "name": "countryCode",
            "schema": {
              "type": "string",
              "example": "FR"
            },
            "required": true,
            "description": "Country code (ISO 3166 alpha-2). View list : [Country code.md]"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GeoShapeGetResponse"
          },
          "400": {
            "description": "Bad request\n\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error\n\n"
          }
        },
        "summary": "Retrieve a geoShape",
        "x-stoplight": {
          "id": "w09wlih8hx20h"
        },
        "tags": [
          "Zoning"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create a new geoShape",
        "tags": [
          "Zoning"
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/GeoShapePostResponse"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "postGeoShape",
        "x-stoplight": {
          "id": "6x8s1fjqklj4g"
        },
        "description": "Create a new geoShape",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "description": "Contains the information for create a new geoShape",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postGeoShape"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "title": "string",
                    "zoneType": "exclude",
                    "type": "iris",
                    "file": "string",
                    "countryCode": "string",
                    "carrierId": 0,
                    "storeId": 0,
                    "exchangePlaceId": 0
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/retry": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Retry an order",
        "operationId": "retryOrder",
        "responses": {
          "202": {
            "description": "the order retry has been registered"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "UNAUTHORISED"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "The order can't be retried",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "RETRY_FORBIDDEN"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "OrderId not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "ORDER_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "The aim of this method is to perform a retry if an order has a functional error status (ORDER_WITH_NO_CARRIER_ELIGIBLE, ORDER_WITH_NO_QUOTE, ORDER_WITH_NO_CARRIER_AVAILABLE, ORDER_REFUSED_DELIVERY).\nThis API will use exactly the same data sent for the POST /orders initial call (if part of the order data has change, then the PATCH /orders/{orderId} API has to be called instead).",
        "tags": [
          "Order"
        ]
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "This method allows you to create an order from Woop.\nOnce the order has been validated, quotes will be sent to the carriers. The delivery order will then be created once a quote has been validated.",
        "operationId": "postOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the order creation information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postOrders"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2,
                        "attributes": {
                          "footprint": {
                            "value": 13,
                            "unit": "m2"
                          }
                        },
                        "type": "PACKAGE"
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example with assembly": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Example of delivery in pickup point": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "36JGZ7"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "pickupPoint",
                        "carrierCode": "carrierX",
                        "id": "19GON"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_SELECTED_ROOM"
                    ]
                  }
                },
                "Example of delivery in exchange place": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 2"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                },
                "Example with carrier choice": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:30:00+0000",
                          "end": "2019-11-28T14:30:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_FRONT_HOME"
                    ],
                    "carrierSelection": {
                      "mode": "INCLUSION",
                      "carrierCodes": [
                        "chronopost"
                      ]
                    }
                  }
                },
                "Example with bookingId": {
                  "value": {
                    "orderId": "65z4eq1d6q54zd1",
                    "referenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "picking": {
                      "location": {
                        "type": "exchangePlace",
                        "id": "EXCHANGE PLACE 1"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "bookingId": "34452233"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "optIn": {
                          "survey": [
                            "MAIL"
                          ],
                          "delivery": [
                            "MAIL",
                            "SMS"
                          ]
                        },
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "references": [
                          {
                            "reference": "123456789A",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          },
                          {
                            "reference": "123456789B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sdsdsd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 2
                      }
                    ],
                    "services": [
                      "SERVICE_ASSEMBLY"
                    ],
                    "tags": [
                      {
                        "key": "origin",
                        "value": "web"
                      }
                    ],
                    "productsPrice": {
                      "value": 30,
                      "currency": "EUR"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "the order has been registered"
          },
          "202": {
            "description": "Date in some fields are incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "error message",
                            "example": "Picking start MUST be before delivery start"
                          },
                          "translationKey": {
                            "type": "string",
                            "description": "technical error message for Woop Team",
                            "example": "technical.incidents.date.pickingStartBeforeDeliveryStart"
                          },
                          "key": {
                            "type": "string",
                            "description": "technical key for Woop team",
                            "example": "order"
                          }
                        },
                        "required": [
                          "message",
                          "translationKey",
                          "key"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "errors": [
                        {
                          "message": "Picking start MUST be before delivery start",
                          "translationKey": "technical.incidents.date.pickingStartBeforeDeliveryStart",
                          "key": "order"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"picking\" fails because [child \"interval\" fails because [\"interval\" at position 0 fails because [child \"start\" fails because [\"start\" is required]]]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "picking.interval.0.start"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Creation of the order is not possible\n\n[See the list of reasons](https://woop.stoplight.io/docs/retailer/docs/Models/Error%20reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Creation of the order with this 'orderId' is not possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 409,
                      "error": "Conflict",
                      "message": "Conflict"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create order",
        "x-internal": false
      },
      "get": {
        "tags": [
          "Order"
        ],
        "description": "This method returns the details of one or more orders according to the selected filters.\n\nThe method used is governed by the following constraints:\n\n- Result limited to 100 orders\n- Sorting orders from oldest to most recent\n\nNote: It is recommended to regularly clean old test orders on staging environment.",
        "operationId": "getOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryDeliveryStatus"
          },
          {
            "$ref": "#/components/parameters/queryStoreIdRequired"
          },
          {
            "schema": {
              "type": "string",
              "example": "FAILED"
            },
            "in": "query",
            "name": "deliverySubStatus",
            "description": "Filters the list of commands based on the subStatus"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "fromPickingDate",
            "description": "Filter by picking date. Allows you to retrieve orders from this date."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "toPickingDate",
            "description": "Filter by picking date. Allows you to retrieve orders prior to this date."
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains retrieved orders",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseOrder-(getAll)"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Request is not possible for this 'storeId'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get orders"
      }
    },
    "/orders/{orderId}/label": {
      "get": {
        "tags": [
          "Label"
        ],
        "description": "This method retrieves a carrier label based on the order identifier. \nThe label can be retrieved in several formats (provided the carrier is compatible with that format).",
        "operationId": "getLabelByOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "A6"
              ]
            },
            "in": "query",
            "name": "size",
            "description": "Size of the label ***[Only for a single package]***"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the retrieved label.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Label information",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "description": "The label is returned in base64 in the format indicated at the time of the call"
                    },
                    "trackingUrls": {
                      "$ref": "./models/trackingUrls.yaml"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingUrls"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingUrls": {
                        "carrier": "https://tracking.best-carrier.com/XJHSDL541",
                        "woop": {
                          "simple": "https://trace.woopit.fr/t/48aed-b5552d-4da5-813c-00c06e1ff327",
                          "multiple": "https://trace.woopit.fr/m/48aed-b5552d-4da5-813c-00c06e1ff327"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Unable to request this 'orderId'/`size` argument not authorised (multiple packages) ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieve label"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Order identifier"
        }
      ]
    },
    "/orders/{orderId}/return": {
      "post": {
        "tags": [
          "Product return"
        ],
        "description": "This method allows you to request a product return from an order.",
        "operationId": "postProductReturn",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information on the product return request.",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/postProductReturn"
                  }
                ]
              },
              "examples": {
                "Default example": {
                  "value": {
                    "orderReturnId": "65z4eq1d6q54zd1",
                    "initialReferenceNumber": "65q41zdq65z14",
                    "storeId": "AX645",
                    "initialCarrier": true,
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "165 avenue de Bretagne",
                        "elevator": true,
                        "floor": 3,
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-27T12:00:00+0000",
                          "end": "2019-11-27T14:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Michel",
                        "lastName": "Dupont",
                        "phone": "+33600000000",
                        "email": "michel.dupont@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": [
                        {
                          "start": "2019-11-28T13:00:00+0000",
                          "end": "2019-11-28T15:00:00+0000"
                        }
                      ],
                      "contact": {
                        "firstName": "Pierre",
                        "lastName": "Dupond",
                        "phone": "+33600000000",
                        "email": "pierre.dupond@mail.fr",
                        "language": "fr",
                        "timezone": "Europe/Paris"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lampe",
                            "quantity": 1
                          }
                        ],
                        "quantity": 5
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The return has been registered"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "statusCode": 400,
                      "error": "Bad Request",
                      "message": "child \"location\" fails because [child \"addressLine1\" fails because [\"addressLine1\" is required], child \"id\" fails because [\"id\" is required]]",
                      "validation": {
                        "source": "payload",
                        "keys": [
                          "location.addressLine1",
                          "location.id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Creation of a return is not possible or the state of the order does not allow a product return\n\n[See the list of reasons](https://woop.stoplight.io/docs/retailer/docs/Models/Error%20reasons.md)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Creation of a product return is not possible with this 'referenceNumber'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "summary": "Create product return"
      }
    },
    "/orders/{orderId}/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method allows you to retrieve information from documents attached to an order.",
        "operationId": "getOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "description": "List of documents",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Identifier of the document"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date of the document"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the document"
                          },
                          "type": {
                            "type": "string",
                            "description": "Document type",
                            "enum": [
                              "EVIDENCE",
                              "INVOICE",
                              "CONTRACT"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "documents": [
                        {
                          "id": "5efda342ajkj700012064b57",
                          "date": "2020-07-02T09:05:06.361Z",
                          "type": "EVIDENCE",
                          "name": "picture_1593680706.pdf"
                        },
                        {
                          "id": "5efda342ajkj700012064b55",
                          "date": "2020-07-02T09:06:06.361Z",
                          "type": "INVOICE",
                          "name": "invoice_1593680706.pdf"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No documents for this order"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "The 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieve documents"
      },
      "post": {
        "summary": "Add an order document",
        "operationId": "post-orders-orderId-documents",
        "responses": {
          "201": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Bad Request - Request processed successfully"
          },
          "401": {
            "description": "Unauthorized - You are not allowed to access this item."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Document"
        ],
        "description": "This method allows you to upload a document in base64 directly to the Woop platform, one by one. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "ncezaqg691wxk"
                    },
                    "description": "Document type",
                    "enum": [
                      "INVOICE",
                      "CUSTOMS_DECLARATION",
                      "TERMS"
                    ],
                    "example": "INVOICE"
                  },
                  "document": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "3e0pxqoazd7ig"
                    },
                    "description": "Document in base64"
                  },
                  "date": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "fh4up64tz5hw8"
                    },
                    "description": "Creation date of the document",
                    "format": "date-time",
                    "example": "2023-07-01T13:00:00+0000"
                  },
                  "name": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "tayjvwrnl5fd0"
                    },
                    "description": "Document name",
                    "example": "document.pdf"
                  }
                },
                "required": [
                  "type",
                  "document",
                  "date",
                  "name"
                ]
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}/documents/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method allows you to download the order documents in zip format.",
        "operationId": "downloadOrderDocuments",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains documents in zip format.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": ""
                },
                "examples": {}
              }
            }
          },
          "204": {
            "description": "No documents for this order."
          },
          "401": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "The 'orderId' does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Download all documents"
      }
    },
    "/orders/{orderId}/documents/{documentId}/download": {
      "get": {
        "tags": [
          "Document"
        ],
        "description": "This method allows you to download an order document",
        "operationId": "downloadOrderDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathOrderId"
          },
          {
            "$ref": "#/components/parameters/pathDocumentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the document in its original format",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "404": {
            "description": "The 'orderId' or 'documentId' do not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Download an order document"
      }
    },
    "/pickupPoints": {
      "post": {
        "tags": [
          "Pickup points"
        ],
        "description": "This method retrieves the list of relay-point for all the carriers associed to your account.\n\nThe method works like a search engine based on just two mandatory criteria: Latitude and Longitude of the delivery point. \n\nSearch options enable you to refine the method's eligibility engine. The more options there are, the more precise the results will be. \n\nOptionally, you can search for a relay-point based on the contents of the customer basket (parcel dimensions: length, width, height and weight). This allows you to suggest delivery points capable of receiving parcels of a certain weight. \n\n[See explanation](https://woop.stoplight.io/docs/retailer/docs/Models/Pickup%20points.md)",
        "operationId": "postPickupPoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains the information for a relay point search.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postPickupPoints"
              },
              "examples": {
                "Simple search": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "limit": 10,
                    "kilometricDistance": 20
                  }
                },
                "Search by type": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 20,
                    "type": [
                      "PICKUP_POINT_AGENCY"
                    ]
                  }
                },
                "Search by type and carrier": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 20,
                    "carrierCode": [
                      "bpost",
                      "chronopost"
                    ],
                    "type": {
                      "bpost": [
                        "PICKUP_POINT_AGENCY"
                      ],
                      "chronopost": [
                        "PICKUP_POINT_RELAY_WITH_LOCKER"
                      ]
                    }
                  }
                },
                "Search by categories": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 20,
                    "carrierCode": "mondial-relay",
                    "category": {
                      "mondial-relay": [
                        "24R",
                        "24L"
                      ]
                    }
                  }
                },
                "Search by categories and carrier": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 20,
                    "carrierCode": [
                      "dpd",
                      "mondial-relay"
                    ],
                    "category": {
                      "mondial-relay": [
                        "24R",
                        "24L"
                      ]
                    }
                  }
                },
                "Search with deposit date": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 50,
                    "depositDate": "2021-09-30"
                  }
                },
                "Search by basket": {
                  "value": {
                    "latitude": 50.6379636,
                    "longitude": 3.077384,
                    "kilometricDistance": 20,
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 1,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ]
                  }
                },
                "Search pickup point with reservation": {
                  "value": {
                    "storeId": "string",
                    "latitude": 0,
                    "longitude": 0,
                    "limit": 25,
                    "offset": 0,
                    "kilometricDistance": 5,
                    "type": [
                      "PICKUP_POINT_RELAY_WITH_LOCKER"
                    ],
                    "carrierCode": "string",
                    "depositDate": "2019-08-24",
                    "packages": [
                      {
                        "references": [
                          {
                            "reference": "12345B",
                            "barcode": {
                              "value": "54fd56g4f5gfd456sd",
                              "type": "barcode",
                              "format": "128"
                            }
                          }
                        ],
                        "length": {
                          "value": 10,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 10,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 10,
                          "unit": "cm"
                        },
                        "weight": {
                          "value": 2,
                          "unit": "kg"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "string",
                            "cug": "string",
                            "label": "string",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1,
                        "attributes": {
                          "footprint": {
                            "value": 13,
                            "unit": "cm2"
                          }
                        },
                        "type": "PACKAGE"
                      }
                    ],
                    "countryCode": "string",
                    "pickUpPointAccessibility": "ACCESSIBLE",
                    "boxCategoryAccessibility": "UPPER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK. Contains the retrieved relay points.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickupPoints": {
                      "type": "array",
                      "description": "Information on relay points",
                      "items": {
                        "$ref": "#/components/schemas/pickupPoint"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "pickupPoints": [
                        {
                          "address": {
                            "addressLine1": "168 RUE DES POSTES",
                            "postalCode": "59000",
                            "city": "Lille",
                            "country": "FR",
                            "title": "Relay point"
                          },
                          "coordinates": {
                            "latitude": 50.638386,
                            "longitude": 3.077183
                          },
                          "id": "q251zd564qz",
                          "carrier": {
                            "code": "transporteur1",
                            "name": "Transporteur A"
                          },
                          "category": "XL",
                          "type": "PICKUP_POINT_AGENCY",
                          "openingHours": {
                            "monday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "tuesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "wednesday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "thursday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "friday": [
                              {
                                "start": "08:00",
                                "end": "19:30"
                              }
                            ],
                            "saturday": [
                              {
                                "start": "08:00",
                                "end": "16:00"
                              }
                            ],
                            "sunday": [
                              {
                                "start": "08:00",
                                "end": "12:00"
                              }
                            ]
                          },
                          "closingDates": [
                            "2022-12-26",
                            "2022-12-27",
                            "2022-12-27"
                          ],
                          "maxWeight": {
                            "value": 250,
                            "unit": "kg"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "Request for 'storeId' not possible",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Search pickup points"
      }
    },
    "/pickupPoints/{pickupPointId}": {
      "get": {
        "tags": [
          "Pickup points"
        ],
        "description": "This method allows you to retrieve the details of a relay point by its ID and the associated carrier code",
        "operationId": "getPickupPoint",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/pathPickupPointId"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierCode",
            "required": true,
            "description": "Carrier code"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the retrieved relay points.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Relay point details",
                  "properties": {
                    "pickupPoint": {
                      "$ref": "#/components/schemas/pickupPoint"
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "pickupPoint": {
                        "address": {
                          "addressLine1": "168 RUE DES POSTES",
                          "postalCode": "59000",
                          "city": "Lille",
                          "country": "FR",
                          "title": "Relay point"
                        },
                        "coordinates": {
                          "latitude": 50.638386,
                          "longitude": 3.077183
                        },
                        "id": "q251zd564qz",
                        "carrier": {
                          "code": "transporteur1",
                          "name": "Transporteur A"
                        },
                        "category": "XL",
                        "type": "PICKUP_POINT_AGENCY",
                        "openingHours": {
                          "monday": [
                            {
                              "start": "08:00",
                              "end": "19:30"
                            }
                          ],
                          "tuesday": [
                            {
                              "start": "08:00",
                              "end": "19:30"
                            }
                          ],
                          "wednesday": [
                            {
                              "start": "08:00",
                              "end": "19:30"
                            }
                          ],
                          "thursday": [
                            {
                              "start": "08:00",
                              "end": "19:30"
                            }
                          ],
                          "friday": [
                            {
                              "start": "08:00",
                              "end": "19:30"
                            }
                          ],
                          "saturday": [
                            {
                              "start": "08:00",
                              "end": "16:00"
                            }
                          ],
                          "sunday": [
                            {
                              "start": "08:00",
                              "end": "12:00"
                            }
                          ]
                        },
                        "maxWeight": {
                          "value": 250,
                          "unit": "kg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 403,
                      "error": "Forbidden",
                      "message": "Store doesn't exist or is inactive"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The 'pickupPointId' for the carrier code does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 404,
                      "error": "Not Found",
                      "message": "Not Found"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Pickup point detail"
      }
    },
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "description": "Endpoint for initiating exchanges with retailer APIs.",
        "operationId": "postSubscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Contains subscription information.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Subscription information",
                "properties": {
                  "callbacks": {
                    "type": "object",
                    "description": "Event callbacks",
                    "properties": {
                      "carrier": {
                        "type": "object",
                        "description": "Callback to receive the choice of carrier.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "orderStatus": {
                        "type": "object",
                        "description": "Callback to receive status changes",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "deliveryStatus": {
                        "type": "object",
                        "description": "Callback to receive status changes",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "parcelStatus": {
                        "type": "object",
                        "description": "Callback to receive status changes",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "score": {
                        "type": "object",
                        "description": "Callback to receive customer ratings",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route."
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback.",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "deliveryClosure": {
                        "type": "object",
                        "description": "Callback to receive billing information",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route."
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "event": {
                        "type": "object",
                        "description": "Callback to receive notifications sent to the customer",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "deltaCost": {
                        "type": "object",
                        "description": "Callback to receive deltaCost information on the order issued by the carrier.",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "quote": {
                        "type": "object",
                        "description": "Callback to receive quotes from carriers",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "deliveryStop": {
                        "type": "object",
                        "description": "Callback to receive changes in the delivery stops of an order",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "example": "1.8.0",
                            "description": "API version for this callback"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "tracking": {
                        "type": "object",
                        "description": "Callback to receive changes in the tracking page url of an order",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.9.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "collectStatus": {
                        "type": "object",
                        "description": "Callback to receive changes in the status of a collection",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "description": "API version for this callback",
                            "example": "1.1.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "loadingIdentifications": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "kdokrmjx1yxep"
                        },
                        "description": "Callback to receive the loading identifications",
                        "properties": {
                          "url": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "jzdej03iojerw"
                            },
                            "description": "URL of the API route"
                          },
                          "version": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "2auqf2olq42oe"
                            },
                            "description": "API version for this callback",
                            "example": "1.12.0"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      },
                      "pickUpPointBookingStatus": {
                        "type": "object",
                        "x-stoplight": {
                          "id": "slif0ildf7rne"
                        },
                        "description": "Callback to receive the booking status",
                        "properties": {
                          "url": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "n588mb7ju542x"
                            },
                            "description": "url of the API"
                          },
                          "version": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "ols7d22qix5jo"
                            },
                            "description": "u"
                          }
                        },
                        "required": [
                          "url"
                        ]
                      }
                    }
                  },
                  "headers": {
                    "type": "array",
                    "description": "Additional HTTP headers to be sent in callbacks",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key/name of the header"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the header"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ]
                    }
                  },
                  "auth": {
                    "type": "object",
                    "description": "Configuring the authentication of your API",
                    "properties": {
                      "basic": {
                        "type": "object",
                        "description": "To be defined if the required API authentication method is basic",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      },
                      "oauth2": {
                        "type": "object",
                        "description": "To be defined if the required API authentication method is oauth2",
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "client_secret": {
                            "type": "string"
                          },
                          "audience": {
                            "type": "string"
                          },
                          "grant_type": {
                            "type": "string"
                          },
                          "tokenEndPoint": {
                            "type": "string",
                            "description": "URL to retrieve the access token according to the clientId and the clientSecret"
                          }
                        },
                        "required": [
                          "client_id",
                          "client_secret",
                          "tokenEndPoint"
                        ]
                      },
                      "token": {
                        "type": "object",
                        "description": "To be defined if the authentication method gives a bearer token from a username/password",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "endpoint": {
                            "type": "string",
                            "description": "URL to retrieve the access token"
                          }
                        },
                        "required": [
                          "username",
                          "password",
                          "endpoint"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "callbacks"
                ]
              },
              "examples": {
                "Basic": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "deliveryStop": {
                        "url": "https://my_url/orders/{orderId}/stops",
                        "version": "1.8.0"
                      },
                      "tracking": {
                        "url": "https://my_url/orders/{orderId}/trackingPageUrl",
                        "version": "1.9.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      },
                      "loadingIdentifications": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/loadingIdentifications",
                        "version": "1.1.0"
                      },
                      "bookingStatus": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "headers": [
                      {
                        "key": "x-api-key",
                        "value": "KJK13I7Y12"
                      }
                    ],
                    "auth": {
                      "basic": {
                        "username": "admin",
                        "password": "1234"
                      }
                    }
                  }
                },
                "OAuth2": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "deliveryStop": {
                        "url": "https://my_url/orders/{orderId}/stops",
                        "version": "1.8.0"
                      },
                      "tracking": {
                        "url": "https://my_url/orders/{orderId}/trackingPageUrl",
                        "version": "1.9.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      },
                      "loadingIdentifications": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/loadingIdentifications",
                        "version": "1.1.0"
                      },
                      "bookingStatus": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "oauth2": {
                        "client_id": "8664fb6e578be877cdd16e2c13e1db3e",
                        "client_secret": "4bb43097953c6d3ffae77b77f4716bba",
                        "audience": "carrier.last-mile.fr",
                        "grant_type": "oAuth2ClientCredentials",
                        "tokenEndPoint": "token.last-mile.fr"
                      }
                    }
                  }
                },
                "Token": {
                  "value": {
                    "callbacks": {
                      "carrier": {
                        "url": "https://my_url/orders/{orderId}/carrier",
                        "version": "1.1.0"
                      },
                      "status": {
                        "url": "https://my_url/orders/{orderId}/status",
                        "version": "1.1.0"
                      },
                      "score": {
                        "url": "https://my_url/orders/{orderId}/score",
                        "version": "1.1.0"
                      },
                      "deliveryClosure": {
                        "url": "https://my_url/orders/{orderId}/deliveryClosure",
                        "version": "1.1.0"
                      },
                      "event": {
                        "url": "https://my_url/orders/{orderId}/event",
                        "version": "1.1.0"
                      },
                      "deliveryStop": {
                        "url": "https://my_url/orders/{orderId}/stops",
                        "version": "1.8.0"
                      },
                      "tracking": {
                        "url": "https://my_url/orders/{orderId}/trackingPageUrl",
                        "version": "1.9.0"
                      },
                      "collectStatus": {
                        "url": "https://my_url/collects/{collectId}/status",
                        "version": "1.1.0"
                      },
                      "loadingIdentifications": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/loadingIdentifications",
                        "version": "1.1.0"
                      },
                      "bookingStatus": {
                        "url": "https://my_url/orders/{orderId}/bookings/{bookingId}/status",
                        "version": "1.1.0"
                      }
                    },
                    "auth": {
                      "token": {
                        "username": "admin",
                        "password": "1234",
                        "endpoint": "token.last-mile.fr"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "400": {
            "description": "Missing and/or incorrect items in the body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reasons": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Missing argument 'xxxxx'"
                      }
                    }
                  }
                },
                "examples": {
                  "Example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Subscription management"
      }
    },
    "/eligibilities": {
      "post": {
        "summary": "Carrier and service eligibility",
        "operationId": "postEligibilities",
        "responses": {
          "200": {
            "description": "List of eligible carriers and services.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "List of eligible carriers and services",
                  "properties": {
                    "eligibilities": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "carrier",
                          "services"
                        ],
                        "properties": {
                          "carrier": {
                            "type": "object",
                            "description": "Eligible carrier",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Carrier name"
                              },
                              "code": {
                                "type": "string",
                                "description": "Internal carrier code"
                              },
                              "score": {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "5109wnjzhnwm5"
                                },
                                "properties": {
                                  "satisfaction": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "ctd1hw62czh8m"
                                    }
                                  },
                                  "nps": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "nr62s0hyyk0p1"
                                    }
                                  },
                                  "onTimeDeliveryScore": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "dw5mjrm1iu8mx"
                                    }
                                  }
                                }
                              },
                              "impact": {
                                "type": "object",
                                "x-stoplight": {
                                  "id": "zbix3o8qcx1hi"
                                },
                                "description": "Impact values regarding carriers",
                                "properties": {
                                  "emissionType": {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "kffw095mohix1"
                                    },
                                    "description": "Type of GHG emissions emitted by the carrier",
                                    "properties": {
                                      "CO2e": {
                                        "type": "object",
                                        "x-stoplight": {
                                          "id": "tly0uhp4lcz2r"
                                        },
                                        "description": "CO2e emissions",
                                        "properties": {
                                          "reliabilityScore": {
                                            "type": "integer",
                                            "x-stoplight": {
                                              "id": "h2lol3u69ulto"
                                            },
                                            "description": "Average of the reliability score for the carrier"
                                          },
                                          "emissions": {
                                            "type": "object",
                                            "x-stoplight": {
                                              "id": "193k9otcze2xp"
                                            },
                                            "description": "Detailed values for the emissions",
                                            "properties": {
                                              "WTW": {
                                                "type": "array",
                                                "x-stoplight": {
                                                  "id": "igpxrxmae8ztv"
                                                },
                                                "description": "Weel to wheel emissions (from extraction to the combustion)",
                                                "items": {
                                                  "x-stoplight": {
                                                    "id": "3ts3gjxrt5byz"
                                                  },
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "x-stoplight": {
                                                        "id": "eyuiv8jhxflkc"
                                                      }
                                                    },
                                                    "unit": {
                                                      "x-stoplight": {
                                                        "id": "01q4ugsd0z52y"
                                                      },
                                                      "enum": [
                                                        "kgCO2e",
                                                        "KgCO2e/t.km"
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "WTT": {
                                                "type": "array",
                                                "x-stoplight": {
                                                  "id": "0h855w7dq1uz5"
                                                },
                                                "items": {
                                                  "x-stoplight": {
                                                    "id": "xtj71i1cys148"
                                                  },
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "x-stoplight": {
                                                        "id": "ydh62zpoi3yuv"
                                                      }
                                                    },
                                                    "unit": {
                                                      "x-stoplight": {
                                                        "id": "2po0ck190iewj"
                                                      },
                                                      "enum": [
                                                        "KgCO2e/km",
                                                        "KgCO2e/tkm."
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "TTW": {
                                                "type": "array",
                                                "x-stoplight": {
                                                  "id": "w5y3kft0izpoy"
                                                },
                                                "items": {
                                                  "x-stoplight": {
                                                    "id": "1pzy3fadr0wy0"
                                                  },
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "x-stoplight": {
                                                        "id": "e8v91xlh90fnl"
                                                      }
                                                    },
                                                    "unit": {
                                                      "x-stoplight": {
                                                        "id": "d8npz9269d8dp"
                                                      },
                                                      "enum": [
                                                        "KgCO2e/km",
                                                        "KgCO2e/t.km"
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "production": {
                                                "type": "array",
                                                "x-stoplight": {
                                                  "id": "8tr07lc0n3fvr"
                                                },
                                                "items": {
                                                  "x-stoplight": {
                                                    "id": "ls4w5fx3ksl6m"
                                                  },
                                                  "type": "object",
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "x-stoplight": {
                                                        "id": "7867bcssv0dqb"
                                                      }
                                                    },
                                                    "unit": {
                                                      "x-stoplight": {
                                                        "id": "qzyy6mgwjl2rh"
                                                      },
                                                      "enum": [
                                                        "KgCO2e/km",
                                                        "KgCO2e/t.km"
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "labelling": {
                                    "type": "array",
                                    "x-stoplight": {
                                      "id": "3hpv73ds3m9kf"
                                    },
                                    "description": "Ecological programs in which carriers are engaged",
                                    "items": {
                                      "x-stoplight": {
                                        "id": "q7ghmifbgib2b"
                                      },
                                      "type": "object",
                                      "properties": {
                                        "from": {
                                          "type": "string",
                                          "x-stoplight": {
                                            "id": "78u67dkg82noy"
                                          }
                                        },
                                        "to": {
                                          "type": "string",
                                          "x-stoplight": {
                                            "id": "pltivgjvjeu24"
                                          }
                                        },
                                        "name": {
                                          "type": "string",
                                          "x-stoplight": {
                                            "id": "qhmwq84aee5x8"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "route": {
                            "type": "object",
                            "properties": {
                              "distance": {
                                "type": "object",
                                "description": "distance between picking address and delivery ",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  },
                                  "unit": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "delivery": {
                            "type": "object",
                            "properties": {
                              "noticePeriod": {
                                "type": "object",
                                "description": "Minimum notice for delivery",
                                "required": [
                                  "value",
                                  "unit"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  },
                                  "unit": {
                                    "type": "string"
                                  }
                                }
                              },
                              "promise": {
                                "type": "object",
                                "description": "Promise of delivery ",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  },
                                  "unit": {
                                    "type": "string"
                                  }
                                }
                              },
                              "minDeliveryTime": {
                                "type": "object",
                                "description": "Min delivery time",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  },
                                  "unit": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cutOffs": {
                                "type": "object",
                                "properties": {
                                  "timezone": {
                                    "type": "string",
                                    "x-stoplight": {
                                      "id": "hjlxunxjoktit"
                                    }
                                  },
                                  "sameDay": {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "x2p9fadhs4qae"
                                    },
                                    "properties": {
                                      "hours": {
                                        "type": "string",
                                        "x-stoplight": {
                                          "id": "tlqxwyjliofm7"
                                        }
                                      },
                                      "minutes": {
                                        "type": "string",
                                        "x-stoplight": {
                                          "id": "9zwnefail9vss"
                                        }
                                      }
                                    }
                                  },
                                  "nextDay": {
                                    "type": "object",
                                    "x-stoplight": {
                                      "id": "v43xd8hlfnkk9"
                                    },
                                    "properties": {
                                      "hours": {
                                        "type": "string",
                                        "x-stoplight": {
                                          "id": "hfftqupxnlac9"
                                        }
                                      },
                                      "minutes": {
                                        "type": "string",
                                        "x-stoplight": {
                                          "id": "d21ygobckgypd"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "durationSlot": {
                            "type": "object",
                            "description": "Duration of the delivery slot",
                            "required": [
                              "value",
                              "unit"
                            ],
                            "properties": {
                              "value": {
                                "type": "number"
                              },
                              "unit": {
                                "type": "string",
                                "enum": [
                                  "day",
                                  "hour"
                                ]
                              }
                            }
                          },
                          "services": {
                            "type": "array",
                            "description": "List of delivery services",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "types": {
                                  "$ref": "#/components/schemas/pickupPointType"
                                },
                                "categories": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "slots": {
                            "$ref": "#/components/schemas/availableSlot"
                          },
                          "price": {
                            "$ref": "./models/price.yaml"
                          },
                          "workSchedule": {
                            "$ref": "./models/Carrier/workSchedule.json"
                          },
                          "minPickingDate": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "yyuz6lsxn9x7c"
                            },
                            "format": "date-time"
                          },
                          "minDeliveryDate": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "vq9gepfm3nyzo"
                            },
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Default Example": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "chronopost",
                            "name": "Chronopost"
                          },
                          "service": [
                            {
                              "name": "SERVICE_FRONT_HOME"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with slots": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "mondial-relay",
                            "name": "Mondial Relay"
                          },
                          "durationSlot": {
                            "value": 2,
                            "unit": "hour"
                          },
                          "service": [
                            {
                              "name": "SERVICE_PICKUP_POINT",
                              "types": [
                                "PICKUP_POINT_AGENCY",
                                "PICKUP_POINT_POST_OFFICE",
                                "PICKUP_POINT_RELAY_WITH_LOCKER",
                                "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                                "PICKUP_POINT_ALL"
                              ],
                              "categories": [
                                "24R",
                                "24L",
                                "Drive"
                              ]
                            }
                          ],
                          "slots": [
                            {
                              "start": "2019-05-02T15:52:01+0000",
                              "end": "2019-05-02T17:52:01+0000",
                              "remainingCapacity": 5
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with carrier constraints": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "name": "string",
                            "code": "string"
                          },
                          "delivery": {
                            "noticePeriod": {
                              "value": 0,
                              "unit": "string"
                            },
                            "promise": {
                              "value": 0,
                              "unit": "string"
                            },
                            "minDeliveryTime": {
                              "value": 0,
                              "unit": "string"
                            }
                          },
                          "durationSlot": {
                            "value": 0,
                            "unit": "day"
                          },
                          "services": [
                            {
                              "name": "string",
                              "types": "PICKUP_POINT_ALL",
                              "categories": [
                                "string"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with slots and constraints": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "mondial-relay",
                            "name": "Mondial Relay"
                          },
                          "delivery": {
                            "noticePeriod": {
                              "value": 2,
                              "unit": "day"
                            },
                            "promise": {
                              "value": 2,
                              "unit": "hour"
                            },
                            "minDeliveryTime": {
                              "value": 2,
                              "unit": "hour"
                            }
                          },
                          "durationSlot": {
                            "value": 2,
                            "unit": "hour"
                          },
                          "service": [
                            {
                              "name": "SERVICE_PICKUP_POINT",
                              "types": [
                                "PICKUP_POINT_AGENCY",
                                "PICKUP_POINT_POST_OFFICE",
                                "PICKUP_POINT_RELAY_WITH_LOCKER",
                                "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                                "PICKUP_POINT_ALL"
                              ],
                              "categories": [
                                "24R",
                                "24L",
                                "Drive"
                              ]
                            }
                          ],
                          "slots": [
                            {
                              "start": "2019-05-02T15:52:01+0000",
                              "end": "2019-05-02T17:52:01+0000",
                              "remainingCapacity": 5
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with distance": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "mondial-relay",
                            "name": "Mondial Relay"
                          },
                          "route": {
                            "distance": {
                              "value": 23.5,
                              "unit": "km"
                            }
                          },
                          "service": [
                            {
                              "name": "SERVICE_PICKUP_POINT",
                              "types": [
                                "PICKUP_POINT_AGENCY",
                                "PICKUP_POINT_POST_OFFICE",
                                "PICKUP_POINT_RELAY_WITH_LOCKER",
                                "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                                "PICKUP_POINT_ALL"
                              ],
                              "categories": [
                                "24R",
                                "24L",
                                "Drive"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with pickup-point ": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "mondial-relay",
                            "name": "Mondial Relay"
                          },
                          "service": [
                            {
                              "name": "SERVICE_PICKUP_POINT",
                              "types": [
                                "PICKUP_POINT_AGENCY",
                                "PICKUP_POINT_POST_OFFICE",
                                "PICKUP_POINT_RELAY_WITH_LOCKER",
                                "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
                                "PICKUP_POINT_ALL"
                              ],
                              "categories": [
                                "24R",
                                "24L",
                                "Drive"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Example with workSchedule": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "mondial-relay",
                            "name": "Mondial Relay"
                          },
                          "workSchedule": {
                            "timezone": "Europe/Paris",
                            "monday": [
                              {
                                "end": "11:00",
                                "start": "07:00"
                              },
                              {
                                "end": "17:00",
                                "start": "13:00"
                              }
                            ],
                            "tuesday": [
                              {
                                "end": "11:00",
                                "start": "07:00"
                              },
                              {
                                "end": "17:00",
                                "start": "13:00"
                              }
                            ],
                            "wednesday": null,
                            "thursday": null,
                            "friday": null,
                            "saturday": null,
                            "sunday": null
                          }
                        }
                      ]
                    }
                  },
                  "Example with cutOffs conf and minPickingDate + minDeliveryDate information": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "niji-carrier",
                            "name": "Niji carrier"
                          },
                          "route": {
                            "distance": {
                              "unit": "km",
                              "value": 0
                            }
                          },
                          "services": [
                            {
                              "name": "SERVICE_COMPLEX_INSTALL"
                            },
                            {
                              "name": "SERVICE_RECOVERY"
                            },
                            {
                              "name": "SERVICE_PICKUP_POINT"
                            },
                            {
                              "name": "SERVICE_REGULAR_FRONT_HOME"
                            },
                            {
                              "name": "SERVICE_ASSEMBLY"
                            },
                            {
                              "name": "SERVICE_RETURN"
                            },
                            {
                              "name": "SERVICE_STANDARD_TAXI"
                            },
                            {
                              "name": "SERVICE_XL_TAXI"
                            },
                            {
                              "name": "SERVICE_WITH_SIGNATURE"
                            }
                          ],
                          "slots": [],
                          "delivery": {
                            "cutoffs": {
                              "nextDay": {
                                "hours": "20",
                                "minutes": "00"
                              },
                              "sameDay": {
                                "hours": "20",
                                "minutes": "00"
                              },
                              "timezone": "Europe/Paris"
                            }
                          },
                          "workSchedule": {
                            "friday": [
                              {
                                "end": "20:00",
                                "start": "08:00"
                              }
                            ],
                            "monday": [
                              {
                                "end": "20:00",
                                "start": "08:00"
                              }
                            ],
                            "sunday": [],
                            "tuesday": [
                              {
                                "end": "20:00",
                                "start": "08:00"
                              }
                            ],
                            "saturday": [],
                            "thursday": [
                              {
                                "end": "20:00",
                                "start": "08:00"
                              }
                            ],
                            "timezone": "Europe/Paris",
                            "wednesday": [
                              {
                                "end": "20:00",
                                "start": "08:00"
                              }
                            ]
                          },
                          "minPickingDate": "2023-06-16T13:22:27.287Z",
                          "minDeliveryDate": "2023-06-16T13:22:27.287Z"
                        }
                      ]
                    }
                  },
                  "Example with carrierScore": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "carrier-number-1",
                            "name": "Carrier number one",
                            "score": {
                              "satisfaction": 8,
                              "nps": 8,
                              "onTimeDeliveryScore": 8.2
                            }
                          }
                        }
                      ]
                    }
                  },
                  "Example with carrierImpact": {
                    "value": {
                      "eligibilities": [
                        {
                          "carrier": {
                            "code": "carrier-number-1",
                            "name": "Carrier number one",
                            "score": {
                              "satisfaction": 8,
                              "nps": 8,
                              "onTimeDeliveryScore": 8.2
                            },
                            "impact": {
                              "labeling": [
                                {
                                  "from": "2023-10-10",
                                  "to": "2024-10-10",
                                  "name": "Charte Objectif CO2"
                                },
                                {
                                  "from": "2023-10-10",
                                  "to": "2024-10-10",
                                  "name": "Label WOOP"
                                }
                              ],
                              "emissionType": {
                                "CO2e": {
                                  "reliabilityScore": 1,
                                  "emissions": [
                                    {
                                      "WTW": [
                                        {
                                          "value": 0.69,
                                          "unit": "KgCo2e/T.km"
                                        },
                                        {
                                          "value": 12.1,
                                          "unit": "KgCo2e"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing and/or incorrect elements in the body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "reasons": [
                        "Missing argument 'xxxxx'"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "description": "This method returns the available carriers and delivery services for an order. The method returns all available services and carriers according to the starting point of the order, (optional) destination and content of the shopping cart. \n\nEligibility is calculated according to certain delivery constraints defined by the carrier. [See explanation](https://woop.stoplight.io/docs/retailer/docs/Models/Carrier%20eligibility%20constraint.md)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/postEligibilities"
              },
              "examples": {
                "Default example": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "179 Boulevard de Turin",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                },
                "Example with delivery location": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "179 Boulevard de Turin",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                },
                "Example with slot": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      },
                      "interval": {
                        "start": "2022-05-02T15:52:01+0000",
                        "end": "2022-05-02T17:52:01+0000"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "addressLine1": "179 Boulevard de Turin",
                        "postalCode": "59000",
                        "city": "Lille",
                        "country": "FR"
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01",
                    "options": {
                      "slot": {
                        "active": true,
                        "minRemainingCapacity": 1,
                        "limit": 2
                      }
                    }
                  }
                },
                "Example with distance and zoning options": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "coordinates": {
                          "latitude": 50.65849685668945,
                          "longitude": 3.0207953453063965
                        }
                      }
                    },
                    "storeId": "MAG01",
                    "options": {
                      "distance": {
                        "active": true
                      },
                      "zoning": {
                        "active": true
                      }
                    }
                  }
                },
                "Example with coordinates in picking and delivery location": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "coordinates": {
                          "latitude": 0,
                          "longitude": 0
                        }
                      }
                    },
                    "delivery": {
                      "location": {
                        "type": "address",
                        "coordinates": {
                          "latitude": 0,
                          "longitude": 0
                        }
                      }
                    },
                    "packages": [
                      {
                        "length": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "width": {
                          "value": 15,
                          "unit": "cm"
                        },
                        "height": {
                          "value": 1.2,
                          "unit": "m"
                        },
                        "weight": {
                          "value": 560,
                          "unit": "g"
                        },
                        "products": [
                          {
                            "type": "TYPOLOGY_GENERIC",
                            "ean": "4dq86zd4q6zd4q64",
                            "cug": "q56zd4q65d4q",
                            "label": "Lamp",
                            "quantity": 1
                          }
                        ],
                        "quantity": 1
                      }
                    ],
                    "storeId": "MAG01"
                  }
                },
                "Example with options.carrierScore": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "storeId": "MAG01",
                    "options": {
                      "carrierScore": {
                        "active": true
                      }
                    }
                  }
                },
                "Example with options.impact": {
                  "value": {
                    "picking": {
                      "location": {
                        "type": "address",
                        "addressLine1": "237 rue du ballon",
                        "postalCode": "59110",
                        "city": "La Madeleine",
                        "country": "FR"
                      }
                    },
                    "storeId": "MAG01",
                    "options": {
                      "impact": {
                        "active": true
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Contains eligibility request information."
        },
        "tags": [
          "Eligibility"
        ],
        "x-stoplight": {
          "id": "2mcv1861o038b"
        }
      },
      "parameters": []
    },
    "/orders/download": {
      "get": {
        "summary": "Download delivery slip by carrier",
        "tags": [
          "Document"
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the document in its original format",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "base64": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "string",
                      "description": "File content"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No documents for this order"
          },
          "401": {
            "description": "You are not authorised to access this item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                }
              }
            }
          },
          "403": {
            "description": "You cannot access this resource"
          }
        },
        "operationId": "get-orders-download",
        "description": "This method allows you to download an order slip listing all the orders, in PDF format, according to the specified parameters; Carrier code, collection date and delivery status. ",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "DELIVERY_PICK_UP_KO"
            },
            "in": "query",
            "name": "deliveryStatus",
            "required": true,
            "description": "Delivery status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "storeId",
            "required": true,
            "description": "Store identifier"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "carrierCode",
            "required": true,
            "description": "Carrier code"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pickingDate",
            "description": "Collection date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "exchangePlaceId",
            "required": true,
            "description": "Collection point ID"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "To return a json containing base64, set the value to \"application/json\""
          },
          {
            "schema": {
              "type": "string",
              "example": "FAILED"
            },
            "in": "query",
            "name": "deliverySubStatus",
            "description": "SubStatus de la livraison"
          }
        ]
      }
    },
    "/orders/{orderId}/packages/{packageId}/label": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "orderId",
          "in": "path",
          "required": true,
          "description": "Order identifier"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "packageId",
          "in": "path",
          "required": true,
          "description": "Package number"
        }
      ],
      "get": {
        "summary": "Retrieve a package label",
        "tags": [
          "Label"
        ],
        "responses": {
          "200": {
            "description": "OK. Contains the retrieved label.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Label information",
                  "type": "object",
                  "properties": {
                    "base64": {
                      "type": "string",
                      "minLength": 1,
                      "description": "The label is returned in base64 in the format indicated at the time of the call"
                    },
                    "trackingUrls:": {
                      "$ref": "./models/trackingUrls.yaml"
                    }
                  },
                  "required": [
                    "base64",
                    "trackingUrls:"
                  ]
                },
                "examples": {
                  "example": {
                    "value": {
                      "base64": "AxfzFZEGEg ...",
                      "trackingUrls:": {
                        "carrier": "https://tracking.best-carrier.com/XJHSDL541",
                        "woop": {
                          "simple": "https://trace.woopit.fr/t/48aed-b5552d-4da5-813c-00c06e1ff327",
                          "multiple": "https://trace.woopit.fr/m/48aed-b5552d-4da5-813c-00c06e1ff327"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not allowed to access this item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Request not possible for this package number.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The package number does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorCode"
                },
                "examples": {
                  "example": {
                    "value": {
                      "statusCode": 0,
                      "error": "string",
                      "message": "string",
                      "reasons": [
                        "STORE_NOT_FOUND"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getLabelByPackage",
        "description": "This method allows you to retrieve a carrier label from a sales order for a particular package. The label can be retrieved in several formats (provided the carrier is compatible with that format).\n\nThe retrieved label is unique and is associated with a single package in the order. ",
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersion"
          },
          {
            "$ref": "#/components/parameters/queryMode"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "A6"
              ]
            },
            "in": "query",
            "name": "size",
            "description": "Label size"
          }
        ]
      }
    },
    "/collects/{collectId}/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "collectId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update collect status",
        "operationId": "put-collects-collectId-status",
        "responses": {
          "204": {
            "description": "Request processed successfully"
          },
          "401": {
            "description": "You are not allowed to access this item."
          },
          "403": {
            "description": "The collection status cannot be changed"
          },
          "404": {
            "description": "The 'collectId' was not found"
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "1.4.0"
            },
            "in": "header",
            "name": "x-api-version"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/components/schemas/collectStatus"
                  },
                  "date": {
                    "type": "string",
                    "minLength": 1,
                    "format": "date-time"
                  },
                  "comment": {
                    "type": "string",
                    "minLength": 1
                  },
                  "additionalData": {
                    "type": "array",
                    "description": "Allows additional data to be sent",
                    "items": {
                      "$ref": "./woop_to_retailer.json#/components/schemas/additionalData"
                    }
                  }
                },
                "required": [
                  "status",
                  "date",
                  "comment"
                ]
              },
              "examples": {
                "Commande prête": {
                  "value": {
                    "date": "2019-08-24T14:15:22Z",
                    "comment": "The order is ready to be received.",
                    "status": "COLLECT_READY"
                  }
                }
              }
            }
          },
          "description": "Contains the new status information"
        },
        "tags": [
          "Collect"
        ],
        "description": "This method allows the retailer to send an update on the collection status.\n\nThe retailer must enter the next collection tracking status to progress the collection request. This delivery tracking status must be consistent with the defined workflow. <a href=\"/docs/retailer/docs/Modèles/Statuts-de-retrait-C&C.md\">Workflow and status list</a>"
      }
    },
    "/orders/{orderId}/packages/states": {
      "patch": {
        "x-stoplight": {
          "id": "800e91a2e583a"
        },
        "tags": [
          "Package advert"
        ]
      },
      "put": {
        "x-stoplight": {
          "id": "800e91a2e583a"
        },
        "tags": [
          "Package advert"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "oauth2",
        "flows": {},
        "description": "[See documentation](https://woop.stoplight.io/docs/retailer/docs/Basis/2.Authentication.md)"
      }
    },
    "schemas": {
      "responseOrder-(getAll)": {
        "title": "Order retrieval response (getAll)",
        "type": "object",
        "description": "Specifies the response when retrieving an order.",
        "x-examples": {
          "example-1": {
            "orders": [
              {
                "id": "787566AZEE",
                "status": "ORDER_CREATED",
                "updatedAt": "2021-02-10T09:33:41.422Z",
                "referenceNumber": "1234",
                "picking": {
                  "interval": {
                    "start": "2021-02-08T05:33:41.422Z",
                    "end": "2021-02-08T09:33:41.422Z"
                  }
                },
                "delivery": {
                  "externalDeliveryId": "45DDEZ6Z",
                  "updatedAt": "2021-02-10T09:33:41.422Z",
                  "interval": {
                    "start": "2021-02-11T06:33:41.422Z",
                    "end": "2021-02-11T09:33:41.422Z"
                  },
                  "trackingUrls:": {
                    "carrier": "https://tracking.best-carrier.com/XJHSDL541",
                    "woop": {
                      "simple": "https://trace.woopit.fr/t/48aed-b5552d-4da5-813c-00c06e1ff327",
                      "multiple": "https://trace.woopit.fr/m/48aed-b5552d-4da5-813c-00c06e1ff327"
                    }
                  },
                  "status": "DELIVERY_INIT",
                  "subStatus": "FAILED"
                },
                "carrier": {
                  "name": "Woop Carrier",
                  "contact": {
                    "firstName": "Jogn",
                    "lastName": "Doe",
                    "phone": "+33610101010",
                    "email": "johndoe@mail.com",
                    "language": "fr",
                    "timezone": "Europe/Paris",
                    "main": true,
                    "title": "Operational manager"
                  },
                  "claimUrl": "https://woopit.fr"
                },
                "parcels": [
                  {
                    "id": "56f74d65s4f564ds6",
                    "trackingId": "77899656544BY",
                    "status": "DELIVERY_KO",
                    "subStatus": "FAILED_WITH_RETURN",
                    "barcode": {
                      "value": "7841122236655",
                      "type": "barcode",
                      "format": "128"
                    },
                    "package": {
                      "reference": "EARB1225",
                      "products": [
                        {
                          "type": "TYPOLOGY_GENERIC",
                          "ean": "1259456954845",
                          "cug": "LAMPE785AD",
                          "label": "Bedside lamp",
                          "quantity": 1
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        "properties": {
          "orders": {
            "type": "array",
            "description": "List of orders",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Order identifier"
                },
                "status": {
                  "$ref": "#/components/schemas/orderStatus"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Last update datetime",
                  "format": "date"
                },
                "referenceNumber": {
                  "type": "string",
                  "description": "Order reference"
                },
                "picking": {
                  "type": "object",
                  "description": "Picking informations",
                  "required": [
                    "interval"
                  ],
                  "properties": {
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    }
                  }
                },
                "delivery": {
                  "description": "Information on the delivery",
                  "type": "object",
                  "required": [
                    "interval",
                    "trackingUrls:"
                  ],
                  "properties": {
                    "externalDeliveryId": {
                      "type": "string",
                      "description": "Delivery identifier"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Date of the last update"
                    },
                    "interval": {
                      "$ref": "#/components/schemas/interval"
                    },
                    "trackingUrls:": {
                      "$ref": "./models/trackingUrls.yaml"
                    },
                    "status": {
                      "$ref": "./models/status.yaml"
                    },
                    "subStatus": {
                      "$ref": "./models/subStatus.yaml"
                    }
                  }
                },
                "carrier": {
                  "type": "object",
                  "description": "Information from the selected carrier",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Carrier name"
                    },
                    "claimUrl": {
                      "type": "string",
                      "description": "Carrier claim Url"
                    },
                    "contact": {
                      "$ref": "#/components/schemas/contact"
                    },
                    "code": {
                      "type": "string",
                      "description": "Carrier identifier"
                    }
                  }
                }
              },
              "required": [
                "id",
                "status",
                "updatedAt",
                "picking",
                "delivery"
              ]
            }
          }
        }
      },
      "responseOrder-(getById)": {
        "title": "Order detail response (getById)",
        "type": "object",
        "description": "Specifies the response when retrieving a specific command.",
        "x-examples": {
          "Example": {
            "order": {
              "id": "787566AZEE",
              "status": "ORDER_CREATED",
              "updatedAt": "2021-02-10T09:33:41.422Z",
              "referenceNumber": "1234",
              "picking": {
                "interval": [
                  {
                    "start": "2021-02-08T05:33:41.422Z",
                    "end": "2021-02-08T09:33:41.422Z"
                  }
                ],
                "stop": {
                  "id": "12345dsffsr",
                  "routeId": "EZRZEG4353",
                  "sequenceNumber": 3,
                  "deliverySequenceNumber": 1,
                  "team": {
                    "members": [
                      {
                        "id": "176867"
                      }
                    ]
                  }
                }
              },
              "delivery": {
                "externalDeliveryId": "45DDEZ6Z",
                "updatedAt": "2021-02-10T09:33:41.422Z",
                "interval": [
                  {
                    "start": "2021-02-11T06:33:41.422Z",
                    "end": "2021-02-11T09:33:41.422Z"
                  }
                ],
                "trackingUrls:": {
                  "carrier": "https://tracking.best-carrier.com/XJHSDL541",
                  "woop": {
                    "simple": "https://trace.woopit.fr/t/48aed-b5552d-4da5-813c-00c06e1ff327",
                    "multiple": "https://trace.woopit.fr/m/48aed-b5552d-4da5-813c-00c06e1ff327"
                  },
                  "stop": {
                    "id": "12345dsffsr",
                    "routeId": "FERGER45345T3F",
                    "sequenceNumber": 3,
                    "deliverySequenceNumber": 7,
                    "team": {
                      "members": [
                        {
                          "id": "234567"
                        }
                      ]
                    }
                  }
                },
                "status": "DELIVERY_INIT",
                "subStatus": "FAILED"
              },
              "carrier": {
                "name": "Woop Carrier",
                "contact": {
                  "firstName": "Jogn",
                  "lastName": "Doe",
                  "phone": "+33610101010",
                  "email": "johndoe@mail.com",
                  "language": "fr",
                  "timezone": "Europe/Paris",
                  "main": true,
                  "title": "Operational manager"
                },
                "claimUrl": "https://woopit.fr"
              },
              "parcels": [
                {
                  "id": "56f74d65s4f564ds6",
                  "trackingId": "77899656544BY",
                  "status": "DELIVERY_KO",
                  "subStatus": "FAILED_WITH_RETURN",
                  "barcode": {
                    "value": "7841122236655",
                    "type": "barcode",
                    "format": "128"
                  },
                  "package": {
                    "reference": "EARB1225",
                    "products": [
                      {
                        "type": "TYPOLOGY_GENERIC",
                        "ean": "1259456954845",
                        "cug": "LAMPE785AD",
                        "label": "Bedside lamp",
                        "quantity": 1
                      }
                    ]
                  }
                }
              ],
              "price": {
                "taxExcludedAmount": 17.2,
                "taxIncludedAmount": 20.64,
                "taxAmount": 3.44,
                "currency": "EUR"
              },
              "emissions": {
                "estimatedCO2e": {
                  "unit": "KgCO2e",
                  "value": 13.91334,
                  "reliabilityScore": 2
                }
              }
            }
          }
        },
        "properties": {
          "order": {
            "type": "object",
            "description": "Order informations",
            "properties": {
              "id": {
                "type": "string",
                "description": "Order identifier"
              },
              "status": {
                "$ref": "#/components/schemas/orderStatus"
              },
              "updatedAt": {
                "type": "string",
                "description": "Last update datetime"
              },
              "referenceNumber": {
                "type": "string",
                "description": "Order reference"
              },
              "picking": {
                "type": "object",
                "description": "Picking informations",
                "required": [
                  "interval"
                ],
                "properties": {
                  "interval": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/interval"
                    }
                  },
                  "stop": {
                    "$ref": "./models/stop.yaml"
                  }
                }
              },
              "delivery": {
                "description": "Delivery informations",
                "type": "object",
                "required": [
                  "interval",
                  "trackingUrls:"
                ],
                "properties": {
                  "externalDeliveryId": {
                    "type": "string",
                    "description": "Delivery identifier"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Last update datetime"
                  },
                  "interval": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/interval"
                    }
                  },
                  "trackingUrls:": {
                    "$ref": "./models/trackingUrls.yaml"
                  },
                  "status": {
                    "$ref": "./models/status.yaml"
                  },
                  "subStatus": {
                    "$ref": "./models/subStatus.yaml"
                  },
                  "stop": {
                    "$ref": "./models/stop.yaml"
                  }
                }
              },
              "carrier": {
                "type": "object",
                "description": "Information from the selected carrier",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Carrier name"
                  },
                  "claimUrl": {
                    "type": "string",
                    "description": "Carrier claim URL"
                  },
                  "contact": {
                    "$ref": "#/components/schemas/contact"
                  },
                  "code": {
                    "type": "string",
                    "description": "Carrier identifier"
                  }
                }
              },
              "parcels": {
                "type": "array",
                "items": {
                  "$ref": "./models/parcel.yaml"
                }
              },
              "price": {
                "$ref": "./models/price.yaml"
              },
              "emissions": {
                "$ref": "#/components/schemas/estimatedCO2e"
              }
            },
            "required": [
              "id",
              "status",
              "updatedAt",
              "picking",
              "delivery"
            ]
          }
        }
      },
      "postCollects": {
        "description": "Specifies information relevant to the modification of a collection request.",
        "type": "object",
        "title": "Collection request (postCollects)",
        "properties": {
          "mode": {
            "$ref": "./models/collect/mode.yaml"
          },
          "collectId": {
            "type": "string",
            "minLength": 1,
            "description": "Collection request identifier"
          },
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Collection point identifier"
          },
          "bookingId": {
            "type": "string",
            "minLength": 1,
            "description": "Time slot reservation identifier"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          },
          "customer": {
            "$ref": "#/components/schemas/contact"
          },
          "packages": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "firstAvailableSlot": {
            "type": "string",
            "x-stoplight": {
              "id": "8hhcnyld5he2a"
            },
            "format": "date-time",
            "description": "only for delay mode\ndate of the first available slot"
          }
        },
        "required": [
          "collectId",
          "exchangePlaceId",
          "customer",
          "packages"
        ]
      },
      "patchCollects": {
        "description": "Specifies information relevant to the modification of a collection request.",
        "type": "object",
        "title": "Modification of a collection request (postCollects)",
        "properties": {
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Collection point identifier"
          },
          "bookingId": {
            "type": "string",
            "minLength": 1,
            "description": "Time slot reservation identifier"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          },
          "customer": {
            "$ref": "#/components/schemas/contact"
          },
          "packages": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "firstAvailableSlot": {
            "type": "string",
            "x-stoplight": {
              "id": "vfpsl9xbfhq8o"
            },
            "format": "date-time",
            "description": "only for delay mode\ndate of the first available slot"
          }
        }
      },
      "postDeliveriesBookings": {
        "description": "Specifies the information needed to book a delivery slot for a given carrier.",
        "type": "object",
        "title": "Reservation of a delivery time slot (postDeliveriesBookings)",
        "properties": {
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Picking point identifier"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          },
          "carrierCodes": {
            "type": "array",
            "description": "Carrier(s) code(s)",
            "items": {
              "type": "string"
            }
          },
          "capacity": {
            "type": "integer",
            "description": "Capacity for a delivery slot"
          },
          "type": {
            "type": "string",
            "description": "Type of delivery week",
            "example": "ORDERS_QUANTITY",
            "enum": [
              "ORDERS_QUANTITY",
              "PACKAGES_QUANTITY",
              "PALLETS_QUANTITY",
              "TRAYS_QUANTITY"
            ]
          }
        },
        "required": [
          "exchangePlaceId",
          "slot",
          "carrierCodes"
        ]
      },
      "postCollectsBookings": {
        "description": "Specifies the information needed to reserve a collection time slot.",
        "type": "object",
        "title": "Reservation of a collection time slot (postCollectsBookings)",
        "properties": {
          "exchangePlaceId": {
            "type": "string",
            "minLength": 1,
            "description": "Collection point identifier"
          },
          "slot": {
            "$ref": "#/components/schemas/slot"
          },
          "isMultiSlot": {
            "type": "boolean"
          }
        },
        "required": [
          "exchangePlaceId",
          "slot"
        ]
      },
      "postEligibilities": {
        "type": "object",
        "description": "Eligibility request",
        "title": "Request for eligibility of services (postEligibilities)",
        "x-examples": {
          "Default example": {
            "storeId": "MAG01",
            "picking": {
              "location": {
                "type": "exchangePlace",
                "id": "MAG01"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 1,
                  "unit": "cm"
                },
                "width": {
                  "value": 1,
                  "unit": "cm"
                },
                "height": {
                  "value": 1,
                  "unit": "cm"
                },
                "weight": {
                  "value": 2.4,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ]
          },
          "Example with delivery location": {
            "storeId": "MAG01",
            "picking": {
              "location": {
                "type": "exchangePlace",
                "id": "MAG01"
              }
            },
            "delivery": {
              "location": {
                "type": "address",
                "addressLine1": "179 Boulevard de Turin",
                "postalCode": "59000",
                "city": "Lille",
                "country": "FR"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 1,
                  "unit": "cm"
                },
                "width": {
                  "value": 1,
                  "unit": "cm"
                },
                "height": {
                  "value": 1,
                  "unit": "cm"
                },
                "weight": {
                  "value": 2.4,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ]
          },
          "Example with slot ": {
            "storeId": "MAG01",
            "picking": {
              "location": {
                "type": "exchangePlace",
                "id": "MAG01"
              }
            },
            "packages": [
              {
                "length": {
                  "value": 1,
                  "unit": "cm"
                },
                "width": {
                  "value": 1,
                  "unit": "cm"
                },
                "height": {
                  "value": 1,
                  "unit": "cm"
                },
                "weight": {
                  "value": 2.4,
                  "unit": "kg"
                },
                "products": [
                  {
                    "type": "TYPOLOGY_GENERIC",
                    "ean": "4dq86zd4q6zd4q64",
                    "quantity": 1
                  }
                ],
                "quantity": 1
              }
            ],
            "options": {
              "slot": {
                "active": true,
                "minRemainingCapacity": 12,
                "limit": 1
              }
            }
          }
        },
        "required": [
          "storeId",
          "picking"
        ],
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Identifier of the store issuing the request"
          },
          "picking": {
            "description": "Information on the collection location",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/locationForEligibility"
              },
              "interval": {
                "$ref": "#/components/schemas/pickingInterval"
              }
            }
          },
          "delivery": {
            "type": "object",
            "description": "Information on the delivery location",
            "required": [
              "interval"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/locationForEligibility"
              },
              "interval": {
                "$ref": "#/components/schemas/interval"
              }
            }
          },
          "packages": {
            "description": "All packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packagesForEligibility"
            }
          },
          "options": {
            "type": "object",
            "description": "List of options",
            "properties": {
              "distance": {
                "type": "object",
                "description": "Distance options",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "description": "Used to calculate the distance between the pick and the delivery."
                  }
                }
              },
              "zoning": {
                "type": "object",
                "x-stoplight": {
                  "id": "d8fg2w9jsycpz"
                },
                "description": "Zoning option allowing to launch the geocoding call wether or not there's GPS coordinates in picking and delivery locations",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "yz5ilvjf7dafr"
                    },
                    "description": "Used to launch geographic eligibility"
                  }
                }
              },
              "price": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean"
                  }
                }
              },
              "slot": {
                "type": "object",
                "description": "Allows you to define slot reservation criteria. \nWarning : To use this option, you need to enter the parcel dimensions !",
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "limit": {
                    "type": "number",
                    "description": "Max number of slot "
                  },
                  "type": {
                    "type": "string",
                    "example": "ORDERS_QUANTITY",
                    "description": "Type of capacitance in the delivery week",
                    "enum": [
                      "ORDERS_QUANTITY",
                      "PACKAGES_QUANTITY",
                      "PALLETS_QUANTITY",
                      "TRAYS_QUANTITY"
                    ],
                    "default": "ORDERS_QUANTITY"
                  },
                  "minRemainingCapacity": {
                    "type": "number",
                    "description": "Minimum remaining capacity for this slot"
                  }
                }
              },
              "carrierScore": {
                "type": "object",
                "x-stoplight": {
                  "id": "h9bq41n6c5idt"
                },
                "properties": {
                  "active": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "92uip2l87zd4p"
                    }
                  }
                }
              },
              "impact": {
                "type": "object",
                "x-stoplight": {
                  "id": "egwtljbc2zvro"
                },
                "description": "Average GHG emissions for eligible carriers ",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "x-stoplight": {
                      "id": "e7lr1o2ie07z8"
                    }
                  }
                }
              }
            }
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryService"
            }
          }
        }
      },
      "postOrders": {
        "type": "object",
        "description": "Specifies the information required for creating the order.",
        "title": "Creation of the order (postOrders)",
        "x-examples": {},
        "required": [
          "orderId",
          "storeId",
          "picking",
          "delivery",
          "packages",
          "services"
        ],
        "properties": {
          "orderId": {
            "type": "string",
            "description": "Unique order identifier (maximum 36 characters)",
            "maxLength": 36
          },
          "referenceNumber": {
            "type": "string",
            "description": "Order reference, store number. Can be the same as the orderId."
          },
          "storeId": {
            "type": "string",
            "description": "Identifier of the store issuing the request"
          },
          "picking": {
            "description": "Information on the collection location",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "interval": {
                "type": "array",
                "description": "Collection time slots",
                "items": {
                  "$ref": "#/components/schemas/pickingInterval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "description": "Information on the delivery location",
            "type": "object",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "interval": {
                "type": "array",
                "description": "Delivery time slot",
                "items": {
                  "$ref": "#/components/schemas/deliveryInterval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contactDelivery"
              }
            }
          },
          "packages": {
            "description": "All packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "services": {
            "$ref": "#/components/schemas/services"
          },
          "productsPrice": {
            "$ref": "#/components/schemas/productsPrice"
          },
          "expectedPayment": {
            "type": "object",
            "description": "Rest to be paid, to be used as part of the `SERVICE_PAY_ON_DELIVERY` service",
            "required": [
              "value",
              "currency",
              "paymentMethod"
            ],
            "properties": {
              "value": {
                "type": "number"
              },
              "currency": {
                "$ref": "./models/currency.yaml"
              },
              "paymentMethod": {
                "type": "string",
                "enum": [
                  "CASH",
                  "DEBIT_CARD",
                  "DIRECT_DEBIT",
                  "BANK_TRANSFER",
                  "CHECK",
                  "CREDIT_CARD"
                ]
              }
            }
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "carrierSelection": {
            "$ref": "#/components/schemas/carrierSelection"
          },
          "state": {
            "type": "string",
            "enum": [
              "TO_BE_COMPLETED"
            ]
          },
          "additionalData": {
            "$ref": "./models/additionalData.yaml"
          }
        }
      },
      "postProductReturn": {
        "type": "object",
        "description": "Specifies the information needed to create a product return. ",
        "title": "Return request (postProductReturn)",
        "properties": {
          "orderReturnId": {
            "type": "string",
            "description": "New order identifier"
          },
          "initialReferenceNumber": {
            "type": "string",
            "description": "Original order reference"
          },
          "storeId": {
            "type": "string",
            "description": "Identifier of the store issuing the request"
          },
          "initialCarrier": {
            "type": "boolean",
            "description": "Boolean specifying whether the return should be made with the same carrier as the original order"
          },
          "picking": {
            "type": "object",
            "description": "Collection information",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Additional comment"
              },
              "interval": {
                "type": "array",
                "description": "Collection time slots",
                "items": {
                  "$ref": "#/components/schemas/pickingInterval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "delivery": {
            "type": "object",
            "description": "Delivery information",
            "required": [
              "location",
              "interval",
              "contact"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "infos": {
                "type": "string",
                "description": "Additional comment"
              },
              "interval": {
                "type": "array",
                "description": "Delivery time slot",
                "items": {
                  "$ref": "#/components/schemas/deliveryInterval"
                }
              },
              "contact": {
                "$ref": "#/components/schemas/contact"
              }
            }
          },
          "packages": {
            "type": "array",
            "description": "All packages",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          }
        },
        "required": [
          "orderReturnId",
          "initialReferenceNumber",
          "storeId",
          "initialCarrier",
          "picking",
          "delivery",
          "packages"
        ]
      },
      "postPickupPoints": {
        "type": "object",
        "description": "Specifies the information for a pickup point search",
        "title": "Search for pickup points (postPickupPoints)",
        "x-examples": {},
        "properties": {
          "storeId": {
            "type": "string",
            "description": "Identifier of the store issuing the request"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of the search point"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the search point"
          },
          "limit": {
            "type": "number",
            "description": "Number of pickup points",
            "maximum": 100,
            "default": 25
          },
          "offset": {
            "type": "number",
            "default": 0,
            "description": "offset to display the pickup points"
          },
          "kilometricDistance": {
            "type": "number",
            "description": "Distance in kilometres from the search radius",
            "maximum": 50,
            "default": 5
          },
          "type": {
            "oneOf": [
              {
                "type": "array",
                "description": "Type of relay point (see relay point documentation)",
                "items": {
                  "$ref": "#/components/schemas/pickupPointType"
                }
              },
              {
                "type": "object",
                "example": "\"mondial-relay\": [\"PICKUP_POINT_RELAY_WITH_LOCKER\"],",
                "description": "Type of relay point by carrier (see relay point documentation)"
              }
            ]
          },
          "category": {
            "type": "object",
            "description": "Relay point category (see relay point documentation)"
          },
          "carrierCode": {
            "oneOf": [
              {
                "type": "string",
                "description": "Filter by carrier code"
              },
              {
                "type": "array",
                "description": "Filter by multiple carrier codes",
                "items": {}
              }
            ]
          },
          "depositDate": {
            "type": "string",
            "format": "date",
            "description": "Estimated drop-off date at the relay point (see relay point documentation)"
          },
          "packages": {
            "description": "All packages",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/packages"
            }
          },
          "countryCode": {
            "type": "string",
            "description": "Country code (ISO 3166 alpha-2)."
          },
          "accessibility": {
            "$ref": "./models/PickUpPoint/pickUpPointAccessibility.json"
          },
          "boxCategoryAccessibility": {
            "$ref": "./models/PickUpPoint/boxCategoryAccessibility.json"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "tags": {
        "type": "array",
        "description": "Allows you to set \"markers\" on this order.",
        "title": "Tags",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "example": "origin"
            },
            "value": {
              "type": "string",
              "example": "web"
            },
            "applyToOrchestration": {
              "type": "boolean",
              "description": "- If `true`, the tag is used in orchestration\n- If `false`, the tag is not used orchestration conditions.\nIn all cases, tag is transmitted to carrier."
            }
          },
          "required": [
            "key",
            "value",
            "applyToOrchestration"
          ]
        }
      },
      "address": {
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "title": "Address (address)",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "address",
            "addressLine1": "179 boulevard de Turien",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "required": [
          "addressLine1",
          "postalCode",
          "city",
          "country"
        ],
        "properties": {
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "eclpccfxu4hm9"
            },
            "description": "type required is address",
            "example": "address"
          },
          "addressLine1": {
            "type": "string",
            "description": "Full address of the main location"
          },
          "addressLine2": {
            "type": "string",
            "description": "Additional address of the location"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates whether the address has a lift, Default value: false"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor of the address in question, Default value: 0"
          },
          "doorCode": {
            "type": "string",
            "description": "Door code"
          },
          "postalCode": {
            "type": "string",
            "description": "Postcode",
            "example": "59800"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "LILLE"
          },
          "district": {
            "type": "string",
            "description": "Borough name"
          },
          "country": {
            "type": "string",
            "description": "Country code (ISO 3166 alpha-2). View list : [Country code.md]",
            "x-examples": {
              "Example": "FR"
            },
            "title": "Country (country)",
            "example": "FR"
          },
          "comment": {
            "type": "string",
            "description": "Additional comments"
          }
        }
      },
      "exchangePlaceType": {
        "type": "object",
        "x-examples": {
          "Example 1": {
            "type": "exchangePlace",
            "id": "0123",
            "comment": "commentaire"
          }
        },
        "title": "exchangePlace",
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "type required is exchangePlace",
            "example": "exchangePlace"
          },
          "id": {
            "type": "string",
            "description": "Collection point ID"
          },
          "comment": {
            "type": "string",
            "description": "A comment (overwriting comment recorded in the back-office for exchange place)"
          }
        }
      },
      "coordinatesType": {
        "type": "object",
        "x-stoplight": {
          "id": "oofbovwe8se8w"
        },
        "x-examples": {
          "Example 1": {
            "type": "exchangePlace",
            "id": "0123",
            "comment": "commentaire"
          }
        },
        "title": "coordinates",
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "required": [
          "type",
          "latitude",
          "longitude"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "type required is coordinates",
            "example": "coordinates"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of geoPoint",
            "x-stoplight": {
              "id": "4sz7wl0o181z6"
            },
            "example": 50.6389507
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of geoPoint",
            "x-stoplight": {
              "id": "b5yl95vvlkw7t"
            },
            "example": 3.0630828
          }
        }
      },
      "pickupPointTypes": {
        "type": "object",
        "x-stoplight": {
          "id": "b3154d3cc1e6b"
        },
        "x-examples": {
          "Example 1": {
            "type": "pickupPoint",
            "id": "FR-023265",
            "carrierCode": "mondial-relay"
          }
        },
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "title": "pickupPoint",
        "required": [
          "type",
          "id",
          "carrierCode"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "type required is pickupPoint",
            "example": "pickupPoint"
          },
          "id": {
            "type": "string",
            "description": "ID of the relay point"
          },
          "carrierCode": {
            "type": "string",
            "description": "Carrier code"
          },
          "comment": {
            "type": "string",
            "x-stoplight": {
              "id": "g5scvwojk6vge"
            },
            "description": "Additional comments"
          },
          "boxCategory": {
            "$ref": "./models/PickUpPoint/boxCategory(location).json"
          }
        }
      },
      "addressForEligibility": {
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "x-stoplight": {
          "id": "ai6r20urg3t8d"
        },
        "title": "address",
        "type": "object",
        "x-examples": {
          "Example": {
            "type": "address",
            "addressLine1": "179 boulevard de Turien",
            "addressLine2": "Woop",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          }
        },
        "required": [
          "type",
          "postalCode",
          "city",
          "country"
        ],
        "properties": {
          "type": {
            "type": "string",
            "x-stoplight": {
              "id": "hfcly6k0ldz6w"
            },
            "description": "type required is address",
            "example": "address"
          },
          "addressLine1": {
            "type": "string",
            "description": "Full address of the main location"
          },
          "addressLine2": {
            "type": "string",
            "description": "Additional address of the location"
          },
          "elevator": {
            "type": "boolean",
            "description": "Indicates whether the address has a lift, Default value: false"
          },
          "floor": {
            "type": "integer",
            "description": "Specifies the floor of the address in question, Default value: 0"
          },
          "doorCode": {
            "type": "string",
            "description": "Door code"
          },
          "postalCode": {
            "type": "string",
            "description": "Postcode",
            "example": "59800"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "LILLE"
          },
          "district": {
            "type": "string",
            "description": "Borough name"
          },
          "country": {
            "type": "string",
            "description": "Country code (ISO 3166 alpha-2). View list : [Country code.md]",
            "x-examples": {
              "Example": "FR"
            },
            "title": "Country (country)",
            "example": "FR"
          },
          "comment": {
            "type": "string",
            "description": "Additional comments"
          }
        }
      },
      "deliveryStatus": {
        "type": "string",
        "enum": [
          "DELIVERY_INIT",
          "DELIVERY_STARTED",
          "DELIVERY_PICK_UP_REACHED",
          "DELIVERY_PICK_UP_OK",
          "DELIVERY_PICK_UP_PARTIALLY",
          "DELIVERY_IN_PROGRESS",
          "DELIVERY_AT_DROP_OF_LOCATION",
          "DELIVERY_PICK_UP_FAILED",
          "DELIVERY_DELIVERED_WITH_CLAIM",
          "DELIVERY_CANCELLED_WITH_RETURN",
          "DELIVERY_FAILED_WITH_RETURN",
          "DELIVERY_RETURNED_TO_PICK_UP",
          "DELIVERY_DELIVERED_OK",
          "DELIVERY_DELIVERED_PARTIALLY"
        ],
        "description": "Specifies the delivery status that can be used.",
        "x-examples": {
          "Example": "DELIVERY_STARTED"
        },
        "title": "Delivery status (deliveryStatus)"
      },
      "location": {
        "title": "Location (location)",
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "x-examples": {
          "Adress": {
            "type": "address",
            "addressLine1": "179 boulevard de Turin",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          },
          "Pickup points": {
            "type": "pickupPoint",
            "id": "76761",
            "carrierCode": "bpost",
            "boxCategory": {
              "id": "XXX",
              "accessibility": "UPPER"
            }
          },
          "Exchange place": {
            "type": "exchangePlace",
            "id": "1"
          },
          "Coordinates": {
            "type": "address",
            "postalCode": "59000",
            "country": "FR",
            "coordinates": {
              "latitude": 0,
              "longitude": 0
            }
          }
        },
        "oneOf": [
          {
            "x-stoplight": {
              "id": "pzlgs6gfprft4"
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/address"
              },
              {
                "$ref": "#/components/schemas/pickupPointTypes"
              },
              {
                "$ref": "#/components/schemas/exchangePlaceType"
              },
              {
                "$ref": "#/components/schemas/coordinatesType"
              }
            ],
            "description": "Here, 3 location.types are possible (address, pickupPoint and exchangePlace). The request must be made using one of these three options."
          }
        ]
      },
      "locationForEligibility": {
        "title": "Location for eligibility method (locationForEligibility)",
        "x-stoplight": {
          "id": "8gx4wbsz21y1h"
        },
        "description": "Here, 4 location.types are possible (address, pickupPoint, exchangePlace, and coordinates). The request must be made using one of these four options.",
        "x-examples": {
          "Adress": {
            "type": "address",
            "addressLine1": "179 boulevard de Turin",
            "elevator": true,
            "floor": 8,
            "postalCode": "59000",
            "city": "Lille",
            "country": "FR"
          },
          "Pickup points": {
            "type": "pickupPoint",
            "id": "76761",
            "carrierCode": "bpost",
            "boxCategory": {
              "id": "XXX",
              "accessibility": "UPPER"
            }
          },
          "Exchange place": {
            "type": "exchangePlace",
            "id": "1"
          },
          "Coordinates": {
            "type": "address",
            "postalCode": "59000",
            "country": "FR",
            "coordinates": {
              "latitude": 0,
              "longitude": 0
            }
          }
        },
        "oneOf": [
          {
            "x-stoplight": {
              "id": "nxttbv5tsf2vf"
            },
            "description": "Here, 3 location.types are possible (address, pickupPoint and exchangePlace). The request must be made using one of these three options.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/addressForEligibility"
              },
              {
                "$ref": "#/components/schemas/exchangePlaceType"
              },
              {
                "$ref": "#/components/schemas/pickupPointTypes"
              },
              {
                "$ref": "#/components/schemas/coordinatesType"
              }
            ]
          }
        ]
      },
      "deliveryInterval": {
        "description": "Specifies the date range for a collection/delivery.",
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "title": "Delivery date slot & booking (deliveryInterval)",
        "oneOf": [
          {
            "properties": {
              "start": {
                "type": "string",
                "format": "datetime",
                "description": "Start of the time slot",
                "example": "2019-12-04T12:30:00+0000"
              },
              "end": {
                "type": "string",
                "format": "datetime",
                "description": "End of the time slot",
                "example": "2019-12-04T14:30:00+0000"
              }
            },
            "required": [
              "start",
              "end"
            ]
          },
          {
            "properties": {
              "bookingId": {
                "type": "string",
                "description": "Booking slot"
              }
            },
            "required": [
              "bookingId"
            ]
          }
        ],
        "type": "object"
      },
      "pickingInterval": {
        "description": "Specifies the date range for a collection/picking.",
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "title": "Picking date slot (pickingInterval)",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Start of the time slot",
            "example": "2019-12-04T12:30:00+0000"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "End of the time slot",
            "example": "2019-12-04T14:30:00+0000"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "interval": {
        "description": "Specifies the date range for an object.",
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000"
          }
        },
        "title": "Interval of time",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Start of the time slot",
            "example": "2019-12-04T12:30:00+0000"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "End of the time slot",
            "example": "2019-12-04T14:30:00+0000"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "interval_hour": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "time"
          },
          "end": {
            "type": "string",
            "format": "time"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "x-examples": {
          "Example": {
            "start": "14:00",
            "end": "18:00"
          }
        },
        "description": "Specifies the opening date interval.",
        "title": "Time slot (interval_hour)"
      },
      "contact": {
        "title": "Contact",
        "description": "Contact informations",
        "type": "object",
        "x-examples": {
          "Example": {
            "firstName": "Jogn",
            "lastName": "Doe",
            "phone": "+33610101010",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris",
            "main": true,
            "title": "Manager",
            "isProfessional": true
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer's last name"
          },
          "phone": {
            "type": "string",
            "description": "Customer's telephone number"
          },
          "email": {
            "type": "string",
            "description": "Customer's email address"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          },
          "main": {
            "type": "boolean",
            "description": "Main contact"
          },
          "title": {
            "type": "string",
            "description": "Contact title"
          },
          "isProfessional": {
            "type": "boolean",
            "description": "Indicates if the contact is a professional",
            "default": false
          }
        },
        "required": [
          "firstName",
          "lastName",
          "phone",
          "email",
          "language",
          "timezone"
        ]
      },
      "services": {
        "type": "array",
        "description": "Specifies the delivery services to be used. ",
        "items": {
          "$ref": "#/components/schemas/deliveryService"
        },
        "x-examples": {
          "Example": [
            "SERVICE_PICKUP_POINT"
          ]
        },
        "title": "Delivery services (services)"
      },
      "product": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/productType"
          },
          "ean": {
            "type": "string",
            "description": "Product EAN"
          },
          "cug": {
            "type": "string",
            "description": "Product Cug"
          },
          "label": {
            "type": "string",
            "description": "Product description"
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "Product quantity"
          }
        },
        "required": [
          "type"
        ]
      },
      "packages": {
        "description": "Specifies the information needed to update a package. The handling unit is to be defined with the package/product structure",
        "type": "object",
        "x-examples": {
          "Example": {
            "references": [
              {
                "reference": "12345B",
                "barcode": {
                  "value": "54fd56g4f5gfd456sd",
                  "type": "barcode",
                  "format": "128"
                }
              }
            ],
            "length": {
              "value": 200,
              "unit": "mm"
            },
            "width": {
              "value": 200,
              "unit": "mm"
            },
            "height": {
              "value": 100,
              "unit": "mm"
            },
            "weight": {
              "value": 1,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "11233",
                "cug": "KJJNN",
                "label": "Computer",
                "quantity": 1
              }
            ],
            "quantity": 1,
            "attributes": {
              "footprint": {
                "value": 13,
                "unit": "m2"
              }
            },
            "type": "PACKAGE"
          }
        },
        "title": "Package (package)",
        "properties": {
          "references": {
            "$ref": "#/components/schemas/packagesReferences"
          },
          "category": {
            "type": "string",
            "x-stoplight": {
              "id": "e072oi6neiege"
            },
            "description": "Used to retrieve the sign's parcel category. If this field is not empty, length, width and height are not mandatory"
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "List of products in the package",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "Quantity of packages"
          },
          "attributes": {
            "type": "object",
            "description": "package attributes",
            "properties": {
              "footprint": {
                "type": "object",
                "description": "package footprint on the ground",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "footprint value",
                    "example": 13
                  },
                  "unit": {
                    "type": "string",
                    "description": "footprint unit",
                    "example": "m2",
                    "enum": [
                      "m2",
                      "cm2",
                      "pallet"
                    ]
                  }
                },
                "required": [
                  "value",
                  "unit"
                ]
              }
            }
          },
          "type": {
            "type": "string",
            "description": "package type",
            "enum": [
              "PACKAGE",
              "TRAY",
              "PALLET"
            ],
            "example": "PACKAGE",
            "default": "PACKAGE"
          }
        },
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "products"
        ]
      },
      "packagesForEligibility": {
        "description": "Default : Parcel dimensions are not mandatory ! \nWarning : If you want to create eligibility with delivery slots, parcel dimensions are mandatory ! ",
        "x-stoplight": {
          "id": "v01namuxp7bxy"
        },
        "type": "object",
        "x-examples": {
          "Example": {
            "references": [
              {
                "reference": "12345B",
                "barcode": {
                  "value": "54fd56g4f5gfd456sd",
                  "type": "barcode",
                  "format": "128"
                }
              }
            ],
            "length": {
              "value": 200,
              "unit": "mm"
            },
            "width": {
              "value": 200,
              "unit": "mm"
            },
            "height": {
              "value": 100,
              "unit": "mm"
            },
            "weight": {
              "value": 1,
              "unit": "kg"
            },
            "products": [
              {
                "type": "TYPOLOGY_GENERIC",
                "ean": "11233",
                "cug": "KJJNN",
                "label": "Computer",
                "quantity": 1
              }
            ],
            "quantity": 1,
            "attributes": {
              "footprint": {
                "value": 13,
                "unit": "m2"
              }
            },
            "type": "PACKAGE"
          }
        },
        "title": "Package used for eligibility (packagesForEligibility)",
        "required": [
          "length",
          "width",
          "height",
          "weight",
          "products"
        ],
        "properties": {
          "category": {
            "type": "string",
            "description": "Used to retrieve the sign's parcel category. If this field is not empty, length, width and height are not mandatory"
          },
          "length": {
            "$ref": "#/components/schemas/length"
          },
          "width": {
            "$ref": "#/components/schemas/length"
          },
          "height": {
            "$ref": "#/components/schemas/length"
          },
          "weight": {
            "$ref": "#/components/schemas/mass"
          },
          "products": {
            "type": "array",
            "description": "List of products in the package",
            "items": {
              "$ref": "#/components/schemas/product"
            }
          },
          "quantity": {
            "type": "integer",
            "default": 1,
            "description": "Quantity of packages"
          },
          "attributes": {
            "type": "object",
            "description": "package attributes",
            "properties": {
              "footprint": {
                "type": "object",
                "description": "package footprint on the ground",
                "required": [
                  "value",
                  "unit"
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "footprint value",
                    "example": 13
                  },
                  "unit": {
                    "type": "string",
                    "description": "footprint unit",
                    "example": "m2",
                    "enum": [
                      "m2",
                      "cm2",
                      "pallet"
                    ]
                  }
                }
              }
            }
          },
          "type": {
            "type": "string",
            "description": "package type",
            "enum": [
              "PACKAGE",
              "TRAY",
              "PALLET"
            ],
            "example": "PACKAGE",
            "default": "PACKAGE"
          }
        }
      },
      "coordinates": {
        "type": "object",
        "description": "Specifies the geographical coordinates to be used for creation. ",
        "x-examples": {
          "Example": {
            "latitude": 50.63833,
            "longitude": 3.077359
          }
        },
        "title": "Geographical coordinates (coordinates)",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "length": {
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "unit": {
            "$ref": "#/components/schemas/lengthUnits"
          }
        },
        "description": "Specifies the size of a package.",
        "x-examples": {
          "Example": {
            "value": 200,
            "unit": "mm"
          }
        },
        "title": "Dimension (length)"
      },
      "mass": {
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "value": {
            "type": "number"
          },
          "unit": {
            "$ref": "#/components/schemas/massUnits"
          }
        },
        "description": "Specifies the weight of a package/product.",
        "x-examples": {
          "Example": {
            "value": 1,
            "unit": "kg"
          }
        },
        "title": "Weight (mass)"
      },
      "packagesReferences": {
        "type": "array",
        "description": "Specifies package references. Note that count of reference must be equal to package quantity",
        "title": "Package references (packagesReferences)",
        "x-examples": {
          "Example": [
            {
              "reference": "12345B",
              "barcode": {
                "value": "54fd56g4f5gfd456sd",
                "type": "barcode",
                "format": "128"
              }
            }
          ]
        },
        "items": {
          "type": "object",
          "properties": {
            "reference": {
              "type": "string",
              "description": "Specifies package references.",
              "example": "12345B"
            },
            "barcode": {
              "$ref": "./models/barcode.yaml"
            },
            "state": {
              "type": "object",
              "x-stoplight": {
                "id": "am11lni8ag5y5"
              },
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "4k1xtgr6eiqn7"
                  },
                  "enum": [
                    "ON_DOCK",
                    "PREPARED"
                  ]
                },
                "date": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "st7f1fgjha3et"
                  },
                  "format": "date-time"
                }
              }
            },
            "containerId": {
              "type": "object",
              "x-stoplight": {
                "id": "inc0hic6h1ssr"
              },
              "properties": {
                "trailerId": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "l40lhnq40wa1w"
                  }
                },
                "palletId": {
                  "type": "string",
                  "x-stoplight": {
                    "id": "k8kciwmdtp3f9"
                  }
                }
              }
            }
          }
        }
      },
      "productsPrice": {
        "description": "Corresponds to the sale prices of the products. To be entered for the service “SERVICE_INSTALL”.",
        "x-examples": {
          "Example": {
            "value": 300,
            "currency": "EUR"
          }
        },
        "title": "Product prices (productsPrice)",
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "value"
          },
          "currency": {
            "$ref": "./models/currency.yaml"
          }
        }
      },
      "pickupPointCarrier": {
        "description": "Specifies the carrier selected for a relay point.",
        "type": "object",
        "x-examples": {
          "Example": {
            "name": "Bpost",
            "code": "bpost"
          }
        },
        "title": "Relay point carrier (pickupPointCarrier)",
        "properties": {
          "name": {
            "type": "string",
            "description": "Carrier name"
          },
          "code": {
            "type": "string",
            "description": "Internal carrier code"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "cancelledReasons": {
        "type": "string",
        "description": "Specifies the cancellation reasons for a carrier.",
        "enum": [
          "CANCELLED_CANNOT_SERVICE",
          "CANCELLED_UNKNOWN",
          "CANCELLED_PREPARATION_DELAYED",
          "CANCELLED_BY_CLIENT",
          "CANCELLED_NEW_ADDRESS",
          "CANCELLED_INCOMPLETE"
        ],
        "x-examples": {
          "Example": "CANCELLED_CANNOT_SERVICE"
        },
        "title": "Cancellation reason (cancelledReasons)"
      },
      "deliveryService": {
        "type": "string",
        "description": "Specifies the delivery service that can be used. Note that some services cannot be cumulated such as 'STANDARD_TAXI' and 'XL_TAXI' or 'FRONT_HOME' and 'SELECTED_ROOM'",
        "enum": [
          "SERVICE_ASSEMBLY",
          "SERVICE_INSTALL",
          "SERVICE_RECOVERY",
          "SERVICE_UNPACKING",
          "SERVICE_FRONT_HOME",
          "SERVICE_REGULAR_FRONT_HOME",
          "SERVICE_PICKUP_POINT",
          "SERVICE_RETURN",
          "SERVICE_SELECTED_ROOM",
          "SERVICE_SIMPLE_INSTALL",
          "SERVICE_COMPLEX_INSTALL",
          "SERVICE_PAY_ON_DELIVERY",
          "SERVICE_STANDARD_TAXI",
          "SERVICE_XL_TAXI",
          "SERVICE_WITH_SIGNATURE",
          "SERVICE_GREEN",
          "SERVICE_SHUTTLE",
          "SERVICE_TWO_DRIVERS",
          "SERVICE_EXHIBITION_MODEL",
          "SERVICE_WHITE_GLOVE",
          "SERVICE_EXCHANGE",
          "SERVICE_DELIVERY_TO_MAILBOX",
          "SERVICE_SCHEDULED",
          "SERVICE_FREIGHT_ELEVATOR"
        ],
        "x-examples": {
          "Example": "SERVICE_PICKUP_POINT"
        },
        "title": "Delivery service (deliveryService)"
      },
      "productType": {
        "type": "string",
        "description": "Specifies the product type.",
        "enum": [
          "TYPOLOGY_GENERIC",
          "TYPOLOGY_GROCERY",
          "TYPOLOGY_FRESH",
          "TYPOLOGY_FROZEN",
          "TYPOLOGY_DANGEROUS",
          "TYPOLOGY_HOUSEHOLD",
          "TYPOLOGY_VOLUMINOUS",
          "TYPOLOGY_FRAGILE",
          "TYPOLOGY_VOLUMINOUS_FRAGILE",
          "TYPOLOGY_LARGE_HOUSEHOLD",
          "TYPOLOGY_SMALL_HOUSEHOLD"
        ],
        "x-examples": {
          "Example": "TYPOLOGY_GENERIC"
        },
        "title": "Product type (productType)"
      },
      "lengthUnits": {
        "type": "string",
        "description": "Specifies the unit of measurement for the dimensions.",
        "enum": [
          "mm",
          "cm",
          "m",
          "km",
          "in",
          "ft-us",
          "ft",
          "mi"
        ],
        "x-examples": {
          "Example": "mm"
        },
        "title": "Unit of measurement (lengthUnit)"
      },
      "massUnits": {
        "type": "string",
        "description": "Specifies the unit of weight.",
        "enum": [
          "kg",
          "mcg",
          "mg",
          "g",
          "oz",
          "lb",
          "mt",
          "t"
        ],
        "x-examples": {
          "Example": "kg"
        },
        "title": "Unit of weight (massUnits)"
      },
      "country": {
        "type": "string",
        "description": "Country code (ISO 3166 alpha-2).",
        "enum": [
          "FR",
          "BE"
        ],
        "x-examples": {
          "Example": "FR"
        },
        "title": "Country (country)"
      },
      "language": {
        "type": "string",
        "title": "Language (language)",
        "description": "Specifies the language code to be used for the collection/delivery contact.",
        "x-examples": {
          "Example": "fr"
        },
        "example": "fr",
        "enum": [
          "en",
          "fr",
          "es",
          "nl"
        ]
      },
      "timezone": {
        "type": "string",
        "title": "Time zone (timezone)",
        "description": "Refer to the page below https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
        "example": "Europe/Paris",
        "x-examples": {
          "Example": "Europe/Paris"
        }
      },
      "availableSlot": {
        "description": "Collection time slot.",
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Start of the time slot"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "End of the time slot"
          },
          "remainingCapacity": {
            "type": "number",
            "description": "Remaining availability for this time slot"
          }
        },
        "required": [
          "start",
          "end",
          "remainingCapacity"
        ],
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000",
            "remainingCapacity": 5
          }
        },
        "title": "Available collection time slot (availableSlot)"
      },
      "slot": {
        "description": "Collection time slot (without reservation or availability check).",
        "type": "object",
        "x-examples": {
          "Example": {
            "start": "2019-05-02T15:52:01+0000",
            "end": "2019-05-02T17:52:01+0000",
            "expiredAt": "2019-05-04T12:00:01+0000"
          }
        },
        "title": "Collection time slot (slot)",
        "properties": {
          "start": {
            "type": "string",
            "format": "datetime",
            "description": "Start of the time slot"
          },
          "end": {
            "type": "string",
            "format": "datetime",
            "description": "End of the time slot"
          },
          "expiredAt": {
            "type": "string",
            "format": "datetime",
            "description": "Validity limit of slots (max 1 week)",
            "example": "2022-11-22T09:00:007Z"
          }
        },
        "required": [
          "start",
          "end"
        ]
      },
      "orderStatus": {
        "title": "Order status (orderStatus)",
        "type": "string",
        "enum": [
          "ORDER_CREATED",
          "ORDER_UPDATED",
          "ORDER_TO_BE_COMPLETED",
          "ORDER_WITH_NO_CARRIER_ELIGIBLE",
          "ORDER_TO_BE_QUOTED",
          "ORDER_QUOTED",
          "ORDER_WITH_NO_QUOTE",
          "ORDER_QUOTE_TO_BE_CONFIRMED",
          "ORDER_TO_BE_SENT_TO_CARRIER",
          "ORDER_WITH_NO_CARRIER_AVAILABLE",
          "ORDER_REFUSED_DELIVERY",
          "ORDER_TO_DELIVER",
          "ORDER_BEING_DELIVERED",
          "ORDER_DELIVERY_UNCOMPLETED",
          "ORDER_DELIVERED",
          "ORDER_CANCELLED"
        ],
        "description": "Specifies the order status."
      },
      "pickupPoint": {
        "type": "object",
        "properties": {
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/address"
              },
              {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "required": [
                  "title"
                ]
              }
            ],
            "description": "Address of the relay point"
          },
          "coordinates": {
            "$ref": "#/components/schemas/coordinates"
          },
          "id": {
            "type": "string",
            "description": "ID of the relay point"
          },
          "carrier": {
            "$ref": "#/components/schemas/pickupPointCarrier"
          },
          "category": {
            "type": "string",
            "example": "Cat1",
            "description": "The relay point category."
          },
          "type": {
            "type": "string",
            "example": "Cat1",
            "description": "The type of relay point."
          },
          "openingHours": {
            "type": "object",
            "description": "Opening hours of the relay point",
            "properties": {
              "monday": {
                "type": "array",
                "description": "Monday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "tuesday": {
                "type": "array",
                "description": "Tuesday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "wednesday": {
                "type": "array",
                "description": "Wednesday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "thursday": {
                "type": "array",
                "description": "Thursday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "friday": {
                "type": "array",
                "description": "Friday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "saturday": {
                "type": "array",
                "description": "Saturday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              },
              "sunday": {
                "type": "array",
                "description": "Sunday opening hours",
                "items": {
                  "$ref": "#/components/schemas/interval_hour"
                }
              }
            }
          },
          "closingDates": {
            "type": "array",
            "description": "List of temporary closure dates of the relay point",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "maxWeight": {
            "$ref": "#/components/schemas/mass"
          },
          "accessibility": {
            "$ref": "./models/PickUpPoint/pickUpPointAccessibility.json",
            "x-stoplight": {
              "id": "vh91tvpi0os1u"
            }
          },
          "boxCategory": {
            "$ref": "./models/PickUpPoint/boxCategory.json",
            "x-stoplight": {
              "id": "pemk7bytsu7w7"
            }
          }
        },
        "required": [
          "address",
          "coordinates",
          "id",
          "carrier",
          "openingHours",
          "maxWeight"
        ]
      },
      "pickupPointType": {
        "title": "The type of relay point",
        "description": "The type of relay point",
        "type": "string",
        "enum": [
          "PICKUP_POINT_AGENCY",
          "PICKUP_POINT_POST_OFFICE",
          "PICKUP_POINT_RELAY_WITH_LOCKER",
          "PICKUP_POINT_RELAY_WITHOUT_LOCKER",
          "PICKUP_POINT_ALL"
        ],
        "default": "PICKUP_POINT_ALL",
        "example": "PICKUP_POINT_RELAY_WITHOUT_LOCKER"
      },
      "errorCode": {
        "title": "Error code (errorCode)",
        "type": "object",
        "x-examples": {
          "409 - Conflict ": {
            "statusCode": 409,
            "error": "Conflict",
            "message": "Conflict"
          }
        },
        "description": "Corresponds to the model returned in the event of an API error.",
        "properties": {
          "statusCode": {
            "type": "integer",
            "description": "HTTP Status Code"
          },
          "error": {
            "type": "string",
            "description": "Title of the error returned"
          },
          "message": {
            "type": "string",
            "description": "Description of the error message"
          },
          "reasons": {
            "type": "array",
            "description": "List of possible technical reasons",
            "items": {
              "type": "string",
              "enum": [
                "STORE_NOT_FOUND",
                "EXCHANGE_PLACE_NOT_FOUND",
                "PICKUP_POINT_NOT_FOUND"
              ]
            }
          }
        }
      },
      "contactDelivery": {
        "title": "Delivery contact (contactDelivery)",
        "description": "Delivery contact information. (telephone not required)",
        "type": "object",
        "x-examples": {
          "Example": {
            "firstName": "Jogn",
            "lastName": "Doe",
            "email": "johndoe@mail.com",
            "language": "fr",
            "timezone": "Europe/Paris",
            "isProfessional": true
          }
        },
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Customer's first name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer's last name"
          },
          "phone": {
            "type": "string",
            "description": "Customer's telephone number"
          },
          "email": {
            "type": "string",
            "description": "Customer's email address"
          },
          "optIn": {
            "$ref": "#/components/schemas/optIn"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "timezone": {
            "$ref": "#/components/schemas/timezone"
          },
          "isProfessional": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if the contact is a professional"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "language",
          "timezone"
        ]
      },
      "collectStatus": {
        "type": "string",
        "title": "Collect status (collectStatus)",
        "description": "Specifies the collect statuses that can be used.",
        "enum": [
          "COLLECT_INIT",
          "COLLECT_STARTED",
          "COLLECT_READY",
          "COLLECT_AWAITING",
          "COLLECT_IN_PROGRESS",
          "COLLECT_PICK_UP_OK",
          "COLLECT_PICK_UP_FAILED",
          "COLLECT_PICK_UP_PARTIALLY",
          "COLLECT_BLOCKED",
          "COLLECT_DELAYED",
          "COLLECT_REPLANNED"
        ]
      },
      "carrierSelection": {
        "title": "carrierSelection",
        "x-stoplight": {
          "id": "xe3fbbamllx4n"
        },
        "type": "object",
        "description": "contains all the data regarding the selection or exclusion of some carriers from the process involved",
        "properties": {
          "mode": {
            "type": "string",
            "description": "mode of the selection",
            "enum": [
              "INCLUSION",
              "EXCLUSION"
            ],
            "example": "INCLUSION"
          },
          "carrierCodes": {
            "type": "array",
            "description": "list of carrierCodes concerned by the selection",
            "items": {
              "type": "string",
              "example": "chronopost"
            }
          }
        },
        "required": [
          "mode",
          "carrierCodes"
        ]
      },
      "estimatedCO2e": {
        "title": "estimatedCO2e",
        "x-stoplight": {
          "id": "79d3wqkl7ud66"
        },
        "type": "object",
        "x-examples": {
          "Example": {
            "unit": "KgCO2e",
            "value": 0,
            "reliabilityScore": 0
          }
        },
        "description": "CO2e emissions estimated by Woop based on data collected from carriers and retailers.",
        "properties": {
          "unit": {
            "x-stoplight": {
              "id": "1ase6pb6hzwxn"
            },
            "enum": [
              "KgCO2e"
            ],
            "description": "The unit used to calculate the CO2e emissions"
          },
          "value": {
            "type": "integer",
            "x-stoplight": {
              "id": "50x6lkgekgrp3"
            },
            "description": "The amount of the emission"
          },
          "reliabilityScore": {
            "type": "integer",
            "x-stoplight": {
              "id": "m7tj4qafxlzvn"
            },
            "description": "Calculated by Woop on the 5 points scale, based on the data collected from carriers and retailers."
          }
        },
        "required": [
          "unit",
          "value",
          "reliabilityScore"
        ]
      },
      "emissions": {
        "title": "emissions",
        "x-stoplight": {
          "id": "2gmtmbyaksuzv"
        },
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/estimatedCO2e"
          }
        },
        "required": [
          "id"
        ],
        "x-examples": {
          "Example": {
            "emissions": {
              "estimatedCO2e": {
                "unit": "KgCO2e",
                "value": 13.91334,
                "reliabilityScore": 2
              }
            }
          }
        }
      },
      "optIn": {
        "title": "Opt-in (optIn)",
        "x-stoplight": {
          "id": "5n7ri6a7on6ao"
        },
        "type": "object",
        "description": "Defines the explicit consent of the customer to be contacted for survey or delivery tracking events for a specific channel.\nIf a channel is not present, notifications won't be sent on this channel\n\nTo ensure backward compatibility, if the optin section is not sent, then the customer's implicit consent will be considered and notifications sent.",
        "properties": {
          "survey": {
            "type": "array",
            "x-stoplight": {
              "id": "g2srfodbx51r6"
            },
            "description": "For all notifications related to satisfaction survey.",
            "items": {
              "$ref": "#/components/schemas/channel"
            }
          },
          "delivery": {
            "type": "array",
            "x-stoplight": {
              "id": "5wt2mzeuyae1g"
            },
            "description": "For all notifications related to delivery tracking.",
            "items": {
              "$ref": "#/components/schemas/channel"
            }
          }
        },
        "required": [
          "survey",
          "delivery"
        ]
      },
      "channel": {
        "title": "Channel",
        "x-stoplight": {
          "id": "ticb7e682kioc"
        },
        "enum": [
          "MAIL",
          "SMS"
        ],
        "description": "Refers to the channel use to communicate."
      },
      "postGeoShape": {
        "type": "object",
        "x-stoplight": {
          "id": "4766bb51a1262"
        },
        "x-examples": {
          "Example 1": {
            "title": "string",
            "zoneType": "exclude",
            "type": "iris",
            "file": "string",
            "countryCode": "string",
            "carrierId": 0,
            "storeId": 0,
            "exchangePlaceId": 0
          }
        },
        "title": "postGeoShape",
        "description": "Create a new geoShape",
        "required": [
          "title",
          "zoneType",
          "type",
          "file",
          "countryCode"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the geoShape\n\n"
          },
          "zoneType": {
            "description": "Type of the zone\n\n",
            "enum": [
              "exclude",
              "include"
            ]
          },
          "type": {
            "description": "Type of the geoShape\n\n",
            "enum": [
              "iris",
              "insee",
              "custom"
            ]
          },
          "file": {
            "type": "string",
            "description": "GeoJSON or KML file\n\n"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code (ISO 3166 alpha-2). View list : [Country code.md]"
          },
          "carrierId": {
            "type": "string",
            "description": "Carrier ID\n\n"
          },
          "storeId": {
            "type": "string",
            "description": "Store ID\n\n"
          },
          "exchangePlaceId": {
            "type": "string",
            "description": "Exchange place ID\n\n"
          }
        }
      }
    },
    "parameters": {
      "apiVersion": {
        "in": "header",
        "name": "x-api-version",
        "description": "Target API version",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1.6.0"
        }
      },
      "queryDeliveryStatus": {
        "in": "query",
        "name": "deliveryStatus",
        "description": "Filters the order list by delivery status",
        "schema": {
          "type": "string",
          "example": "DELIVERY_PICK_UP_KO"
        },
        "required": true
      },
      "queryPickingDate": {
        "in": "query",
        "required": false,
        "name": "pickingDate",
        "description": "Filter by picking date. Allows the retrieval of orders before this date.",
        "schema": {
          "type": "string",
          "format": "datetime",
          "example": "2019-12-06T12:00:00Z"
        }
      },
      "queryPickupPointCarrierCode": {
        "in": "query",
        "name": "carrierCode",
        "description": "Filter by carrier code",
        "schema": {
          "type": "string",
          "example": "bpost"
        }
      },
      "queryStoreId": {
        "in": "query",
        "name": "storeId",
        "description": "Filter by store ID",
        "schema": {
          "type": "string"
        }
      },
      "queryStoreIdRequired": {
        "in": "query",
        "required": true,
        "description": "Filter by store ID",
        "name": "storeId",
        "schema": {
          "type": "string"
        }
      },
      "queryMode": {
        "in": "query",
        "name": "mode",
        "description": "Label format",
        "schema": {
          "type": "string",
          "default": "pdf",
          "enum": [
            "pdf",
            "zpl"
          ]
        }
      },
      "pathOrderId": {
        "in": "path",
        "required": true,
        "description": "Order identifier",
        "name": "orderId",
        "schema": {
          "type": "string"
        }
      },
      "pathDocumentId": {
        "in": "path",
        "required": true,
        "description": "Identifier of the document",
        "name": "documentId",
        "schema": {
          "type": "string"
        }
      },
      "pathPriceId": {
        "in": "path",
        "required": true,
        "description": "Identifier for the price request",
        "name": "priceId",
        "schema": {
          "type": "string"
        }
      },
      "queryExchangePlaceIdRequired": {
        "in": "query",
        "required": true,
        "description": "Filter by collection point ID",
        "name": "exchangePlaceId",
        "schema": {
          "type": "string"
        }
      },
      "queryFromDateSlots": {
        "in": "query",
        "required": false,
        "description": "Start date of returned time slots (today if not entered)",
        "name": "fromDate",
        "example": "2021-07-21",
        "schema": {
          "type": "string"
        }
      },
      "queryToDateSlots": {
        "in": "query",
        "required": true,
        "description": "End date of returned time slots",
        "name": "toDate",
        "example": "2021-07-25",
        "schema": {
          "type": "string"
        }
      },
      "pathPickupPointId": {
        "in": "path",
        "required": true,
        "description": "Relay point identifier",
        "name": "pickupPointId",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "GeoShapeGetResponse": {
        "description": "GeoShape retrieved successfully\n\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "x-examples": {
                "Example 1": [
                  {
                    "id": 1,
                    "title": "Example Title",
                    "zoneType": "include",
                    "type": "iris",
                    "countryCode": "FR",
                    "storageKey": "example_storage_key",
                    "carrierId": 12345,
                    "storeId": 67890,
                    "exchangePlaceId": 54321
                  }
                ]
              },
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "title",
                  "zoneType",
                  "type",
                  "countryCode",
                  "storageKey",
                  "carrierId",
                  "storeId",
                  "exchangePlaceId",
                  "createdAt",
                  "expiredAt"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ID of the geoShape\n\n"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the geoShape\n\n",
                    "example": "example title"
                  },
                  "zoneType": {
                    "enum": [
                      "exclude",
                      "include"
                    ],
                    "description": "Type of the zone\n\n"
                  },
                  "type": {
                    "enum": [
                      "iris",
                      "insee",
                      "custom"
                    ],
                    "description": "Type of the geoShape"
                  },
                  "countryCode": {
                    "type": "string",
                    "example": "FR",
                    "description": "Country code (ISO 3166 alpha-2). View list : [Country code.md]"
                  },
                  "storageKey": {
                    "type": "string",
                    "example": "example_storage_key ",
                    "description": "Storage key of the file"
                  },
                  "carrierId": {
                    "type": "string",
                    "description": "Carrier ID\n\n"
                  },
                  "storeId": {
                    "type": "string",
                    "description": "storeId"
                  },
                  "exchangePlaceId": {
                    "type": "string",
                    "description": "Exchange place ID\n\n"
                  },
                  "createdAt": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "epoqbumsa0w1q"
                    },
                    "description": "Date of creation\n\n",
                    "format": "date-time"
                  },
                  "expiredAt": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "06uqwxk1rpiey"
                    },
                    "description": "Date on which file ceased to be stored\n\n",
                    "format": "date-time"
                  }
                }
              }
            },
            "examples": {
              "Example 1": {
                "value": [
                  {
                    "id": 1,
                    "title": "Example Title",
                    "zoneType": "include",
                    "type": "iris",
                    "countryCode": "FR",
                    "storageKey": "example_storage_key",
                    "carrierId": 12345,
                    "storeId": 67890,
                    "exchangePlaceId": 54321
                  }
                ]
              }
            }
          }
        }
      },
      "GeoShapePostResponse": {
        "description": "GeoShape created successfully\n\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "id": 0,
                  "title": "string",
                  "zoneType": "exclude",
                  "type": "iris",
                  "countryCode": "string",
                  "storageKey": "string",
                  "expiredAt": "2024-03-06T09:08:22.814Z"
                }
              },
              "required": [
                "id",
                "title",
                "zoneType",
                "type",
                "countryCode",
                "storageKey"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of the geoShape\n\n"
                },
                "title": {
                  "type": "string",
                  "description": "Title of the geoShape\n\n"
                },
                "zoneType": {
                  "description": "Type of the zone\n\n",
                  "enum": [
                    "exclude",
                    "include"
                  ]
                },
                "type": {
                  "enum": [
                    "iris",
                    "insee",
                    "custom"
                  ],
                  "description": "Type of the geoShape\n\n"
                },
                "countryCode": {
                  "type": "string",
                  "description": "Country code\n\n"
                },
                "storageKey": {
                  "type": "string",
                  "description": "Storage key\n\n"
                },
                "expiredAt": {
                  "type": "string",
                  "description": "Whether the geoShape is expired or not\n\n",
                  "format": "date-time"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}